commit: d8086f14

semantic_typescript Summary:
AST Parsed     : 6456/6456 (100.00%)
Positive Passed: 3815/6456 (59.09%)
tasks/coverage/typescript/tests/cases/compiler/APILibCheck.ts
semantic error: `import lib = require(...);` is only supported when compiling modules to CommonJS.
Please consider using `import lib from '...';` alongside Typescript's --allowSyntheticDefaultImports option, or add @babel/plugin-transform-modules-commonjs to your Babel config.
`import lib = require(...);` is only supported when compiling modules to CommonJS.
Please consider using `import lib from '...';` alongside Typescript's --allowSyntheticDefaultImports option, or add @babel/plugin-transform-modules-commonjs to your Babel config.
`import lib = require(...);` is only supported when compiling modules to CommonJS.
Please consider using `import lib from '...';` alongside Typescript's --allowSyntheticDefaultImports option, or add @babel/plugin-transform-modules-commonjs to your Babel config.
`import lib = require(...);` is only supported when compiling modules to CommonJS.
Please consider using `import lib from '...';` alongside Typescript's --allowSyntheticDefaultImports option, or add @babel/plugin-transform-modules-commonjs to your Babel config.

tasks/coverage/typescript/tests/cases/compiler/APISample_Watch.ts
semantic error: `import lib = require(...);` is only supported when compiling modules to CommonJS.
Please consider using `import lib from '...';` alongside Typescript's --allowSyntheticDefaultImports option, or add @babel/plugin-transform-modules-commonjs to your Babel config.

tasks/coverage/typescript/tests/cases/compiler/APISample_WatchWithDefaults.ts
semantic error: `import lib = require(...);` is only supported when compiling modules to CommonJS.
Please consider using `import lib from '...';` alongside Typescript's --allowSyntheticDefaultImports option, or add @babel/plugin-transform-modules-commonjs to your Babel config.

tasks/coverage/typescript/tests/cases/compiler/APISample_WatchWithOwnWatchHost.ts
semantic error: `import lib = require(...);` is only supported when compiling modules to CommonJS.
Please consider using `import lib from '...';` alongside Typescript's --allowSyntheticDefaultImports option, or add @babel/plugin-transform-modules-commonjs to your Babel config.

tasks/coverage/typescript/tests/cases/compiler/APISample_compile.ts
semantic error: `import lib = require(...);` is only supported when compiling modules to CommonJS.
Please consider using `import lib from '...';` alongside Typescript's --allowSyntheticDefaultImports option, or add @babel/plugin-transform-modules-commonjs to your Babel config.

tasks/coverage/typescript/tests/cases/compiler/APISample_jsdoc.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Annotations", "console", "getAllTags", "getAnnotations", "getReturnTypeFromJSDoc", "getSomeOtherTags", "parseCommentsIntoDefinition", "parseSpecificTags", "ts"]
current  scope ScopeId(0): ["getAllTags", "getAnnotations", "getReturnTypeFromJSDoc", "getSomeOtherTags", "parseCommentsIntoDefinition", "parseSpecificTags", "ts"]

tasks/coverage/typescript/tests/cases/compiler/APISample_linter.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["console", "delint", "fileNames", "process", "readFileSync", "ts"]
current  scope ScopeId(0): ["delint", "fileNames", "ts"]
reference Mismatch:
previous reference ReferenceId(43): Some("console")
current  reference ReferenceId(37): None
reference Mismatch:
previous reference ReferenceId(48): Some("process")
current  reference ReferenceId(42): None
reference Mismatch:
previous reference ReferenceId(52): Some("readFileSync")
current  reference ReferenceId(46): None

tasks/coverage/typescript/tests/cases/compiler/APISample_parseConfig.ts
semantic error: `import lib = require(...);` is only supported when compiling modules to CommonJS.
Please consider using `import lib from '...';` alongside Typescript's --allowSyntheticDefaultImports option, or add @babel/plugin-transform-modules-commonjs to your Babel config.

tasks/coverage/typescript/tests/cases/compiler/APISample_transform.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["console", "result", "source", "ts"]
current  scope ScopeId(0): ["result", "source", "ts"]
reference Mismatch:
previous reference ReferenceId(3): Some("console")
current  reference ReferenceId(3): None

tasks/coverage/typescript/tests/cases/compiler/APISample_watcher.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["console", "currentDirectoryFiles", "fs", "path", "process", "ts", "watch"]
current  scope ScopeId(0): ["currentDirectoryFiles", "ts", "watch"]
reference Mismatch:
previous reference ReferenceId(13): Some("fs")
current  reference ReferenceId(8): None
reference Mismatch:
previous reference ReferenceId(17): Some("fs")
current  reference ReferenceId(12): None
reference Mismatch:
previous reference ReferenceId(19): Some("process")
current  reference ReferenceId(14): None
reference Mismatch:
previous reference ReferenceId(23): Some("fs")
current  reference ReferenceId(18): None
reference Mismatch:
previous reference ReferenceId(25): Some("fs")
current  reference ReferenceId(20): None
reference Mismatch:
previous reference ReferenceId(33): Some("fs")
current  reference ReferenceId(28): None
reference Mismatch:
previous reference ReferenceId(44): Some("console")
current  reference ReferenceId(39): None
reference Mismatch:
previous reference ReferenceId(46): Some("console")
current  reference ReferenceId(41): None
reference Mismatch:
previous reference ReferenceId(51): Some("fs")
current  reference ReferenceId(46): None
reference Mismatch:
previous reference ReferenceId(65): Some("console")
current  reference ReferenceId(60): None
reference Mismatch:
previous reference ReferenceId(70): Some("console")
current  reference ReferenceId(65): None
reference Mismatch:
previous reference ReferenceId(72): Some("fs")
current  reference ReferenceId(67): None
reference Mismatch:
previous reference ReferenceId(73): Some("process")
current  reference ReferenceId(68): None

tasks/coverage/typescript/tests/cases/compiler/abstractInterfaceIdentifierName.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["abstract"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/abstractPropertyBasics.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["A", "B", "C"]
current  scope ScopeId(0): ["B", "C"]

tasks/coverage/typescript/tests/cases/compiler/acceptableAlias1.ts
semantic error: Semantic Collector failed after transform
Missing SymbolId: r

tasks/coverage/typescript/tests/cases/compiler/addMoreCallSignaturesToBaseSignature.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Bar", "Foo", "a", "kitty"]
current  scope ScopeId(0): ["a", "kitty"]

tasks/coverage/typescript/tests/cases/compiler/addMoreCallSignaturesToBaseSignature2.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Bar", "Foo", "a", "kitty"]
current  scope ScopeId(0): ["a", "kitty"]

tasks/coverage/typescript/tests/cases/compiler/aliasOfGenericFunctionWithRestBehavedSameAsUnaliased.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["ExtendedMapper", "ExtendedMapper1", "ExtendedMapper2", "a", "a1", "a2", "a3", "b", "b1", "b2", "b3", "check", "check1", "check2", "check3", "test", "test1", "test2", "test3"]
current  scope ScopeId(0): ["check", "check1", "check2", "check3"]

tasks/coverage/typescript/tests/cases/compiler/aliasUsageInAccessorsOfClass.ts
semantic error: `import lib = require(...);` is only supported when compiling modules to CommonJS.
Please consider using `import lib from '...';` alongside Typescript's --allowSyntheticDefaultImports option, or add @babel/plugin-transform-modules-commonjs to your Babel config.

tasks/coverage/typescript/tests/cases/compiler/aliasUsageInArray.ts
semantic error: `import lib = require(...);` is only supported when compiling modules to CommonJS.
Please consider using `import lib from '...';` alongside Typescript's --allowSyntheticDefaultImports option, or add @babel/plugin-transform-modules-commonjs to your Babel config.

tasks/coverage/typescript/tests/cases/compiler/aliasUsageInFunctionExpression.ts
semantic error: `import lib = require(...);` is only supported when compiling modules to CommonJS.
Please consider using `import lib from '...';` alongside Typescript's --allowSyntheticDefaultImports option, or add @babel/plugin-transform-modules-commonjs to your Babel config.

tasks/coverage/typescript/tests/cases/compiler/aliasUsageInGenericFunction.ts
semantic error: `import lib = require(...);` is only supported when compiling modules to CommonJS.
Please consider using `import lib from '...';` alongside Typescript's --allowSyntheticDefaultImports option, or add @babel/plugin-transform-modules-commonjs to your Babel config.

tasks/coverage/typescript/tests/cases/compiler/aliasUsageInIndexerOfClass.ts
semantic error: `import lib = require(...);` is only supported when compiling modules to CommonJS.
Please consider using `import lib from '...';` alongside Typescript's --allowSyntheticDefaultImports option, or add @babel/plugin-transform-modules-commonjs to your Babel config.

tasks/coverage/typescript/tests/cases/compiler/aliasUsageInObjectLiteral.ts
semantic error: `import lib = require(...);` is only supported when compiling modules to CommonJS.
Please consider using `import lib from '...';` alongside Typescript's --allowSyntheticDefaultImports option, or add @babel/plugin-transform-modules-commonjs to your Babel config.

tasks/coverage/typescript/tests/cases/compiler/aliasUsageInOrExpression.ts
semantic error: `import lib = require(...);` is only supported when compiling modules to CommonJS.
Please consider using `import lib from '...';` alongside Typescript's --allowSyntheticDefaultImports option, or add @babel/plugin-transform-modules-commonjs to your Babel config.

tasks/coverage/typescript/tests/cases/compiler/aliasUsageInTypeArgumentOfExtendsClause.ts
semantic error: `import lib = require(...);` is only supported when compiling modules to CommonJS.
Please consider using `import lib from '...';` alongside Typescript's --allowSyntheticDefaultImports option, or add @babel/plugin-transform-modules-commonjs to your Babel config.

tasks/coverage/typescript/tests/cases/compiler/aliasUsageInVarAssignment.ts
semantic error: `import lib = require(...);` is only supported when compiling modules to CommonJS.
Please consider using `import lib from '...';` alongside Typescript's --allowSyntheticDefaultImports option, or add @babel/plugin-transform-modules-commonjs to your Babel config.

tasks/coverage/typescript/tests/cases/compiler/aliasUsedAsNameValue.ts
semantic error: `import lib = require(...);` is only supported when compiling modules to CommonJS.
Please consider using `import lib from '...';` alongside Typescript's --allowSyntheticDefaultImports option, or add @babel/plugin-transform-modules-commonjs to your Babel config.
`import lib = require(...);` is only supported when compiling modules to CommonJS.
Please consider using `import lib from '...';` alongside Typescript's --allowSyntheticDefaultImports option, or add @babel/plugin-transform-modules-commonjs to your Babel config.

tasks/coverage/typescript/tests/cases/compiler/allowJsCrossMonorepoPackage.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["x"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/ambientClassDeclarationWithExtends.ts
semantic error: Semantic Collector failed after transform
Missing SymbolId: D
Missing SymbolId: _D
Missing ReferenceId: D
Missing ReferenceId: D

tasks/coverage/typescript/tests/cases/compiler/ambientClassMergesOverloadsWithInterface.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["C"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/ambientEnumElementInitializer1.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["E"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/ambientEnumElementInitializer2.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["E"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/ambientEnumElementInitializer3.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["E"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/ambientEnumElementInitializer4.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["E"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/ambientEnumElementInitializer5.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["E"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/ambientEnumElementInitializer6.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["M"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/ambientExternalModuleReopen.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["fs"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/ambientExternalModuleWithInternalImportDeclaration.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["M"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/ambientExternalModuleWithoutInternalImportDeclaration.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["M"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/ambientFundule.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["f"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/ambientModuleExports.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Foo", "Foo2", "c", "c2"]
current  scope ScopeId(0): ["c", "c2"]

tasks/coverage/typescript/tests/cases/compiler/ambientModuleWithClassDeclarationWithExtends.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["foo"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/ambientModuleWithTemplateLiterals.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Foo"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/ambientModules.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Foo"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/ambientNameRestrictions.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Foo"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/amdModuleConstEnumUsage.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(1): ["A", "B", "CharCode"]
current  scope ScopeId(1): ["CharCode"]

tasks/coverage/typescript/tests/cases/compiler/anonterface.ts
semantic error: Semantic Collector failed after transform
Missing SymbolId: M
Missing SymbolId: _M
Missing ReferenceId: _M
Missing ReferenceId: C
Missing ReferenceId: M
Missing ReferenceId: M

tasks/coverage/typescript/tests/cases/compiler/anyAndUnknownHaveFalsyComponents.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["foo1", "foo2", "isTreeHeader1", "isTreeHeader2", "x1", "x2", "y1", "y2"]
current  scope ScopeId(0): ["foo1", "foo2", "y1", "y2"]
reference Mismatch:
previous reference ReferenceId(0): Some("x1")
current  reference ReferenceId(0): None
reference Mismatch:
previous reference ReferenceId(1): Some("isTreeHeader1")
current  reference ReferenceId(1): None
reference Mismatch:
previous reference ReferenceId(2): Some("x2")
current  reference ReferenceId(2): None
reference Mismatch:
previous reference ReferenceId(3): Some("isTreeHeader1")
current  reference ReferenceId(3): None

tasks/coverage/typescript/tests/cases/compiler/anyIsAssignableToObject.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["P", "Q"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/anyIsAssignableToVoid.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["P", "Q"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/argumentsAsPropertyName.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["MyType", "myFunction"]
current  scope ScopeId(0): ["myFunction"]

tasks/coverage/typescript/tests/cases/compiler/arrayAssignmentTest6.ts
semantic error: Semantic Collector failed after transform
Missing SymbolId: Test
Missing SymbolId: _Test
Missing ReferenceId: _Test
Missing ReferenceId: Bug
Missing ReferenceId: Test
Missing ReferenceId: Test

tasks/coverage/typescript/tests/cases/compiler/arrayAugment.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Array", "x", "y"]
current  scope ScopeId(0): ["x", "y"]

tasks/coverage/typescript/tests/cases/compiler/arrayBestCommonTypes.ts
semantic error: Semantic Collector failed after transform
Missing SymbolId: EmptyTypes
Missing SymbolId: _EmptyTypes
Missing ReferenceId: EmptyTypes
Missing ReferenceId: EmptyTypes
Missing SymbolId: NonEmptyTypes
Missing SymbolId: _NonEmptyTypes
Missing ReferenceId: NonEmptyTypes
Missing ReferenceId: NonEmptyTypes

tasks/coverage/typescript/tests/cases/compiler/arrayConcat3.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Fn", "doStuff"]
current  scope ScopeId(0): ["doStuff"]
Bindings Mismatch:
previous scope ScopeId(2): ["T", "T1", "a", "b"]
current  scope ScopeId(1): ["a", "b"]

tasks/coverage/typescript/tests/cases/compiler/arrayDestructuringInSwitch1.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["BooleanLogicExpression", "Expression", "evaluate"]
current  scope ScopeId(0): ["evaluate"]

tasks/coverage/typescript/tests/cases/compiler/arrayFlatNoCrashInference.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(1): ["T", "arr", "depth"]
current  scope ScopeId(1): ["arr", "depth"]

tasks/coverage/typescript/tests/cases/compiler/arrayFromAsync.ts
semantic error: Expected `(` but found `await`

tasks/coverage/typescript/tests/cases/compiler/arrayLiteralContextualType.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Elephant", "Giraffe", "IAnimal", "arr", "bar", "foo"]
current  scope ScopeId(0): ["Elephant", "Giraffe", "arr", "bar", "foo"]

tasks/coverage/typescript/tests/cases/compiler/arrayOfExportedClass.ts
semantic error: `export = <value>;` is only supported when compiling modules to CommonJS.
Please consider using `export default <value>;`, or add @babel/plugin-transform-modules-commonjs to your Babel config.

tasks/coverage/typescript/tests/cases/compiler/arrayTypeInSignatureOfInterfaceAndClass.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Data", "WinJS"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/arrayconcat.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["IOptions", "parser"]
current  scope ScopeId(0): ["parser"]

tasks/coverage/typescript/tests/cases/compiler/arrowFunctionInExpressionStatement2.ts
semantic error: Semantic Collector failed after transform
Missing SymbolId: M
Missing SymbolId: _M
Missing ReferenceId: M
Missing ReferenceId: M

tasks/coverage/typescript/tests/cases/compiler/arrowFunctionParsingDoesNotConfuseParenthesizedObjectForArrowHead.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["a", "test", "value"]
current  scope ScopeId(0): ["test"]
reference Mismatch:
previous reference ReferenceId(0): Some("value")
current  reference ReferenceId(0): None
reference Mismatch:
previous reference ReferenceId(1): Some("a")
current  reference ReferenceId(1): None

tasks/coverage/typescript/tests/cases/compiler/arrowFunctionParsingGenericInObject.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(2): ["T", "value"]
current  scope ScopeId(2): ["value"]
Bindings Mismatch:
previous scope ScopeId(5): ["T", "value"]
current  scope ScopeId(5): ["value"]
Bindings Mismatch:
previous scope ScopeId(8): ["T", "value"]
current  scope ScopeId(8): ["value"]
Bindings Mismatch:
previous scope ScopeId(11): ["T", "value"]
current  scope ScopeId(11): ["value"]
Bindings Mismatch:
previous scope ScopeId(15): ["T", "value"]
current  scope ScopeId(15): ["value"]
Bindings Mismatch:
previous scope ScopeId(18): ["T", "value"]
current  scope ScopeId(18): ["value"]
Bindings Mismatch:
previous scope ScopeId(20): ["T", "value"]
current  scope ScopeId(20): ["value"]
Bindings Mismatch:
previous scope ScopeId(22): ["T", "value"]
current  scope ScopeId(22): ["value"]

tasks/coverage/typescript/tests/cases/compiler/assertionFunctionWildcardImport2.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(1): ["T", "obj"]
current  scope ScopeId(1): ["obj"]

tasks/coverage/typescript/tests/cases/compiler/assertionFunctionsCanNarrowByDiscriminant.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Animal", "Cat", "Dog", "animal", "animalOrUndef"]
current  scope ScopeId(0): ["animal", "animalOrUndef"]

tasks/coverage/typescript/tests/cases/compiler/assign1.ts
semantic error: Semantic Collector failed after transform
Missing SymbolId: M
Missing SymbolId: _M
Missing ReferenceId: M
Missing ReferenceId: M

tasks/coverage/typescript/tests/cases/compiler/assignmentCompatForEnums.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(1): ["One", "TokenType", "Two"]
current  scope ScopeId(1): ["TokenType"]

tasks/coverage/typescript/tests/cases/compiler/assignmentCompatability1.ts
semantic error: Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript
Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript
Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript

tasks/coverage/typescript/tests/cases/compiler/assignmentCompatability10.ts
semantic error: Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript
Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript

tasks/coverage/typescript/tests/cases/compiler/assignmentCompatability2.ts
semantic error: Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript
Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript
Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript

tasks/coverage/typescript/tests/cases/compiler/assignmentCompatability3.ts
semantic error: Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript
Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript
Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript

tasks/coverage/typescript/tests/cases/compiler/assignmentCompatability36.ts
semantic error: Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript
Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript
Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript

tasks/coverage/typescript/tests/cases/compiler/assignmentCompatability4.ts
semantic error: Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript
Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript
Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript

tasks/coverage/typescript/tests/cases/compiler/assignmentCompatability5.ts
semantic error: Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript
Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript

tasks/coverage/typescript/tests/cases/compiler/assignmentCompatability6.ts
semantic error: Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript
Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript

tasks/coverage/typescript/tests/cases/compiler/assignmentCompatability7.ts
semantic error: Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript
Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript

tasks/coverage/typescript/tests/cases/compiler/assignmentCompatability8.ts
semantic error: Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript
Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript

tasks/coverage/typescript/tests/cases/compiler/assignmentCompatability9.ts
semantic error: Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript
Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript

tasks/coverage/typescript/tests/cases/compiler/assignmentCompatibilityForConstrainedTypeParameters.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(1): ["T", "bar"]
current  scope ScopeId(1): ["bar"]
Bindings Mismatch:
previous scope ScopeId(2): ["S", "x", "y"]
current  scope ScopeId(2): ["x", "y"]

tasks/coverage/typescript/tests/cases/compiler/assignmentNonObjectTypeConstraints.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(1): ["A", "B", "C", "E"]
current  scope ScopeId(1): ["E"]
Bindings Mismatch:
previous scope ScopeId(2): ["T", "x", "y"]
current  scope ScopeId(2): ["x", "y"]
Bindings Mismatch:
previous scope ScopeId(5): ["T", "x", "y"]
current  scope ScopeId(5): ["x", "y"]

tasks/coverage/typescript/tests/cases/compiler/asyncFunctionContextuallyTypedReturns.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["MyCallback", "increment", "increment2"]
current  scope ScopeId(0): ["increment", "increment2"]

tasks/coverage/typescript/tests/cases/compiler/asyncFunctionReturnType.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Obj", "fAsync", "fAsyncExplicit", "fGenericIndexedTypeForAnyProp", "fGenericIndexedTypeForExplicitPromiseOfAnyProp", "fGenericIndexedTypeForExplicitPromiseOfKProp", "fGenericIndexedTypeForExplicitPromiseOfStringProp", "fGenericIndexedTypeForKProp", "fGenericIndexedTypeForPromiseOfAnyProp", "fGenericIndexedTypeForPromiseOfKProp", "fGenericIndexedTypeForPromiseOfStringProp", "fGenericIndexedTypeForStringProp", "fIndexedTypeForAnyProp", "fIndexedTypeForExplicitPromiseOfAnyProp", "fIndexedTypeForExplicitPromiseOfStringProp", "fIndexedTypeForPromiseOfAnyProp", "fIndexedTypeForPromiseOfStringProp", "fIndexedTypeForStringProp"]
current  scope ScopeId(0): ["fAsync", "fAsyncExplicit", "fGenericIndexedTypeForAnyProp", "fGenericIndexedTypeForExplicitPromiseOfAnyProp", "fGenericIndexedTypeForExplicitPromiseOfKProp", "fGenericIndexedTypeForExplicitPromiseOfStringProp", "fGenericIndexedTypeForKProp", "fGenericIndexedTypeForPromiseOfAnyProp", "fGenericIndexedTypeForPromiseOfKProp", "fGenericIndexedTypeForPromiseOfStringProp", "fGenericIndexedTypeForStringProp", "fIndexedTypeForAnyProp", "fIndexedTypeForExplicitPromiseOfAnyProp", "fIndexedTypeForExplicitPromiseOfStringProp", "fIndexedTypeForPromiseOfAnyProp", "fIndexedTypeForPromiseOfStringProp", "fIndexedTypeForStringProp"]
Bindings Mismatch:
previous scope ScopeId(10): ["TObj", "obj"]
current  scope ScopeId(9): ["obj"]
Bindings Mismatch:
previous scope ScopeId(11): ["TObj", "obj"]
current  scope ScopeId(10): ["obj"]
Bindings Mismatch:
previous scope ScopeId(12): ["TObj", "obj"]
current  scope ScopeId(11): ["obj"]
Bindings Mismatch:
previous scope ScopeId(13): ["TObj", "obj"]
current  scope ScopeId(12): ["obj"]
Bindings Mismatch:
previous scope ScopeId(14): ["TObj", "obj"]
current  scope ScopeId(13): ["obj"]
Bindings Mismatch:
previous scope ScopeId(15): ["TObj", "obj"]
current  scope ScopeId(14): ["obj"]
Bindings Mismatch:
previous scope ScopeId(16): ["K", "TObj", "key", "obj"]
current  scope ScopeId(15): ["key", "obj"]
Bindings Mismatch:
previous scope ScopeId(17): ["K", "TObj", "key", "obj"]
current  scope ScopeId(16): ["key", "obj"]
Bindings Mismatch:
previous scope ScopeId(18): ["K", "TObj", "key", "obj"]
current  scope ScopeId(17): ["key", "obj"]

tasks/coverage/typescript/tests/cases/compiler/asyncFunctionsAndStrictNullChecks.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Windows", "sample", "sample2"]
current  scope ScopeId(0): ["sample", "sample2"]

tasks/coverage/typescript/tests/cases/compiler/asyncYieldStarContextualType.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Author", "Book", "BookWithAuthor", "Result", "T", "U", "V", "authorPromise", "f", "g", "mapper"]
current  scope ScopeId(0): ["f"]
reference Mismatch:
previous reference ReferenceId(19): Some("authorPromise")
current  reference ReferenceId(0): None
reference Mismatch:
previous reference ReferenceId(20): Some("mapper")
current  reference ReferenceId(1): None
reference Mismatch:
previous reference ReferenceId(21): Some("authorPromise")
current  reference ReferenceId(2): None
reference Mismatch:
previous reference ReferenceId(22): Some("mapper")
current  reference ReferenceId(3): None
reference Mismatch:
previous reference ReferenceId(23): Some("g")
current  reference ReferenceId(4): None
reference Mismatch:
previous reference ReferenceId(24): Some("g")
current  reference ReferenceId(5): None

tasks/coverage/typescript/tests/cases/compiler/augmentArray.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Array"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/augmentExportEquals3.ts
semantic error: Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript
`export = <value>;` is only supported when compiling modules to CommonJS.
Please consider using `export default <value>;`, or add @babel/plugin-transform-modules-commonjs to your Babel config.

tasks/coverage/typescript/tests/cases/compiler/augmentExportEquals3_1.ts
semantic error: `import lib = require(...);` is only supported when compiling modules to CommonJS.
Please consider using `import lib from '...';` alongside Typescript's --allowSyntheticDefaultImports option, or add @babel/plugin-transform-modules-commonjs to your Babel config.

tasks/coverage/typescript/tests/cases/compiler/augmentExportEquals4.ts
semantic error: Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript
`export = <value>;` is only supported when compiling modules to CommonJS.
Please consider using `export default <value>;`, or add @babel/plugin-transform-modules-commonjs to your Babel config.

tasks/coverage/typescript/tests/cases/compiler/augmentExportEquals4_1.ts
semantic error: `import lib = require(...);` is only supported when compiling modules to CommonJS.
Please consider using `import lib from '...';` alongside Typescript's --allowSyntheticDefaultImports option, or add @babel/plugin-transform-modules-commonjs to your Babel config.

tasks/coverage/typescript/tests/cases/compiler/augmentExportEquals5.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["e", "express"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/augmentExportEquals6.ts
semantic error: Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript
`export = <value>;` is only supported when compiling modules to CommonJS.
Please consider using `export default <value>;`, or add @babel/plugin-transform-modules-commonjs to your Babel config.

tasks/coverage/typescript/tests/cases/compiler/augmentExportEquals6_1.ts
semantic error: `import lib = require(...);` is only supported when compiling modules to CommonJS.
Please consider using `import lib from '...';` alongside Typescript's --allowSyntheticDefaultImports option, or add @babel/plugin-transform-modules-commonjs to your Babel config.

tasks/coverage/typescript/tests/cases/compiler/augmentedTypeBracketNamedPropertyAccess.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Function", "Object", "f", "o", "r1", "r2", "r3", "r4"]
current  scope ScopeId(0): ["f", "o", "r1", "r2", "r3", "r4"]

tasks/coverage/typescript/tests/cases/compiler/augmentedTypesClass3.ts
semantic error: Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript

tasks/coverage/typescript/tests/cases/compiler/augmentedTypesModules3b.ts
semantic error: Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript
Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript
Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript

tasks/coverage/typescript/tests/cases/compiler/augmentedTypesModules4.ts
semantic error: Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript
Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript

tasks/coverage/typescript/tests/cases/compiler/autonumberingInEnums.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(1): ["Foo", "a"]
current  scope ScopeId(1): ["Foo"]
Bindings Mismatch:
previous scope ScopeId(2): ["Foo", "b"]
current  scope ScopeId(2): ["Foo"]

tasks/coverage/typescript/tests/cases/compiler/avoidCycleWithVoidExpressionReturnedFromArrow.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Howl", "HowlErrorCallback", "HowlOptions", "instance"]
current  scope ScopeId(0): ["Howl", "instance"]

tasks/coverage/typescript/tests/cases/compiler/avoidNarrowingUsingConstVariableFromBindingElementWithLiteralInitializer.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["foo", "test"]
current  scope ScopeId(0): ["test"]
reference Mismatch:
previous reference ReferenceId(1): Some("foo")
current  reference ReferenceId(1): None
reference Mismatch:
previous reference ReferenceId(3): Some("foo")
current  reference ReferenceId(3): None

tasks/coverage/typescript/tests/cases/compiler/awaitUnionPromise.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["AsyncEnumeratorDone", "IAsyncEnumerator", "main"]
current  scope ScopeId(0): ["AsyncEnumeratorDone", "main"]

tasks/coverage/typescript/tests/cases/compiler/awaitedTypeCrash.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(1): ["T"]
current  scope ScopeId(1): []

tasks/coverage/typescript/tests/cases/compiler/awaitedTypeJQuery.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Promise3", "PromiseBase", "T", "Thenable"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/badInferenceLowerPriorityThanGoodInference.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Foo", "goofus", "result"]
current  scope ScopeId(0): ["goofus", "result"]
Bindings Mismatch:
previous scope ScopeId(5): ["ARGS", "f"]
current  scope ScopeId(3): ["f"]

tasks/coverage/typescript/tests/cases/compiler/bangInModuleName.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["http"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/baseIndexSignatureResolution.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Base", "Derived", "Foo", "FooOf", "x", "y"]
current  scope ScopeId(0): ["Base", "Derived", "x", "y"]

tasks/coverage/typescript/tests/cases/compiler/baseTypeAfterDerivedType.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Base", "Base2", "Derived", "Derived2"]
current  scope ScopeId(0): ["Derived2"]

tasks/coverage/typescript/tests/cases/compiler/baseTypeOrderChecking.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(3): ["T"]
current  scope ScopeId(3): []
Bindings Mismatch:
previous scope ScopeId(4): ["T"]
current  scope ScopeId(4): []

tasks/coverage/typescript/tests/cases/compiler/baseTypeWrappingInstantiationChain.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(1): ["T3"]
current  scope ScopeId(1): []
Bindings Mismatch:
previous scope ScopeId(3): ["T2"]
current  scope ScopeId(3): []
Bindings Mismatch:
previous scope ScopeId(4): ["T4"]
current  scope ScopeId(4): []
Bindings Mismatch:
previous scope ScopeId(6): ["T5"]
current  scope ScopeId(6): []
Bindings Mismatch:
previous scope ScopeId(7): ["T1"]
current  scope ScopeId(7): []

tasks/coverage/typescript/tests/cases/compiler/bestCommonTypeReturnStatement.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["IPromise", "b", "d", "f"]
current  scope ScopeId(0): ["b", "d", "f"]

tasks/coverage/typescript/tests/cases/compiler/bestCommonTypeWithContextualTyping.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Contextual", "Ellement", "arr", "conditional", "contextualOr", "e", "obj"]
current  scope ScopeId(0): ["arr", "conditional", "contextualOr", "e", "obj"]

tasks/coverage/typescript/tests/cases/compiler/bestCommonTypeWithOptionalProperties.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["X", "Y", "Z", "b1", "b2", "b3", "b4", "b5", "b6", "x", "y", "z"]
current  scope ScopeId(0): ["b1", "b2", "b3", "b4", "b5", "b6", "x", "y", "z"]

tasks/coverage/typescript/tests/cases/compiler/binopAssignmentShouldHaveType.ts
semantic error: Semantic Collector failed after transform
Missing SymbolId: Test
Missing SymbolId: _Test
Missing ReferenceId: _Test
Missing ReferenceId: Bug
Missing ReferenceId: Test
Missing ReferenceId: Test

tasks/coverage/typescript/tests/cases/compiler/blockScopedNamespaceDifferentFile.ts
semantic error: Semantic Collector failed after transform
Missing SymbolId: C
Missing SymbolId: _C
Missing ReferenceId: _C
Missing ReferenceId: Name
Missing ReferenceId: C
Missing ReferenceId: C

tasks/coverage/typescript/tests/cases/compiler/bom-utf16be.ts
semantic error: Invalid Character `￾`

tasks/coverage/typescript/tests/cases/compiler/booleanFilterAnyArray.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Ari", "Bullean", "BulleanConstructor", "anys", "foo", "foor", "foos", "realanys", "xs", "ys"]
current  scope ScopeId(0): ["foo", "foor", "foos", "xs", "ys"]
reference Mismatch:
previous reference ReferenceId(16): Some("anys")
current  reference ReferenceId(0): None
reference Mismatch:
previous reference ReferenceId(17): Some("Bullean")
current  reference ReferenceId(1): None
reference Mismatch:
previous reference ReferenceId(18): Some("realanys")
current  reference ReferenceId(2): None

tasks/coverage/typescript/tests/cases/compiler/cachedContextualTypes.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["IMenuWorkbenchToolBarOptions", "MenuWorkbenchToolBar"]
current  scope ScopeId(0): ["MenuWorkbenchToolBar"]

tasks/coverage/typescript/tests/cases/compiler/cachedModuleResolution1.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["x"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/cachedModuleResolution2.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["x"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/cachedModuleResolution3.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["x"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/cachedModuleResolution4.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["x"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/cachedModuleResolution5.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["x"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/callExpressionWithTypeParameterConstrainedToOuterTypeParameter.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["I", "i", "y"]
current  scope ScopeId(0): ["i", "y"]

tasks/coverage/typescript/tests/cases/compiler/callOfConditionalTypeWithConcreteBranches.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["AddFirstParameterToFunctions", "ExtractParameters", "Q", "Q2", "X", "fn", "fn2"]
current  scope ScopeId(0): ["fn", "fn2"]
Bindings Mismatch:
previous scope ScopeId(3): ["T", "arg"]
current  scope ScopeId(1): ["arg"]
Bindings Mismatch:
previous scope ScopeId(11): ["T", "arg", "useT"]
current  scope ScopeId(4): ["arg", "useT"]

tasks/coverage/typescript/tests/cases/compiler/callbacksDontShareTypes.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Collection", "Combinators", "_", "c2", "r1a", "r1b", "r5a", "r5b", "rf1"]
current  scope ScopeId(0): ["_", "c2", "r1a", "r1b", "r5a", "r5b", "rf1"]

tasks/coverage/typescript/tests/cases/compiler/callsOnComplexSignatures.tsx
semantic error: Bindings Mismatch:
previous scope ScopeId(1): ["Temp1", "Temp2", "stringType1", "stringType2", "test"]
current  scope ScopeId(1): ["test"]
Bindings Mismatch:
previous scope ScopeId(9): ["Messages", "messages", "test1"]
current  scope ScopeId(3): ["messages", "test1"]
Bindings Mismatch:
previous scope ScopeId(20): ["C", "P1", "P2", "a"]
current  scope ScopeId(13): ["C", "a"]

tasks/coverage/typescript/tests/cases/compiler/capturedLetConstInLoop1.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["iobj", "sobj"]
current  scope ScopeId(0): []
reference Mismatch:
previous reference ReferenceId(90): Some("sobj")
current  reference ReferenceId(90): None
reference Mismatch:
previous reference ReferenceId(91): Some("sobj")
current  reference ReferenceId(91): None
reference Mismatch:
previous reference ReferenceId(93): Some("iobj")
current  reference ReferenceId(93): None
reference Mismatch:
previous reference ReferenceId(94): Some("iobj")
current  reference ReferenceId(94): None

tasks/coverage/typescript/tests/cases/compiler/castExpressionParentheses.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["A", "a"]
current  scope ScopeId(0): []
Bindings Mismatch:
previous scope ScopeId(1): ["Tany"]
current  scope ScopeId(1): []
reference Mismatch:
previous reference ReferenceId(0): Some("a")
current  reference ReferenceId(0): None
reference Mismatch:
previous reference ReferenceId(1): Some("a")
current  reference ReferenceId(1): None
reference Mismatch:
previous reference ReferenceId(2): Some("a")
current  reference ReferenceId(2): None
reference Mismatch:
previous reference ReferenceId(3): Some("a")
current  reference ReferenceId(3): None
reference Mismatch:
previous reference ReferenceId(4): Some("a")
current  reference ReferenceId(4): None
reference Mismatch:
previous reference ReferenceId(5): Some("A")
current  reference ReferenceId(5): None
reference Mismatch:
previous reference ReferenceId(6): Some("A")
current  reference ReferenceId(6): None
reference Mismatch:
previous reference ReferenceId(7): Some("A")
current  reference ReferenceId(7): None
reference Mismatch:
previous reference ReferenceId(8): Some("A")
current  reference ReferenceId(8): None
reference Mismatch:
previous reference ReferenceId(9): Some("A")
current  reference ReferenceId(9): None
reference Mismatch:
previous reference ReferenceId(10): Some("A")
current  reference ReferenceId(10): None
reference Mismatch:
previous reference ReferenceId(11): Some("A")
current  reference ReferenceId(11): None

tasks/coverage/typescript/tests/cases/compiler/castNewObjectBug.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Foo", "xx"]
current  scope ScopeId(0): ["xx"]

tasks/coverage/typescript/tests/cases/compiler/chainedImportAlias.ts
semantic error: Semantic Collector failed after transform
Missing SymbolId: m
Missing SymbolId: _m
Missing ReferenceId: _m
Missing ReferenceId: foo
Missing ReferenceId: m
Missing ReferenceId: m

tasks/coverage/typescript/tests/cases/compiler/chainedSpecializationToObjectTypeLiteral.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Sequence", "s", "s2", "s3"]
current  scope ScopeId(0): ["s", "s2", "s3"]

tasks/coverage/typescript/tests/cases/compiler/checkInfiniteExpansionTermination.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Bar", "Foo", "IObservable", "ISubject", "values", "values2"]
current  scope ScopeId(0): ["values", "values2"]

tasks/coverage/typescript/tests/cases/compiler/checkInfiniteExpansionTermination2.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["IObservable", "ISubject", "fn"]
current  scope ScopeId(0): ["fn"]
Bindings Mismatch:
previous scope ScopeId(5): ["T", "values"]
current  scope ScopeId(1): ["values"]

tasks/coverage/typescript/tests/cases/compiler/checkInterfaceBases.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["SecondEvent", "Third"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/checkJsTypeDefNoUnusedLocalMarked.ts
semantic error: `export = <value>;` is only supported when compiling modules to CommonJS.
Please consider using `export default <value>;`, or add @babel/plugin-transform-modules-commonjs to your Babel config.

tasks/coverage/typescript/tests/cases/compiler/circularConstrainedMappedTypeNoCrash.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Loop"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/circularConstructorWithReturn.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Client", "applyModelsAndClientExtensions", "getPrismaClient"]
current  scope ScopeId(0): ["applyModelsAndClientExtensions", "getPrismaClient"]

tasks/coverage/typescript/tests/cases/compiler/circularContextualMappedType.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Func", "Mapped"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/circularTypeofWithFunctionModule.ts
semantic error: Semantic Collector failed after transform
Missing SymbolId: _maker
Missing ReferenceId: _maker
Missing ReferenceId: Bar
Missing ReferenceId: maker
Missing ReferenceId: maker

tasks/coverage/typescript/tests/cases/compiler/circularlySimplifyingConditionalTypesNoCrash.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["ComponentClass", "Connect", "InferableComponentEnhancerWithProps", "Omit", "Shared", "connect", "myStoreConnect"]
current  scope ScopeId(0): ["myStoreConnect"]
reference Mismatch:
previous reference ReferenceId(42): Some("connect")
current  reference ReferenceId(0): None

tasks/coverage/typescript/tests/cases/compiler/classDeclarationMergedInModuleWithContinuation.ts
semantic error: Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript

tasks/coverage/typescript/tests/cases/compiler/classExpressionTest1.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(2): ["X"]
current  scope ScopeId(2): []
Bindings Mismatch:
previous scope ScopeId(3): ["T", "t", "x"]
current  scope ScopeId(3): ["t", "x"]

tasks/coverage/typescript/tests/cases/compiler/classExpressionTest2.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(2): ["C", "X"]
current  scope ScopeId(2): ["C"]
Bindings Mismatch:
previous scope ScopeId(3): ["T", "t", "x"]
current  scope ScopeId(3): ["t", "x"]

tasks/coverage/typescript/tests/cases/compiler/classExpressionWithResolutionOfNamespaceOfSameName01.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["C", "x"]
current  scope ScopeId(0): ["x"]

tasks/coverage/typescript/tests/cases/compiler/classExpressionWithStaticProperties3.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["arr", "console"]
current  scope ScopeId(0): ["arr"]
reference Mismatch:
previous reference ReferenceId(6): Some("console")
current  reference ReferenceId(6): None

tasks/coverage/typescript/tests/cases/compiler/classExpressionWithStaticPropertiesES63.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["arr", "console"]
current  scope ScopeId(0): ["arr"]
reference Mismatch:
previous reference ReferenceId(6): Some("console")
current  reference ReferenceId(6): None

tasks/coverage/typescript/tests/cases/compiler/classExpressions.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["A", "x"]
current  scope ScopeId(0): ["x"]

tasks/coverage/typescript/tests/cases/compiler/classExtendingAbstractClassWithMemberCalledTheSameAsItsOwnTypeParam.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["BaseObservable", "ConvenientObservable", "IObservable", "IObserver", "IReader"]
current  scope ScopeId(0): ["BaseObservable", "ConvenientObservable"]
Bindings Mismatch:
previous scope ScopeId(7): ["T", "TChange"]
current  scope ScopeId(1): []
Bindings Mismatch:
previous scope ScopeId(10): ["T", "TChange"]
current  scope ScopeId(3): []

tasks/coverage/typescript/tests/cases/compiler/classExtendingAny.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["A", "Err", "o"]
current  scope ScopeId(0): ["A", "o"]
reference Mismatch:
previous reference ReferenceId(0): Some("Err")
current  reference ReferenceId(0): None

tasks/coverage/typescript/tests/cases/compiler/classExtendingQualifiedName2.ts
semantic error: Semantic Collector failed after transform
Missing SymbolId: M
Missing SymbolId: _M
Missing ReferenceId: _M
Missing ReferenceId: C
Missing ReferenceId: M
Missing ReferenceId: M

tasks/coverage/typescript/tests/cases/compiler/classFunctionMerging.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Foo", "a", "b"]
current  scope ScopeId(0): ["a", "b"]

tasks/coverage/typescript/tests/cases/compiler/classImplementingInterfaceIndexer.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["A", "I"]
current  scope ScopeId(0): ["A"]

tasks/coverage/typescript/tests/cases/compiler/classImplementsImportedInterface.ts
semantic error: Semantic Collector failed after transform
Missing SymbolId: M2
Missing SymbolId: _M2
Missing ReferenceId: M2
Missing ReferenceId: M2

tasks/coverage/typescript/tests/cases/compiler/classImplementsMethodWIthTupleArgs.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Settable"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/classMemberInitializerWithLamdaScoping5.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Greeter", "console"]
current  scope ScopeId(0): ["Greeter"]
reference Mismatch:
previous reference ReferenceId(0): Some("console")
current  reference ReferenceId(0): None

tasks/coverage/typescript/tests/cases/compiler/classVarianceCircularity.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(2): ["T"]
current  scope ScopeId(2): []

tasks/coverage/typescript/tests/cases/compiler/classVarianceResolveCircularity1.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(1): ["T"]
current  scope ScopeId(1): []

tasks/coverage/typescript/tests/cases/compiler/classVarianceResolveCircularity2.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(1): ["T"]
current  scope ScopeId(1): []
Bindings Mismatch:
previous scope ScopeId(4): ["T"]
current  scope ScopeId(2): []

tasks/coverage/typescript/tests/cases/compiler/clinterfaces.ts
semantic error: Semantic Collector failed after transform
Missing SymbolId: M
Missing SymbolId: _M
Missing ReferenceId: M
Missing ReferenceId: M

tasks/coverage/typescript/tests/cases/compiler/cloduleAcrossModuleDefinitions.ts
semantic error: Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript

tasks/coverage/typescript/tests/cases/compiler/cloduleAndTypeParameters.ts
semantic error: Semantic Collector failed after transform
Missing SymbolId: _Foo
Missing ReferenceId: _Foo
Missing ReferenceId: Baz
Missing ReferenceId: Foo
Missing ReferenceId: Foo

tasks/coverage/typescript/tests/cases/compiler/cloduleGenericOnSelfMember.ts
semantic error: Semantic Collector failed after transform
Missing SymbolId: _Service
Missing ReferenceId: _Service
Missing ReferenceId: Service
Missing ReferenceId: Service

tasks/coverage/typescript/tests/cases/compiler/cloduleTest1.ts
semantic error: Semantic Collector failed after transform
Missing SymbolId: _$
Missing ReferenceId: _$
Missing ReferenceId: ajax
Missing ReferenceId: $
Missing ReferenceId: $

tasks/coverage/typescript/tests/cases/compiler/cloduleWithPriorUninstantiatedModule.ts
semantic error: Semantic Collector failed after transform
Missing SymbolId: _Moclodule2
Missing ReferenceId: _Moclodule2
Missing ReferenceId: Manager
Missing ReferenceId: Moclodule
Missing ReferenceId: Moclodule

tasks/coverage/typescript/tests/cases/compiler/cloduleWithRecursiveReference.ts
semantic error: Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript

tasks/coverage/typescript/tests/cases/compiler/coAndContraVariantInferences2.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["A", "B", "Block", "C", "CaseClause", "ClassExpression1", "ClassLike1", "ClassStatement1", "Declaration", "Expression", "FunctionDeclaration", "HasLocals", "Identifier", "Node", "Node1", "NodeArray", "Statement1", "SyntaxKind", "SyntaxKind1", "TypeNode", "bar", "f1", "f2", "f3", "foo", "maybeClassStatement", "statement", "types", "x"]
current  scope ScopeId(0): ["SyntaxKind", "SyntaxKind1", "bar", "f1", "f2", "f3", "foo", "maybeClassStatement", "x"]
Bindings Mismatch:
previous scope ScopeId(14): ["Block", "CaseClause", "FunctionDeclaration", "FunctionExpression", "Identifier", "SyntaxKind"]
current  scope ScopeId(6): ["SyntaxKind"]
Bindings Mismatch:
previous scope ScopeId(30): ["ClassExpression", "ClassStatement", "SyntaxKind1"]
current  scope ScopeId(9): ["SyntaxKind1"]
reference Mismatch:
previous reference ReferenceId(106): Some("statement")
current  reference ReferenceId(53): None
reference Mismatch:
previous reference ReferenceId(118): Some("types")
current  reference ReferenceId(56): None

tasks/coverage/typescript/tests/cases/compiler/coAndContraVariantInferences3.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["AssertClause", "BindableOverloadBuilder", "BoundOverloadBuilder", "DISALLOW_DECORATORS", "Declaration", "Decorator", "DeprecationOptions", "Expression", "FinishableOverloadBuilder", "ImportClause", "ImportDeclaration", "Modifier", "Node", "OverloadBinder", "OverloadBinders", "OverloadBuilder", "OverloadDefinitions", "OverloadDeprecations", "OverloadFunction", "OverloadKeys", "OverloadParameters", "Statement", "SyntaxKind", "UnionToIntersection", "foo", "modifiers", "updateImportDeclaration"]
current  scope ScopeId(0): ["SyntaxKind", "foo"]
Bindings Mismatch:
previous scope ScopeId(27): ["AssertClause", "Decorator", "ImportClause", "ImportDeclaration", "Modifier", "SyntaxKind"]
current  scope ScopeId(1): ["SyntaxKind"]
reference Mismatch:
previous reference ReferenceId(124): Some("updateImportDeclaration")
current  reference ReferenceId(13): None
reference Mismatch:
previous reference ReferenceId(137): Some("updateImportDeclaration")
current  reference ReferenceId(19): None
reference Mismatch:
previous reference ReferenceId(183): Some("DISALLOW_DECORATORS")
current  reference ReferenceId(65): None
reference Mismatch:
previous reference ReferenceId(187): Some("modifiers")
current  reference ReferenceId(67): None
reference Mismatch:
previous reference ReferenceId(190): Some("modifiers")
current  reference ReferenceId(70): None

tasks/coverage/typescript/tests/cases/compiler/coAndContraVariantInferences4.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Decorator", "Modifier", "Node", "SyntaxKind", "foo", "modifiers"]
current  scope ScopeId(0): ["SyntaxKind", "foo"]
Bindings Mismatch:
previous scope ScopeId(1): ["Decorator", "Modifier", "SyntaxKind"]
current  scope ScopeId(1): ["SyntaxKind"]
reference Mismatch:
previous reference ReferenceId(17): Some("modifiers")
current  reference ReferenceId(7): None
reference Mismatch:
previous reference ReferenceId(20): Some("modifiers")
current  reference ReferenceId(10): None

tasks/coverage/typescript/tests/cases/compiler/coAndContraVariantInferences5.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["SelectOptions", "SelectProps", "Thing", "f"]
current  scope ScopeId(0): ["f"]

tasks/coverage/typescript/tests/cases/compiler/collectionPatternNoError.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["DataProvider", "Message", "MessageList", "MsgConstructor", "f", "fetchMsg"]
current  scope ScopeId(0): ["DataProvider", "Message", "f", "fetchMsg"]
Bindings Mismatch:
previous scope ScopeId(7): ["V", "protoCtor"]
current  scope ScopeId(3): ["protoCtor"]
Bindings Mismatch:
previous scope ScopeId(8): ["T", "U"]
current  scope ScopeId(4): []
Bindings Mismatch:
previous scope ScopeId(11): ["T", "U", "message", "messageList"]
current  scope ScopeId(7): ["message", "messageList"]

tasks/coverage/typescript/tests/cases/compiler/collisionArgumentsInterfaceMembers.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["i1", "i12", "i1NoError", "i2", "i21", "i2NoError", "i3"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/collisionCodeGenEnumWithEnumMemberConflict.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(1): ["Color", "Thing"]
current  scope ScopeId(1): ["Color"]

tasks/coverage/typescript/tests/cases/compiler/collisionCodeGenModuleWithAccessorChildren.ts
semantic error: Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript

tasks/coverage/typescript/tests/cases/compiler/collisionCodeGenModuleWithConstructorChildren.ts
semantic error: Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript

tasks/coverage/typescript/tests/cases/compiler/collisionCodeGenModuleWithEnumMemberConflict.ts
semantic error: Semantic Collector failed after transform
Missing SymbolId: m1
Missing SymbolId: _m
Missing ReferenceId: m1
Missing ReferenceId: m1

tasks/coverage/typescript/tests/cases/compiler/collisionCodeGenModuleWithFunctionChildren.ts
semantic error: Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript

tasks/coverage/typescript/tests/cases/compiler/collisionCodeGenModuleWithMemberClassConflict.ts
semantic error: Semantic Collector failed after transform
Missing SymbolId: m1
Missing SymbolId: _m
Missing ReferenceId: _m
Missing ReferenceId: m1
Missing ReferenceId: m1
Missing ReferenceId: m1
Missing SymbolId: m2
Missing SymbolId: _m3
Missing ReferenceId: _m3
Missing ReferenceId: m2
Missing ReferenceId: _m3
Missing ReferenceId: _m2
Missing ReferenceId: m2
Missing ReferenceId: m2

tasks/coverage/typescript/tests/cases/compiler/collisionCodeGenModuleWithMemberInterfaceConflict.ts
semantic error: Semantic Collector failed after transform
Missing SymbolId: m1
Missing SymbolId: _m
Missing ReferenceId: _m
Missing ReferenceId: m2
Missing ReferenceId: m1
Missing ReferenceId: m1

tasks/coverage/typescript/tests/cases/compiler/collisionCodeGenModuleWithMemberVariable.ts
semantic error: Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript

tasks/coverage/typescript/tests/cases/compiler/collisionCodeGenModuleWithMethodChildren.ts
semantic error: Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript

tasks/coverage/typescript/tests/cases/compiler/collisionCodeGenModuleWithModuleChildren.ts
semantic error: Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript

tasks/coverage/typescript/tests/cases/compiler/collisionCodeGenModuleWithModuleReopening.ts
semantic error: Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript

tasks/coverage/typescript/tests/cases/compiler/collisionCodeGenModuleWithPrivateMember.ts
semantic error: Semantic Collector failed after transform
Missing SymbolId: m1
Missing SymbolId: _m
Missing ReferenceId: _m
Missing ReferenceId: c1
Missing ReferenceId: m1
Missing ReferenceId: m1

tasks/coverage/typescript/tests/cases/compiler/collisionCodeGenModuleWithUnicodeNames.ts
semantic error: Semantic Collector failed after transform
Missing SymbolId: 才能ソЫⅨ蒤郳र्क्ड्राüışğİliيونيكودöÄüß才能ソЫⅨ蒤郳र्क्ड्राüışğİliيونيكودöÄüßAbcd123
Missing SymbolId: _才能ソЫⅨ蒤郳र्क्ड्राüışğİliيونيكودöÄüß才能ソЫⅨ蒤郳र्क्ड्राüışğİliيونيكودöÄüßAbcd
Missing ReferenceId: _才能ソЫⅨ蒤郳र्क्ड्राüışğİliيونيكودöÄüß才能ソЫⅨ蒤郳र्क्ड्राüışğİliيونيكودöÄüßAbcd
Missing ReferenceId: 才能ソЫⅨ蒤郳र्क्ड्राüışğİliيونيكودöÄüß才能ソЫⅨ蒤郳र्क्ड्राüışğİliيونيكودöÄüßAbcd123
Missing ReferenceId: 才能ソЫⅨ蒤郳र्क्ड्राüışğİliيونيكودöÄüß才能ソЫⅨ蒤郳र्क्ड्राüışğİliيونيكودöÄüßAbcd123
Missing ReferenceId: 才能ソЫⅨ蒤郳र्क्ड्राüışğİliيونيكودöÄüß才能ソЫⅨ蒤郳र्क्ड्राüışğİliيونيكودöÄüßAbcd123

tasks/coverage/typescript/tests/cases/compiler/collisionExportsRequireAndAmbientClass.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["m1", "m2"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/collisionExportsRequireAndAmbientEnum.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["exports", "m1", "m2", "require"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/collisionExportsRequireAndAmbientFunction.ts
semantic error: Semantic Collector failed after transform
Missing SymbolId: m2
Missing SymbolId: _m
Missing ReferenceId: m2
Missing ReferenceId: m2

tasks/coverage/typescript/tests/cases/compiler/collisionExportsRequireAndAmbientFunctionInGlobalFile.ts
semantic error: Semantic Collector failed after transform
Missing SymbolId: m4
Missing SymbolId: _m
Missing ReferenceId: m4
Missing ReferenceId: m4

tasks/coverage/typescript/tests/cases/compiler/collisionExportsRequireAndAmbientModule.ts
semantic error: Semantic Collector failed after transform
Missing SymbolId: m2
Missing SymbolId: _m
Missing ReferenceId: m2
Missing ReferenceId: m2

tasks/coverage/typescript/tests/cases/compiler/collisionExportsRequireAndAmbientVar.ts
semantic error: Semantic Collector failed after transform
Missing SymbolId: m2
Missing SymbolId: _m
Missing ReferenceId: m2
Missing ReferenceId: m2

tasks/coverage/typescript/tests/cases/compiler/collisionExportsRequireAndFunctionInGlobalFile.ts
semantic error: Semantic Collector failed after transform
Missing SymbolId: m3
Missing SymbolId: _m
Missing ReferenceId: m3
Missing ReferenceId: m3
Missing SymbolId: m4
Missing SymbolId: _m2
Missing ReferenceId: _m2
Missing ReferenceId: exports
Missing ReferenceId: _m2
Missing ReferenceId: require
Missing ReferenceId: m4
Missing ReferenceId: m4

tasks/coverage/typescript/tests/cases/compiler/collisionExportsRequireAndInternalModuleAliasInGlobalFile.ts
semantic error: Semantic Collector failed after transform
Missing SymbolId: mOfGloalFile
Missing SymbolId: _mOfGloalFile
Missing ReferenceId: _mOfGloalFile
Missing ReferenceId: c
Missing ReferenceId: mOfGloalFile
Missing ReferenceId: mOfGloalFile
Missing SymbolId: exports
Missing SymbolId: require
Missing SymbolId: m1
Missing SymbolId: _m
Missing ReferenceId: m1
Missing ReferenceId: m1
Missing SymbolId: m2
Missing SymbolId: _m2
Missing ReferenceId: m2
Missing ReferenceId: m2

tasks/coverage/typescript/tests/cases/compiler/collisionExportsRequireAndUninstantiatedModule.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["exports", "foo", "foo2", "require"]
current  scope ScopeId(0): ["foo", "foo2"]

tasks/coverage/typescript/tests/cases/compiler/collisionRestParameterInterfaceMembers.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["i1", "i1NoError", "i2", "i2NoError", "i3"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/collisionRestParameterUnderscoreIUsage.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Foo", "_i", "console"]
current  scope ScopeId(0): ["Foo", "_i"]
reference Mismatch:
previous reference ReferenceId(0): Some("console")
current  reference ReferenceId(0): None

tasks/coverage/typescript/tests/cases/compiler/collisionThisExpressionAndAliasInGlobal.ts
semantic error: Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript

tasks/coverage/typescript/tests/cases/compiler/collisionThisExpressionAndAmbientVarInGlobal.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["_this", "f"]
current  scope ScopeId(0): ["f"]
reference Mismatch:
previous reference ReferenceId(0): Some("_this")
current  reference ReferenceId(0): None

tasks/coverage/typescript/tests/cases/compiler/collisionThisExpressionAndEnumInGlobal.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(1): ["_this", "_thisVal1", "_thisVal2"]
current  scope ScopeId(1): ["_this"]

tasks/coverage/typescript/tests/cases/compiler/collisionThisExpressionAndModuleInGlobal.ts
semantic error: Semantic Collector failed after transform
Missing SymbolId: _this
Missing SymbolId: _this2
Missing ReferenceId: _this
Missing ReferenceId: _this

tasks/coverage/typescript/tests/cases/compiler/collisionThisExpressionAndParameter.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Foo", "Foo1", "Foo3", "console", "f1", "f3"]
current  scope ScopeId(0): ["Foo", "Foo1", "Foo3", "f1", "f3"]
reference Mismatch:
previous reference ReferenceId(1): Some("console")
current  reference ReferenceId(1): None
reference Mismatch:
previous reference ReferenceId(3): Some("console")
current  reference ReferenceId(3): None

tasks/coverage/typescript/tests/cases/compiler/commentEmitAtEndOfFile1.ts
semantic error: Semantic Collector failed after transform
Missing SymbolId: foo
Missing SymbolId: _foo
Missing ReferenceId: foo
Missing ReferenceId: foo

tasks/coverage/typescript/tests/cases/compiler/commentInNamespaceDeclarationWithIdentifierPathName.ts
semantic error: Semantic Collector failed after transform
Missing SymbolId: hello
Missing SymbolId: _hello
Missing SymbolId: hi
Missing SymbolId: _hi
Missing SymbolId: world
Missing SymbolId: _world
Missing ReferenceId: world
Missing ReferenceId: world
Missing ReferenceId: _hi
Missing ReferenceId: _hi
Missing ReferenceId: hi
Missing ReferenceId: hi
Missing ReferenceId: _hello
Missing ReferenceId: _hello
Missing ReferenceId: hello
Missing ReferenceId: hello

tasks/coverage/typescript/tests/cases/compiler/commentOnAmbientEnum.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["C", "D"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/commentOnAmbientModule.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["C", "D"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/commentOnAmbientVariable1.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["v", "y"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/commentOnAmbientVariable2.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["x"]
current  scope ScopeId(0): []
reference Mismatch:
previous reference ReferenceId(0): Some("x")
current  reference ReferenceId(0): None

tasks/coverage/typescript/tests/cases/compiler/commentOnElidedModule1.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["ElidedModule", "ElidedModule2"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/commentOnExportEnumDeclaration.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(1): ["Color", "b", "g", "r"]
current  scope ScopeId(1): ["Color"]

tasks/coverage/typescript/tests/cases/compiler/commentOnInterface1.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["I", "I2"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/commentsOnJSXExpressionsArePreserved.tsx
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Component", "JSX", "_jsxFileName", "_reactJsxRuntime"]
current  scope ScopeId(0): ["Component", "_jsxFileName", "_reactJsxRuntime"]

tasks/coverage/typescript/tests/cases/compiler/commonJsImportClassExpression.ts
semantic error: `export = <value>;` is only supported when compiling modules to CommonJS.
Please consider using `export default <value>;`, or add @babel/plugin-transform-modules-commonjs to your Babel config.

tasks/coverage/typescript/tests/cases/compiler/comparabilityTypeParametersRelatedByUnion.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(1): ["T"]
current  scope ScopeId(1): []
Bindings Mismatch:
previous scope ScopeId(3): ["U", "y"]
current  scope ScopeId(3): ["y"]
Bindings Mismatch:
previous scope ScopeId(5): ["U", "y"]
current  scope ScopeId(5): ["y"]

tasks/coverage/typescript/tests/cases/compiler/comparableRelationBidirectional.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Automation", "AutomationMode", "ExtensionData", "ThemePreset", "UserSettings", "getMockData"]
current  scope ScopeId(0): ["AutomationMode", "getMockData"]
Bindings Mismatch:
previous scope ScopeId(1): ["AutomationMode", "LOCATION", "NONE", "SYSTEM", "TIME"]
current  scope ScopeId(1): ["AutomationMode"]

tasks/coverage/typescript/tests/cases/compiler/comparisonOfPartialDeepAndIndexedAccessTerminatesWithoutError.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Collection", "Many", "PartialDeep", "x"]
current  scope ScopeId(0): ["x"]

tasks/coverage/typescript/tests/cases/compiler/complexNarrowingWithAny.ts
semantic error: Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript

tasks/coverage/typescript/tests/cases/compiler/complicatedIndexesOfIntersectionsAreInferencable.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["FormikConfig"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/compositeContextualSignature.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(1): ["T", "v"]
current  scope ScopeId(1): ["v"]

tasks/coverage/typescript/tests/cases/compiler/compositeGenericFunction.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(1): ["T", "value"]
current  scope ScopeId(1): ["value"]
Bindings Mismatch:
previous scope ScopeId(2): ["R", "func"]
current  scope ScopeId(2): ["func"]

tasks/coverage/typescript/tests/cases/compiler/compositeWithNodeModulesSourceFile.ts
semantic error: `import lib = require(...);` is only supported when compiling modules to CommonJS.
Please consider using `import lib from '...';` alongside Typescript's --allowSyntheticDefaultImports option, or add @babel/plugin-transform-modules-commonjs to your Babel config.

tasks/coverage/typescript/tests/cases/compiler/compoundVarDecl1.ts
semantic error: Semantic Collector failed after transform
Missing SymbolId: Foo
Missing SymbolId: _Foo
Missing ReferenceId: Foo
Missing ReferenceId: Foo

tasks/coverage/typescript/tests/cases/compiler/computedEnumMemberSyntacticallyString.ts
semantic error: Semantic Collector failed after transform
Missing ReferenceId: Foo

tasks/coverage/typescript/tests/cases/compiler/computedEnumMemberSyntacticallyString2.ts
semantic error: Semantic Collector failed after transform
Missing ReferenceId: Foo
Missing ReferenceId: Foo
Missing ReferenceId: Foo

tasks/coverage/typescript/tests/cases/compiler/computedPropertiesTransformedInOtherwiseNonTSClasses.ts
semantic error: Semantic Collector failed after transform
Missing SymbolId: NS
Missing SymbolId: _NS
Missing ReferenceId: _NS
Missing ReferenceId: NS
Missing ReferenceId: NS

tasks/coverage/typescript/tests/cases/compiler/computedTypesKeyofNoIndexSignatureType.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Compute", "Equals", "EqualsTest", "Filter", "FooBar", "FooBarKey", "IndexObject", "OmitIndex", "WithIndex", "WithIndexKey", "WithoutIndex", "WithoutIndexKey"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/conditionalEqualityTestingNullability.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Equals", "Foo", "ShouldBe0", "a", "b"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/conditionalTypeAnyUnion.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["R", "Spec", "WithSpec"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/conditionalTypeClassMembers.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["DS"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/conditionalTypeContextualTypeSimplificationsSuceeds.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Props", "bad", "good1", "good2"]
current  scope ScopeId(0): ["bad", "good1", "good2"]
Bindings Mismatch:
previous scope ScopeId(2): ["P", "attrs"]
current  scope ScopeId(1): ["attrs"]
Bindings Mismatch:
previous scope ScopeId(6): ["P", "attrs"]
current  scope ScopeId(2): ["attrs"]
Bindings Mismatch:
previous scope ScopeId(9): ["P", "attrs"]
current  scope ScopeId(3): ["attrs"]

tasks/coverage/typescript/tests/cases/compiler/conditionalTypeDiscriminatingLargeUnionRegularTypeFetchingSpeedReasonable.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["BigUnion", "ChildrenOf", "DiscriminateUnion", "WithName", "makeThing"]
current  scope ScopeId(0): ["makeThing"]
Bindings Mismatch:
previous scope ScopeId(6): ["T", "children", "name"]
current  scope ScopeId(1): ["children", "name"]

tasks/coverage/typescript/tests/cases/compiler/conditionalTypeGenericInSignatureTypeParameterConstraint.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["H_inline1", "Result"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/conditionalTypeRelaxingConstraintAssignability.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["DeepPartial", "ElChildren", "Elem", "I", "Relax", "g"]
current  scope ScopeId(0): ["Elem", "g"]
Bindings Mismatch:
previous scope ScopeId(7): ["C"]
current  scope ScopeId(1): []

tasks/coverage/typescript/tests/cases/compiler/conditionalTypeSimplification.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["AbstractSchema", "AnySchema", "AnySchemaType", "SchemaType"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/conditionalTypesSimplifyWhenTrivial.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["ExcludeWithDefault", "ExtractWithDefault", "TemplatedConditional", "fn1", "fn10", "fn11", "fn12", "fn2", "fn3", "fn4", "fn5", "fn6", "fn7", "fn8", "fn9", "x", "z", "zee"]
current  scope ScopeId(0): ["fn1", "fn10", "fn11", "fn12", "fn2", "fn3", "fn4", "fn5", "fn6", "fn7", "fn8", "fn9", "zee"]
Bindings Mismatch:
previous scope ScopeId(1): ["Params", "params"]
current  scope ScopeId(1): ["params"]
Bindings Mismatch:
previous scope ScopeId(2): ["T", "x", "y"]
current  scope ScopeId(2): ["x", "y"]
Bindings Mismatch:
previous scope ScopeId(3): ["Params", "params"]
current  scope ScopeId(3): ["params"]
Bindings Mismatch:
previous scope ScopeId(4): ["T", "x", "y"]
current  scope ScopeId(4): ["x", "y"]
Bindings Mismatch:
previous scope ScopeId(9): ["Params", "params"]
current  scope ScopeId(5): ["params"]
Bindings Mismatch:
previous scope ScopeId(10): ["T", "x", "y"]
current  scope ScopeId(6): ["x", "y"]
Bindings Mismatch:
previous scope ScopeId(11): ["Params", "params"]
current  scope ScopeId(7): ["params"]
Bindings Mismatch:
previous scope ScopeId(12): ["T", "x", "y"]
current  scope ScopeId(8): ["x", "y"]
Bindings Mismatch:
previous scope ScopeId(15): ["Params", "params"]
current  scope ScopeId(9): ["params"]
Bindings Mismatch:
previous scope ScopeId(16): ["T", "x", "y"]
current  scope ScopeId(10): ["x", "y"]
Bindings Mismatch:
previous scope ScopeId(17): ["Params", "params"]
current  scope ScopeId(11): ["params"]
Bindings Mismatch:
previous scope ScopeId(18): ["T", "x", "y"]
current  scope ScopeId(12): ["x", "y"]
reference Mismatch:
previous reference ReferenceId(95): Some("z")
current  reference ReferenceId(24): None

tasks/coverage/typescript/tests/cases/compiler/constDeclarations-ambient.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["M", "c1", "c2", "c3", "c4", "c5"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/constEnumExternalModule.ts
semantic error: `export = <value>;` is only supported when compiling modules to CommonJS.
Please consider using `export default <value>;`, or add @babel/plugin-transform-modules-commonjs to your Babel config.

tasks/coverage/typescript/tests/cases/compiler/constEnumMergingWithValues1.ts
semantic error: Semantic Collector failed after transform
Missing SymbolId: _foo
Missing ReferenceId: foo
Missing ReferenceId: foo

tasks/coverage/typescript/tests/cases/compiler/constEnumMergingWithValues2.ts
semantic error: Semantic Collector failed after transform
Missing SymbolId: _foo
Missing ReferenceId: foo
Missing ReferenceId: foo

tasks/coverage/typescript/tests/cases/compiler/constEnumMergingWithValues3.ts
semantic error: Semantic Collector failed after transform
Missing SymbolId: _foo
Missing ReferenceId: foo
Missing ReferenceId: foo

tasks/coverage/typescript/tests/cases/compiler/constEnumMergingWithValues4.ts
semantic error: Semantic Collector failed after transform
Missing SymbolId: foo
Missing SymbolId: _foo
Missing ReferenceId: foo
Missing ReferenceId: foo
Missing SymbolId: _foo2
Missing ReferenceId: foo
Missing ReferenceId: foo

tasks/coverage/typescript/tests/cases/compiler/constEnumMergingWithValues5.ts
semantic error: Semantic Collector failed after transform
Missing SymbolId: foo
Missing SymbolId: _foo
Missing ReferenceId: foo
Missing ReferenceId: foo

tasks/coverage/typescript/tests/cases/compiler/constEnumNamespaceReferenceCausesNoImport.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(1): ["ConstFooEnum", "Here", "Some", "Values"]
current  scope ScopeId(1): ["ConstFooEnum"]

tasks/coverage/typescript/tests/cases/compiler/constEnumNamespaceReferenceCausesNoImport2.ts
semantic error: Semantic Collector failed after transform
Missing SymbolId: ConstEnumOnlyModule
Missing SymbolId: _ConstEnumOnlyModule
Missing ReferenceId: _ConstEnumOnlyModule
Missing ReferenceId: ConstFooEnum
Missing ReferenceId: ConstEnumOnlyModule
Missing ReferenceId: ConstEnumOnlyModule

tasks/coverage/typescript/tests/cases/compiler/constEnumNoEmitReexport.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(1): ["Bar", "Foo", "MyConstEnum"]
current  scope ScopeId(1): ["MyConstEnum"]

tasks/coverage/typescript/tests/cases/compiler/constEnumOnlyModuleMerging.ts
semantic error: Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript

tasks/coverage/typescript/tests/cases/compiler/constEnumPreserveEmitNamedExport1.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(1): ["A", "Foo"]
current  scope ScopeId(1): ["A"]

tasks/coverage/typescript/tests/cases/compiler/constEnumPreserveEmitNamedExport2.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(1): ["A", "Foo"]
current  scope ScopeId(1): ["A"]

tasks/coverage/typescript/tests/cases/compiler/constEnumPreserveEmitReexport.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(1): ["Bar", "Foo", "MyConstEnum"]
current  scope ScopeId(1): ["MyConstEnum"]

tasks/coverage/typescript/tests/cases/compiler/constEnumSyntheticNodesComments.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(1): ["A", "B", "C", "D", "En"]
current  scope ScopeId(1): ["En"]
Bindings Mismatch:
previous scope ScopeId(2): ["T", "x"]
current  scope ScopeId(2): ["x"]

tasks/coverage/typescript/tests/cases/compiler/constEnumToStringNoComments.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(1): ["A", "B", "C", "Foo", "X", "Y", "Z"]
current  scope ScopeId(1): ["Foo"]

tasks/coverage/typescript/tests/cases/compiler/constEnumToStringWithComments.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(1): ["A", "B", "C", "Foo", "X", "Y", "Z"]
current  scope ScopeId(1): ["Foo"]

tasks/coverage/typescript/tests/cases/compiler/constEnums.ts
semantic error: Semantic Collector failed after transform
Missing SymbolId: A
Missing SymbolId: _A
Missing SymbolId: B
Missing SymbolId: _B
Missing SymbolId: C
Missing SymbolId: _C
Missing ReferenceId: _C
Missing ReferenceId: E
Missing ReferenceId: C
Missing ReferenceId: C
Missing ReferenceId: _B
Missing ReferenceId: _B
Missing ReferenceId: B
Missing ReferenceId: B
Missing ReferenceId: _A
Missing ReferenceId: _A
Missing ReferenceId: A
Missing ReferenceId: A
Missing SymbolId: _A2
Missing SymbolId: B
Missing SymbolId: _B2
Missing SymbolId: C
Missing SymbolId: _C2
Missing ReferenceId: _C2
Missing ReferenceId: E
Missing ReferenceId: C
Missing ReferenceId: C
Missing ReferenceId: _B2
Missing ReferenceId: _B2
Missing ReferenceId: B
Missing ReferenceId: B
Missing ReferenceId: _A2
Missing ReferenceId: _A2
Missing ReferenceId: A
Missing ReferenceId: A
Missing SymbolId: A1
Missing SymbolId: _A3
Missing SymbolId: B
Missing SymbolId: _B3
Missing SymbolId: C
Missing SymbolId: _C3
Missing ReferenceId: _C3
Missing ReferenceId: E
Missing ReferenceId: C
Missing ReferenceId: C
Missing ReferenceId: _B3
Missing ReferenceId: _B3
Missing ReferenceId: B
Missing ReferenceId: B
Missing ReferenceId: _A3
Missing ReferenceId: _A3
Missing ReferenceId: A1
Missing ReferenceId: A1
Missing SymbolId: A2
Missing SymbolId: _A4
Missing SymbolId: B
Missing SymbolId: _B4
Missing SymbolId: C
Missing SymbolId: _C4
Missing ReferenceId: _C4
Missing ReferenceId: E
Missing ReferenceId: C
Missing ReferenceId: C
Missing ReferenceId: _B4
Missing ReferenceId: _B4
Missing SymbolId: _C5
Missing ReferenceId: C
Missing ReferenceId: C
Missing ReferenceId: _B4
Missing ReferenceId: _B4
Missing ReferenceId: B
Missing ReferenceId: B
Missing ReferenceId: _A4
Missing ReferenceId: _A4
Missing ReferenceId: A2
Missing ReferenceId: A2
Missing SymbolId: I
Missing SymbolId: I1
Missing SymbolId: I2

tasks/coverage/typescript/tests/cases/compiler/constIndexedAccess.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["indexAccess", "n", "n1", "n2", "n3", "numbers", "numbersNotConst", "s", "s1", "s2", "s3", "test"]
current  scope ScopeId(0): ["n", "n1", "n2", "n3", "numbers", "numbersNotConst", "s", "s1", "s2", "s3", "test"]
Bindings Mismatch:
previous scope ScopeId(1): ["numbers", "one", "zero"]
current  scope ScopeId(1): ["numbers"]
Bindings Mismatch:
previous scope ScopeId(3): ["numbersNotConst", "one", "zero"]
current  scope ScopeId(2): ["numbersNotConst"]

tasks/coverage/typescript/tests/cases/compiler/constraintCheckInGenericBaseTypeReference.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(3): ["T"]
current  scope ScopeId(3): []

tasks/coverage/typescript/tests/cases/compiler/constraintOfRecursivelyMappedTypeWithConditionalIsResolvable.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["IImmutableMap", "IImmutableMap2", "ImmutableModel", "ImmutableModel2", "ImmutableTypes", "ImmutableTypes2", "Map", "isImmutableType"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/constraintPropagationThroughReturnTypes.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(1): ["T", "x"]
current  scope ScopeId(1): ["x"]
Bindings Mismatch:
previous scope ScopeId(2): ["S", "x", "y"]
current  scope ScopeId(2): ["x", "y"]

tasks/coverage/typescript/tests/cases/compiler/constraintReferencingTypeParameterFromSameTypeParameterList.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["I1", "I2", "I3", "I4", "IComparable", "f", "foo"]
current  scope ScopeId(0): ["f", "foo"]
Bindings Mismatch:
previous scope ScopeId(2): ["I", "T"]
current  scope ScopeId(1): []
Bindings Mismatch:
previous scope ScopeId(8): ["T", "U", "V"]
current  scope ScopeId(2): []

tasks/coverage/typescript/tests/cases/compiler/constraintsThatReferenceOtherContstraints1.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Bar", "Foo", "Object", "x"]
current  scope ScopeId(0): ["Bar", "Foo", "x"]
Bindings Mismatch:
previous scope ScopeId(2): ["T", "U"]
current  scope ScopeId(1): []
Bindings Mismatch:
previous scope ScopeId(3): ["T", "U"]
current  scope ScopeId(2): []

tasks/coverage/typescript/tests/cases/compiler/constraintsUsedInPrototypeProperty.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(1): ["T", "U", "V"]
current  scope ScopeId(1): []

tasks/coverage/typescript/tests/cases/compiler/constructorArgWithGenericCallSignature.ts
semantic error: Semantic Collector failed after transform
Missing SymbolId: Test
Missing SymbolId: _Test
Missing ReferenceId: _Test
Missing ReferenceId: MyClass
Missing ReferenceId: _Test
Missing ReferenceId: F
Missing ReferenceId: Test
Missing ReferenceId: Test

tasks/coverage/typescript/tests/cases/compiler/constructorArgs.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Options", "Sub", "Super"]
current  scope ScopeId(0): ["Sub", "Super"]

tasks/coverage/typescript/tests/cases/compiler/constructorOverloads5.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["IArguments", "M"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/constructorReturningAPrimitive.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(3): ["T"]
current  scope ScopeId(3): []

tasks/coverage/typescript/tests/cases/compiler/contextSensitiveReturnTypeInference.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["DEPS", "IData"]
current  scope ScopeId(0): ["DEPS"]

tasks/coverage/typescript/tests/cases/compiler/contextualComputedNonBindablePropertyType.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Mapped", "Original", "propSelector", "unexpectedlyFailingExample"]
current  scope ScopeId(0): ["propSelector", "unexpectedlyFailingExample"]

tasks/coverage/typescript/tests/cases/compiler/contextualExpressionTypecheckingDoesntBlowStack.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["IValidationError", "Operation"]
current  scope ScopeId(0): ["Operation"]

tasks/coverage/typescript/tests/cases/compiler/contextualOverloadListFromArrayUnion.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["y", "yThen"]
current  scope ScopeId(0): ["yThen"]
reference Mismatch:
previous reference ReferenceId(0): Some("y")
current  reference ReferenceId(0): None

tasks/coverage/typescript/tests/cases/compiler/contextualReturnTypeOfIIFE2.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["app"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/contextualReturnTypeOfIIFE3.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["app"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/contextualSignatureConditionalTypeInstantiationUsingDefault.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["ActionFunction", "TypegenDisabled", "TypegenEnabled"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/contextualSignatureInstantiation1.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(2): ["K", "x", "y"]
current  scope ScopeId(1): ["x", "y"]
Bindings Mismatch:
previous scope ScopeId(4): ["K", "x", "y"]
current  scope ScopeId(2): ["x", "y"]

tasks/coverage/typescript/tests/cases/compiler/contextualSignatureInstantiation2.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["S", "T", "U", "dot", "id", "r23"]
current  scope ScopeId(0): ["dot", "id", "r23"]
Bindings Mismatch:
previous scope ScopeId(1): ["S", "T", "f"]
current  scope ScopeId(1): ["f"]
Bindings Mismatch:
previous scope ScopeId(2): ["U", "g"]
current  scope ScopeId(2): ["g"]

tasks/coverage/typescript/tests/cases/compiler/contextualSignatureInstantiation3.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(1): ["T", "U", "f", "items"]
current  scope ScopeId(1): ["f", "items"]
Bindings Mismatch:
previous scope ScopeId(2): ["T", "x"]
current  scope ScopeId(2): ["x"]
Bindings Mismatch:
previous scope ScopeId(3): ["T", "x"]
current  scope ScopeId(3): ["x"]

tasks/coverage/typescript/tests/cases/compiler/contextualSignatureInstantiationWithTypeParameterConstrainedToOuterTypeParameter.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["V", "W", "f", "h", "x"]
current  scope ScopeId(0): ["f", "h", "x"]
Bindings Mismatch:
previous scope ScopeId(1): ["T", "g"]
current  scope ScopeId(1): ["g"]
Bindings Mismatch:
previous scope ScopeId(2): ["U", "u"]
current  scope ScopeId(2): ["u"]

tasks/coverage/typescript/tests/cases/compiler/contextualSignatureInstatiationCovariance.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Animal", "Giraffe", "T", "TallThing", "f2", "g2", "h2"]
current  scope ScopeId(0): ["f2", "g2", "h2"]

tasks/coverage/typescript/tests/cases/compiler/contextualSignature_objectLiteralMethodMayReturnNever.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["I", "o"]
current  scope ScopeId(0): ["o"]

tasks/coverage/typescript/tests/cases/compiler/contextualTypeArrayReturnType.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["IBookStyle", "NamedTransform", "Transform3D", "style"]
current  scope ScopeId(0): ["style"]

tasks/coverage/typescript/tests/cases/compiler/contextualTypeCaching.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["A", "CustomEvents", "Event", "Optimization", "P", "T", "WebpackPluginFunction", "WebpackPluginInstance", "applyOptimizationDefaults"]
current  scope ScopeId(0): ["applyOptimizationDefaults"]
reference Mismatch:
previous reference ReferenceId(20): Some("A")
current  reference ReferenceId(1): None

tasks/coverage/typescript/tests/cases/compiler/contextualTypeObjectSpreadExpression.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["I", "i"]
current  scope ScopeId(0): ["i"]

tasks/coverage/typescript/tests/cases/compiler/contextualTypeOfIndexedAccessParameter.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Keys", "OptionsForKey", "g"]
current  scope ScopeId(0): ["g"]
Bindings Mismatch:
previous scope ScopeId(5): ["K", "x", "y"]
current  scope ScopeId(2): ["x", "y"]

tasks/coverage/typescript/tests/cases/compiler/contextualTypeOnYield1.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["FuncOrGeneratorFunc", "f"]
current  scope ScopeId(0): ["f"]

tasks/coverage/typescript/tests/cases/compiler/contextualTypeOnYield2.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["OrGen", "g"]
current  scope ScopeId(0): ["g"]

tasks/coverage/typescript/tests/cases/compiler/contextualTypeSelfReferencing.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["def", "narrow", "parse", "result"]
current  scope ScopeId(0): ["result"]
reference Mismatch:
previous reference ReferenceId(11): Some("parse")
current  reference ReferenceId(0): None

tasks/coverage/typescript/tests/cases/compiler/contextualTypeShouldBeLiteral.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["LikeA", "LikeB", "TestGeneric", "TestObject", "TestString", "X", "X2", "X3", "Y", "Y2", "Y3", "foo", "foo2", "test", "xy", "xyz"]
current  scope ScopeId(0): ["foo", "foo2", "test", "xy", "xyz"]

tasks/coverage/typescript/tests/cases/compiler/contextualTypingFunctionReturningFunction.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["I"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/contextualTypingOfLambdaWithMultipleSignatures.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Foo", "foo"]
current  scope ScopeId(0): ["foo"]

tasks/coverage/typescript/tests/cases/compiler/contextualTypingOfOptionalMembers.tsx
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["ActionsArray", "ActionsObject", "ActionsObjectOr", "Bar", "JSX", "Options", "Options2", "_jsxFileName", "_reactJsxRuntime", "a", "y"]
current  scope ScopeId(0): ["_jsxFileName", "_reactJsxRuntime", "a", "y"]

tasks/coverage/typescript/tests/cases/compiler/contextualTypingOfTooShortOverloads.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["ErrorRequestHandler", "IRouterHandler", "IRouterMatcher", "MyApp", "NextFunction", "Overload", "PathParams", "Request", "RequestHandler", "RequestHandlerParams", "Response", "app", "use"]
current  scope ScopeId(0): ["app", "use"]

tasks/coverage/typescript/tests/cases/compiler/contextualTypingReturnStatementWithReturnTypeAnnotation.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["PropOfRaw", "getSpecsFromRaw"]
current  scope ScopeId(0): ["getSpecsFromRaw"]

tasks/coverage/typescript/tests/cases/compiler/contextualTypingTwoInstancesOfSameTypeParameter.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(1): ["T", "x"]
current  scope ScopeId(1): ["x"]

tasks/coverage/typescript/tests/cases/compiler/contextualTypingWithGenericAndNonGenericSignature.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["T", "U", "f2", "f3"]
current  scope ScopeId(0): ["f2", "f3"]

tasks/coverage/typescript/tests/cases/compiler/contextualTypingWithGenericSignature.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["T", "U", "f2"]
current  scope ScopeId(0): ["f2"]

tasks/coverage/typescript/tests/cases/compiler/contextuallyTypeAsyncFunctionReturnTypeFromUnion.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["LoadCallback", "cb1", "cb2", "cb3", "fn1"]
current  scope ScopeId(0): ["cb1", "cb2", "cb3", "fn1"]

tasks/coverage/typescript/tests/cases/compiler/contextuallyTypeGeneratorReturnTypeFromUnion.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Action", "Action2", "test1", "test2"]
current  scope ScopeId(0): ["test1", "test2"]

tasks/coverage/typescript/tests/cases/compiler/contextuallyTypedByDiscriminableUnion.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["ADT", "invoke", "kind"]
current  scope ScopeId(0): ["invoke", "kind"]

tasks/coverage/typescript/tests/cases/compiler/contextuallyTypedGenericAssignment.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(1): ["A", "T", "arg"]
current  scope ScopeId(1): ["arg"]

tasks/coverage/typescript/tests/cases/compiler/contextuallyTypedJsxAttribute.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Elements", "Props", "_jsxFileName", "_reactJsxRuntime"]
current  scope ScopeId(0): ["_jsxFileName", "_reactJsxRuntime"]

tasks/coverage/typescript/tests/cases/compiler/contextuallyTypedJsxChildren.tsx
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["DropdownMenu", "React", "_jsxFileName"]
current  scope ScopeId(0): ["React", "_jsxFileName"]
reference Mismatch:
previous reference ReferenceId(14): Some("DropdownMenu")
current  reference ReferenceId(1): None
reference Mismatch:
previous reference ReferenceId(21): Some("DropdownMenu")
current  reference ReferenceId(9): None

tasks/coverage/typescript/tests/cases/compiler/contextuallyTypedParametersWithInitializers2.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["num", "test2", "test3"]
current  scope ScopeId(0): ["test2", "test3"]
reference Mismatch:
previous reference ReferenceId(5): Some("num")
current  reference ReferenceId(1): None

tasks/coverage/typescript/tests/cases/compiler/contextuallyTypedParametersWithInitializers3.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["CanvasDirection", "GraphActions"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/contextuallyTypingOrOperator3.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(1): ["T", "U", "u", "x3"]
current  scope ScopeId(1): ["u", "x3"]

tasks/coverage/typescript/tests/cases/compiler/contravariantInferenceAndTypeGuard.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["FilterFn", "IteratorFn", "ListItem", "Test", "filter1", "list2", "x"]
current  scope ScopeId(0): ["filter1", "list2", "x"]

tasks/coverage/typescript/tests/cases/compiler/contravariantOnlyInferenceFromAnnotatedFunction.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Funcs", "result"]
current  scope ScopeId(0): ["result"]

tasks/coverage/typescript/tests/cases/compiler/contravariantTypeAliasInference.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Func1", "Func2", "f1", "f2", "g1", "g2"]
current  scope ScopeId(0): []
reference Mismatch:
previous reference ReferenceId(9): Some("f1")
current  reference ReferenceId(1): None
reference Mismatch:
previous reference ReferenceId(10): Some("f2")
current  reference ReferenceId(2): None
reference Mismatch:
previous reference ReferenceId(18): Some("f1")
current  reference ReferenceId(4): None
reference Mismatch:
previous reference ReferenceId(19): Some("f2")
current  reference ReferenceId(5): None
reference Mismatch:
previous reference ReferenceId(21): Some("g1")
current  reference ReferenceId(7): None
reference Mismatch:
previous reference ReferenceId(22): Some("g2")
current  reference ReferenceId(8): None

tasks/coverage/typescript/tests/cases/compiler/controlFlowBreakContinueWithLabel.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(1): ["A", "B", "User"]
current  scope ScopeId(1): ["User"]

tasks/coverage/typescript/tests/cases/compiler/controlFlowCommaExpressionAssertionMultiple.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(1): ["T", "value"]
current  scope ScopeId(1): ["value"]

tasks/coverage/typescript/tests/cases/compiler/controlFlowDestructuringLoop.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["NumVal", "StrVal", "Val", "foo", "isNumVal"]
current  scope ScopeId(0): ["foo", "isNumVal"]

tasks/coverage/typescript/tests/cases/compiler/controlFlowFavorAssertedTypeThroughTypePredicate.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["obj1", "obj2", "obj3", "obj4"]
current  scope ScopeId(0): []
reference Mismatch:
previous reference ReferenceId(2): Some("obj1")
current  reference ReferenceId(1): None
reference Mismatch:
previous reference ReferenceId(3): Some("obj1")
current  reference ReferenceId(2): None
reference Mismatch:
previous reference ReferenceId(4): Some("obj1")
current  reference ReferenceId(3): None
reference Mismatch:
previous reference ReferenceId(5): Some("obj1")
current  reference ReferenceId(4): None
reference Mismatch:
previous reference ReferenceId(7): Some("obj2")
current  reference ReferenceId(6): None
reference Mismatch:
previous reference ReferenceId(8): Some("obj2")
current  reference ReferenceId(7): None
reference Mismatch:
previous reference ReferenceId(9): Some("obj2")
current  reference ReferenceId(8): None
reference Mismatch:
previous reference ReferenceId(10): Some("obj2")
current  reference ReferenceId(9): None
reference Mismatch:
previous reference ReferenceId(13): Some("obj3")
current  reference ReferenceId(11): None
reference Mismatch:
previous reference ReferenceId(14): Some("obj3")
current  reference ReferenceId(12): None
reference Mismatch:
previous reference ReferenceId(15): Some("obj3")
current  reference ReferenceId(13): None
reference Mismatch:
previous reference ReferenceId(16): Some("obj3")
current  reference ReferenceId(14): None
reference Mismatch:
previous reference ReferenceId(19): Some("obj4")
current  reference ReferenceId(16): None
reference Mismatch:
previous reference ReferenceId(20): Some("obj4")
current  reference ReferenceId(17): None
reference Mismatch:
previous reference ReferenceId(21): Some("obj4")
current  reference ReferenceId(18): None
reference Mismatch:
previous reference ReferenceId(22): Some("obj4")
current  reference ReferenceId(19): None

tasks/coverage/typescript/tests/cases/compiler/controlFlowForCatchAndFinally.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Browser", "Foo", "Page", "test"]
current  scope ScopeId(0): ["Foo", "test"]

tasks/coverage/typescript/tests/cases/compiler/controlFlowInitializedDestructuringVariables.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["a", "b", "obj"]
current  scope ScopeId(0): ["a", "b"]
reference Mismatch:
previous reference ReferenceId(1): Some("obj")
current  reference ReferenceId(1): None

tasks/coverage/typescript/tests/cases/compiler/controlFlowInstanceof.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["A", "B", "C", "X", "Y", "ctor", "f1", "f2", "f3", "f4", "foo", "goo", "x"]
current  scope ScopeId(0): ["A", "B", "C", "Y", "f1", "f2", "f3", "f4", "foo", "goo"]
reference Mismatch:
previous reference ReferenceId(71): Some("x")
current  reference ReferenceId(60): None
reference Mismatch:
previous reference ReferenceId(72): Some("ctor")
current  reference ReferenceId(61): None
reference Mismatch:
previous reference ReferenceId(73): Some("x")
current  reference ReferenceId(62): None

tasks/coverage/typescript/tests/cases/compiler/controlFlowInstanceofWithSymbolHasInstance.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["A", "B", "C", "PromiseConstructor", "SetConstructor", "X", "Y", "f1", "f2", "f3", "f4", "foo", "goo"]
current  scope ScopeId(0): ["A", "B", "C", "Y", "f1", "f2", "f3", "f4", "foo", "goo"]
Bindings Mismatch:
previous scope ScopeId(16): ["T", "value"]
current  scope ScopeId(12): ["value"]

tasks/coverage/typescript/tests/cases/compiler/controlFlowManyConsecutiveConditionsNoTimeout.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(1): ["Choice", "One", "Two"]
current  scope ScopeId(1): ["Choice"]

tasks/coverage/typescript/tests/cases/compiler/controlFlowOuterVariable.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(2): ["T", "t"]
current  scope ScopeId(2): ["t"]

tasks/coverage/typescript/tests/cases/compiler/controlFlowPropertyDeclarations.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["HTMLDOMPropertyConfig", "HTMLtoJSX", "StyleParser", "endsWith", "hyphenToCamelCase", "isConvertiblePixelValue", "isEmpty", "mapFrom", "propname", "repeatString", "require", "trimEnd"]
current  scope ScopeId(0): ["HTMLDOMPropertyConfig", "HTMLtoJSX", "StyleParser", "endsWith", "hyphenToCamelCase", "isConvertiblePixelValue", "isEmpty", "mapFrom", "propname", "repeatString", "trimEnd"]
reference Mismatch:
previous reference ReferenceId(0): Some("require")
current  reference ReferenceId(0): None

tasks/coverage/typescript/tests/cases/compiler/controlFlowWithIncompleteTypes.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["cond", "foo1", "foo2"]
current  scope ScopeId(0): ["foo1", "foo2"]
reference Mismatch:
previous reference ReferenceId(0): Some("cond")
current  reference ReferenceId(0): None
reference Mismatch:
previous reference ReferenceId(5): Some("cond")
current  reference ReferenceId(5): None

tasks/coverage/typescript/tests/cases/compiler/correctOrderOfPromiseMethod.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["A", "B", "countEverything", "expected"]
current  scope ScopeId(0): ["countEverything", "expected"]

tasks/coverage/typescript/tests/cases/compiler/covariance1.ts
semantic error: Semantic Collector failed after transform
Missing SymbolId: M
Missing SymbolId: _M
Missing ReferenceId: _M
Missing ReferenceId: XX
Missing ReferenceId: _M
Missing ReferenceId: f
Missing ReferenceId: M
Missing ReferenceId: M

tasks/coverage/typescript/tests/cases/compiler/crashInGetTextOfComputedPropertyName.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["A", "AB", "B", "ObjWithItems", "itemId", "itemOk1", "itemOk2", "itemWithTSError", "items", "objWithItems"]
current  scope ScopeId(0): ["itemId", "itemOk1", "itemOk2", "itemWithTSError", "items", "objWithItems"]

tasks/coverage/typescript/tests/cases/compiler/crashInResolveInterface.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Q", "q1", "x"]
current  scope ScopeId(0): ["q1", "x"]

tasks/coverage/typescript/tests/cases/compiler/crashInresolveReturnStatement.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(5): ["P0", "dialogType"]
current  scope ScopeId(5): ["dialogType"]

tasks/coverage/typescript/tests/cases/compiler/curiousNestedConditionalEvaluationResult.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Hmm"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/customAsyncIterator.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(1): ["T"]
current  scope ScopeId(1): []

tasks/coverage/typescript/tests/cases/compiler/cyclicGenericTypeInstantiation.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(1): ["T", "y", "z"]
current  scope ScopeId(1): ["y", "z"]
Bindings Mismatch:
previous scope ScopeId(2): ["T", "y", "z"]
current  scope ScopeId(2): ["y", "z"]

tasks/coverage/typescript/tests/cases/compiler/cyclicGenericTypeInstantiationInference.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(1): ["T", "y", "z"]
current  scope ScopeId(1): ["y", "z"]
Bindings Mismatch:
previous scope ScopeId(2): ["T", "y", "z"]
current  scope ScopeId(2): ["y", "z"]
Bindings Mismatch:
previous scope ScopeId(3): ["T", "x"]
current  scope ScopeId(3): ["x"]

tasks/coverage/typescript/tests/cases/compiler/cyclicTypeInstantiation.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(1): ["T", "x"]
current  scope ScopeId(1): ["x"]
Bindings Mismatch:
previous scope ScopeId(2): ["T", "x"]
current  scope ScopeId(2): ["x"]

tasks/coverage/typescript/tests/cases/compiler/declarationEmitMonorepoBaseUrl.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["PluginConfig"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/declarationEmitToDeclarationDirWithCompositeOption.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Foo"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/declarationEmitWithComposite.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Foo"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/declarationMerging1.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["A"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/declarationMerging2.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["./a"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/declareDottedExtend.ts
semantic error: Semantic Collector failed after transform
Missing SymbolId: ab

tasks/coverage/typescript/tests/cases/compiler/declareExternalModuleWithExportAssignedFundule.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["express"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/declareModifierOnTypeAlias.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Bar", "Baz", "Foo"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/declaredExternalModule.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["connect"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/declaredExternalModuleWithExportAssignment.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["connect"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/decoratorMetadataConditionalType.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(2): ["T"]
current  scope ScopeId(1): []

tasks/coverage/typescript/tests/cases/compiler/decoratorMetadataElidedImport.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Observable", "Test", "whatever"]
current  scope ScopeId(0): ["Test", "whatever"]

tasks/coverage/typescript/tests/cases/compiler/decoratorMetadataForMethodWithNoReturnTypeAnnotation01.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["MyClass", "decorator"]
current  scope ScopeId(0): ["MyClass"]
reference Mismatch:
previous reference ReferenceId(0): Some("decorator")
current  reference ReferenceId(0): None

tasks/coverage/typescript/tests/cases/compiler/decoratorMetadataOnInferredType.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["A", "B", "console", "decorator"]
current  scope ScopeId(0): ["A", "B", "decorator"]
reference Mismatch:
previous reference ReferenceId(0): Some("console")
current  reference ReferenceId(0): None

tasks/coverage/typescript/tests/cases/compiler/decoratorMetadataPromise.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["A", "decorator"]
current  scope ScopeId(0): ["A"]
reference Mismatch:
previous reference ReferenceId(1): Some("decorator")
current  reference ReferenceId(0): None
reference Mismatch:
previous reference ReferenceId(2): Some("decorator")
current  reference ReferenceId(1): None
reference Mismatch:
previous reference ReferenceId(4): Some("decorator")
current  reference ReferenceId(2): None

tasks/coverage/typescript/tests/cases/compiler/decoratorMetadataRestParameterWithImportedType.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["ClassA", "SomeClass", "SomeClass1", "annotation", "annotation1"]
current  scope ScopeId(0): ["ClassA", "annotation", "annotation1"]

tasks/coverage/typescript/tests/cases/compiler/decoratorMetadataTypeOnlyExport.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Bar", "Decorator", "Foo"]
current  scope ScopeId(0): ["Bar", "Decorator"]

tasks/coverage/typescript/tests/cases/compiler/decoratorMetadataWithConstructorType.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["A", "B", "console", "decorator"]
current  scope ScopeId(0): ["A", "B", "decorator"]
reference Mismatch:
previous reference ReferenceId(0): Some("console")
current  reference ReferenceId(0): None

tasks/coverage/typescript/tests/cases/compiler/decoratorMetadataWithImportDeclarationNameCollision.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["MyClass", "db", "someDecorator"]
current  scope ScopeId(0): ["MyClass", "someDecorator"]

tasks/coverage/typescript/tests/cases/compiler/decoratorMetadataWithImportDeclarationNameCollision2.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Database", "MyClass", "someDecorator"]
current  scope ScopeId(0): ["MyClass", "someDecorator"]

tasks/coverage/typescript/tests/cases/compiler/decoratorMetadataWithImportDeclarationNameCollision3.ts
semantic error: `import lib = require(...);` is only supported when compiling modules to CommonJS.
Please consider using `import lib from '...';` alongside Typescript's --allowSyntheticDefaultImports option, or add @babel/plugin-transform-modules-commonjs to your Babel config.

tasks/coverage/typescript/tests/cases/compiler/decoratorMetadataWithImportDeclarationNameCollision5.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["MyClass", "db", "someDecorator"]
current  scope ScopeId(0): ["MyClass", "someDecorator"]

tasks/coverage/typescript/tests/cases/compiler/decoratorMetadataWithImportDeclarationNameCollision6.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["MyClass", "database", "someDecorator"]
current  scope ScopeId(0): ["MyClass", "someDecorator"]

tasks/coverage/typescript/tests/cases/compiler/decoratorMetadataWithImportDeclarationNameCollision8.ts
semantic error: `import lib = require(...);` is only supported when compiling modules to CommonJS.
Please consider using `import lib from '...';` alongside Typescript's --allowSyntheticDefaultImports option, or add @babel/plugin-transform-modules-commonjs to your Babel config.

tasks/coverage/typescript/tests/cases/compiler/decoratorReferenceOnOtherProperty.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Bar", "Yoha", "foo"]
current  scope ScopeId(0): ["Bar", "foo"]

tasks/coverage/typescript/tests/cases/compiler/decoratorReferences.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["C", "T"]
current  scope ScopeId(0): ["C"]
Bindings Mismatch:
previous scope ScopeId(4): ["T"]
current  scope ScopeId(2): []

tasks/coverage/typescript/tests/cases/compiler/decoratorWithUnderscoreMethod.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["A", "console", "dec"]
current  scope ScopeId(0): ["A", "dec"]
reference Mismatch:
previous reference ReferenceId(2): Some("console")
current  reference ReferenceId(0): None

tasks/coverage/typescript/tests/cases/compiler/deeplyNestedTemplateLiteralIntersection.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Props", "R", "S", "T", "X", "_S", "a1", "a2", "b"]
current  scope ScopeId(0): ["a1", "a2", "b"]

tasks/coverage/typescript/tests/cases/compiler/deferredConditionalTypes.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["A", "And", "AndBit", "Bit", "Equals", "Extends", "FilterByStringValue", "FilteredRes1", "FilteredValuesMatchNever", "IsLiteral", "IsNumberLiteral", "Not", "Or", "T0", "T1", "T2", "T3", "T4", "T5", "T6", "TestBit", "TestBitRes", "Values"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/deferredConditionalTypes2.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Add", "AddTest0", "AddTest1", "AddWithoutParentheses", "IsEqual", "NegativeInfinity", "PositiveInfinity"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/deferredTypeReferenceWithinArrayWithinTuple.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["TypeStructure"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/definiteAssignmentOfDestructuredVariable.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["C", "Options"]
current  scope ScopeId(0): ["C"]
Bindings Mismatch:
previous scope ScopeId(2): ["T"]
current  scope ScopeId(1): []

tasks/coverage/typescript/tests/cases/compiler/deleteExpressionMustBeOptional.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["AA", "BB", "Foo", "a", "b", "f"]
current  scope ScopeId(0): []
reference Mismatch:
previous reference ReferenceId(3): Some("f")
current  reference ReferenceId(0): None
reference Mismatch:
previous reference ReferenceId(4): Some("f")
current  reference ReferenceId(1): None
reference Mismatch:
previous reference ReferenceId(5): Some("f")
current  reference ReferenceId(2): None
reference Mismatch:
previous reference ReferenceId(6): Some("f")
current  reference ReferenceId(3): None
reference Mismatch:
previous reference ReferenceId(7): Some("f")
current  reference ReferenceId(4): None
reference Mismatch:
previous reference ReferenceId(8): Some("f")
current  reference ReferenceId(5): None
reference Mismatch:
previous reference ReferenceId(9): Some("f")
current  reference ReferenceId(6): None
reference Mismatch:
previous reference ReferenceId(10): Some("f")
current  reference ReferenceId(7): None
reference Mismatch:
previous reference ReferenceId(11): Some("f")
current  reference ReferenceId(8): None
reference Mismatch:
previous reference ReferenceId(12): Some("f")
current  reference ReferenceId(9): None
reference Mismatch:
previous reference ReferenceId(13): Some("a")
current  reference ReferenceId(10): None
reference Mismatch:
previous reference ReferenceId(14): Some("a")
current  reference ReferenceId(11): None
reference Mismatch:
previous reference ReferenceId(15): Some("b")
current  reference ReferenceId(12): None
reference Mismatch:
previous reference ReferenceId(16): Some("b")
current  reference ReferenceId(13): None

tasks/coverage/typescript/tests/cases/compiler/deleteExpressionMustBeOptional_exactOptionalPropertyTypes.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["AA", "BB", "Foo", "a", "b", "f", "g"]
current  scope ScopeId(0): []
reference Mismatch:
previous reference ReferenceId(5): Some("f")
current  reference ReferenceId(0): None
reference Mismatch:
previous reference ReferenceId(6): Some("f")
current  reference ReferenceId(1): None
reference Mismatch:
previous reference ReferenceId(7): Some("f")
current  reference ReferenceId(2): None
reference Mismatch:
previous reference ReferenceId(8): Some("f")
current  reference ReferenceId(3): None
reference Mismatch:
previous reference ReferenceId(9): Some("f")
current  reference ReferenceId(4): None
reference Mismatch:
previous reference ReferenceId(10): Some("f")
current  reference ReferenceId(5): None
reference Mismatch:
previous reference ReferenceId(11): Some("f")
current  reference ReferenceId(6): None
reference Mismatch:
previous reference ReferenceId(12): Some("f")
current  reference ReferenceId(7): None
reference Mismatch:
previous reference ReferenceId(13): Some("f")
current  reference ReferenceId(8): None
reference Mismatch:
previous reference ReferenceId(14): Some("f")
current  reference ReferenceId(9): None
reference Mismatch:
previous reference ReferenceId(15): Some("g")
current  reference ReferenceId(10): None
reference Mismatch:
previous reference ReferenceId(16): Some("g")
current  reference ReferenceId(11): None
reference Mismatch:
previous reference ReferenceId(17): Some("g")
current  reference ReferenceId(12): None
reference Mismatch:
previous reference ReferenceId(18): Some("g")
current  reference ReferenceId(13): None
reference Mismatch:
previous reference ReferenceId(19): Some("g")
current  reference ReferenceId(14): None
reference Mismatch:
previous reference ReferenceId(20): Some("g")
current  reference ReferenceId(15): None
reference Mismatch:
previous reference ReferenceId(21): Some("g")
current  reference ReferenceId(16): None
reference Mismatch:
previous reference ReferenceId(22): Some("g")
current  reference ReferenceId(17): None
reference Mismatch:
previous reference ReferenceId(23): Some("g")
current  reference ReferenceId(18): None
reference Mismatch:
previous reference ReferenceId(24): Some("g")
current  reference ReferenceId(19): None
reference Mismatch:
previous reference ReferenceId(25): Some("a")
current  reference ReferenceId(20): None
reference Mismatch:
previous reference ReferenceId(26): Some("a")
current  reference ReferenceId(21): None
reference Mismatch:
previous reference ReferenceId(27): Some("b")
current  reference ReferenceId(22): None
reference Mismatch:
previous reference ReferenceId(28): Some("b")
current  reference ReferenceId(23): None

tasks/coverage/typescript/tests/cases/compiler/dependencyViaImportAlias.ts
semantic error: `import lib = require(...);` is only supported when compiling modules to CommonJS.
Please consider using `import lib from '...';` alongside Typescript's --allowSyntheticDefaultImports option, or add @babel/plugin-transform-modules-commonjs to your Babel config.
`export = <value>;` is only supported when compiling modules to CommonJS.
Please consider using `export default <value>;`, or add @babel/plugin-transform-modules-commonjs to your Babel config.

tasks/coverage/typescript/tests/cases/compiler/destructureOfVariableSameAsShorthand.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["AxiosResponse", "main"]
current  scope ScopeId(0): ["main"]

tasks/coverage/typescript/tests/cases/compiler/destructuredMaappedTypeIsNotImplicitlyAny.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(1): ["T", "bar", "key", "lorem", "obj"]
current  scope ScopeId(1): ["bar", "key", "lorem", "obj"]

tasks/coverage/typescript/tests/cases/compiler/destructuringInitializerContextualTypeFromContext.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Child", "Parent", "Props", "SFC"]
current  scope ScopeId(0): ["Child", "Parent"]

tasks/coverage/typescript/tests/cases/compiler/destructuringTypeGuardFlow.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["aFoo", "bBar", "bar", "foo"]
current  scope ScopeId(0): ["aFoo", "bBar"]

tasks/coverage/typescript/tests/cases/compiler/destructuringWithConstraint.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Props", "foo"]
current  scope ScopeId(0): ["foo"]
Bindings Mismatch:
previous scope ScopeId(2): ["P", "foo", "props"]
current  scope ScopeId(1): ["foo", "props"]

tasks/coverage/typescript/tests/cases/compiler/destructuringWithGenericParameter.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(1): ["T"]
current  scope ScopeId(1): []
Bindings Mismatch:
previous scope ScopeId(2): ["T", "callback", "object"]
current  scope ScopeId(2): ["callback", "object"]

tasks/coverage/typescript/tests/cases/compiler/discriminableUnionWithIntersectedMembers.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["X", "Y", "x", "y"]
current  scope ScopeId(0): ["x", "y"]

tasks/coverage/typescript/tests/cases/compiler/discriminantElementAccessCheck.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["IfWithString", "IfWithTemplate", "SwitchWithString", "SwitchWithTemplate", "TypeA", "TypeB", "U", "assertNever"]
current  scope ScopeId(0): ["IfWithString", "IfWithTemplate", "SwitchWithString", "SwitchWithTemplate", "assertNever"]

tasks/coverage/typescript/tests/cases/compiler/discriminantNarrowingCouldBeCircular.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["SomeRecord", "getImplicitAriaRole", "kPresentationInheritanceParents", "myObj2", "o"]
current  scope ScopeId(0): ["getImplicitAriaRole", "o"]
reference Mismatch:
previous reference ReferenceId(17): Some("kPresentationInheritanceParents")
current  reference ReferenceId(10): None
reference Mismatch:
previous reference ReferenceId(28): Some("myObj2")
current  reference ReferenceId(19): None
reference Mismatch:
previous reference ReferenceId(29): Some("myObj2")
current  reference ReferenceId(20): None

tasks/coverage/typescript/tests/cases/compiler/discriminantPropertyCheck.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["A", "Additive", "AdditiveObj", "AllTests", "B", "BarEnum", "Base", "DoesNotWork", "Instance", "Item", "Item1", "Item2", "MapOfAllTests", "Multiplicative", "MultiplicativeObj", "NumType", "Obj", "StrType", "TestA", "TestB", "Type", "TypeA", "TypeB", "TypeBar1", "TypeBar2", "Types", "U", "UnionOfBar", "WorksProperly", "doTestingStuff", "f", "foo", "foo1", "foo2", "foo3", "foo4", "foo5", "foo6", "func2", "func3", "goo1", "goo2", "onlyPlus", "u"]
current  scope ScopeId(0): ["BarEnum", "DoesNotWork", "Types", "WorksProperly", "doTestingStuff", "f", "foo", "foo1", "foo2", "foo3", "foo4", "foo5", "foo6", "func2", "func3", "goo1", "goo2", "onlyPlus", "u"]
Bindings Mismatch:
previous scope ScopeId(21): ["Num", "Str", "Types"]
current  scope ScopeId(17): ["Types"]
Bindings Mismatch:
previous scope ScopeId(44): ["BarEnum", "bar1", "bar2"]
current  scope ScopeId(28): ["BarEnum"]

tasks/coverage/typescript/tests/cases/compiler/discriminantPropertyInference.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["DiscriminatorFalse", "DiscriminatorTrue", "Props"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/discriminantUsingEvaluatableTemplateExpression.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["N", "S"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/discriminantsAndNullOrUndefined.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["A", "B", "C", "c", "never", "useA", "useB"]
current  scope ScopeId(0): ["never", "useA", "useB"]
reference Mismatch:
previous reference ReferenceId(6): Some("c")
current  reference ReferenceId(1): None
reference Mismatch:
previous reference ReferenceId(8): Some("c")
current  reference ReferenceId(3): None
reference Mismatch:
previous reference ReferenceId(10): Some("c")
current  reference ReferenceId(5): None
reference Mismatch:
previous reference ReferenceId(12): Some("c")
current  reference ReferenceId(7): None
reference Mismatch:
previous reference ReferenceId(14): Some("c")
current  reference ReferenceId(9): None

tasks/coverage/typescript/tests/cases/compiler/discriminantsAndPrimitives.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Bar", "Disjunction", "EnumTypeNode", "Foo", "NodeA", "NodeBase", "Pattern", "f1", "f2", "f3", "f4", "n"]
current  scope ScopeId(0): ["EnumTypeNode", "f1", "f2", "f3", "f4", "n"]
Bindings Mismatch:
previous scope ScopeId(15): ["Disjunction", "EnumTypeNode", "Pattern"]
current  scope ScopeId(13): ["EnumTypeNode"]

tasks/coverage/typescript/tests/cases/compiler/discriminantsAndTypePredicates.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["A", "B", "foo1", "foo2", "isA", "isB"]
current  scope ScopeId(0): ["foo1", "foo2", "isA", "isB"]

tasks/coverage/typescript/tests/cases/compiler/discriminateObjectTypesOnly.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Thing", "Thing2", "Thing3", "h", "k", "l", "q"]
current  scope ScopeId(0): ["h", "k", "l", "q"]

tasks/coverage/typescript/tests/cases/compiler/discriminateWithDivergentAccessors1.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["WeirdoBox", "WeirdoBox2", "weirdoBox", "weirdoBox2"]
current  scope ScopeId(0): []
reference Mismatch:
previous reference ReferenceId(5): Some("weirdoBox")
current  reference ReferenceId(0): None
reference Mismatch:
previous reference ReferenceId(6): Some("weirdoBox")
current  reference ReferenceId(1): None
reference Mismatch:
previous reference ReferenceId(14): Some("weirdoBox2")
current  reference ReferenceId(2): None
reference Mismatch:
previous reference ReferenceId(15): Some("weirdoBox2")
current  reference ReferenceId(3): None

tasks/coverage/typescript/tests/cases/compiler/discriminateWithOptionalProperty1.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Box", "box"]
current  scope ScopeId(0): []
reference Mismatch:
previous reference ReferenceId(3): Some("box")
current  reference ReferenceId(0): None
reference Mismatch:
previous reference ReferenceId(4): Some("box")
current  reference ReferenceId(1): None

tasks/coverage/typescript/tests/cases/compiler/discriminateWithOptionalProperty2.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["PromiseOrValue", "doubles", "items", "iterable", "mapAsyncIterable"]
current  scope ScopeId(0): ["doubles", "items", "iterable", "mapAsyncIterable"]
Bindings Mismatch:
previous scope ScopeId(2): ["R", "T", "U", "callback", "iterable", "iterator", "mapResult"]
current  scope ScopeId(1): ["callback", "iterable", "iterator", "mapResult"]

tasks/coverage/typescript/tests/cases/compiler/discriminateWithOptionalProperty3.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["CoercedVariableValues", "ExecutionArgs", "ExecutionContext", "Maybe", "buildExecutionContext"]
current  scope ScopeId(0): ["buildExecutionContext"]

tasks/coverage/typescript/tests/cases/compiler/discriminatedUnionWithIndexSignature.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["MapOrSingleton", "UnionAltA", "UnionAltB", "ValueUnion", "withAsConst", "withoutAsConst"]
current  scope ScopeId(0): ["withAsConst", "withoutAsConst"]

tasks/coverage/typescript/tests/cases/compiler/discriminatingUnionWithUnionPropertyAgainstUndefinedWithoutStrictNullChecks.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["A", "A2", "B", "B2", "X", "Y", "opts", "testMethod"]
current  scope ScopeId(0): ["testMethod"]
reference Mismatch:
previous reference ReferenceId(2): Some("opts")
current  reference ReferenceId(0): None
reference Mismatch:
previous reference ReferenceId(3): Some("opts")
current  reference ReferenceId(1): None

tasks/coverage/typescript/tests/cases/compiler/distributiveConditionalTypeNeverIntersection1.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Conflicted", "Ex1", "Ex2", "Ex3", "IsNumber"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/divergentAccessors1.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(1): ["IHasGetSet", "ihgs", "r_ihgs_foo"]
current  scope ScopeId(1): ["ihgs", "r_ihgs_foo"]
Bindings Mismatch:
previous scope ScopeId(5): ["T_HasGetSet", "r_t_hgs_foo", "t_hgs"]
current  scope ScopeId(2): ["r_t_hgs_foo", "t_hgs"]

tasks/coverage/typescript/tests/cases/compiler/divergentAccessorsTypes1.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Test1", "Test2", "Test3"]
current  scope ScopeId(0): ["Test1"]

tasks/coverage/typescript/tests/cases/compiler/divergentAccessorsTypes3.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["One", "Two", "u1"]
current  scope ScopeId(0): ["One", "Two"]
reference Mismatch:
previous reference ReferenceId(2): Some("u1")
current  reference ReferenceId(0): None
reference Mismatch:
previous reference ReferenceId(3): Some("u1")
current  reference ReferenceId(1): None
reference Mismatch:
previous reference ReferenceId(4): Some("u1")
current  reference ReferenceId(2): None
reference Mismatch:
previous reference ReferenceId(5): Some("u1")
current  reference ReferenceId(3): None
reference Mismatch:
previous reference ReferenceId(6): Some("u1")
current  reference ReferenceId(4): None
reference Mismatch:
previous reference ReferenceId(7): Some("u1")
current  reference ReferenceId(5): None
reference Mismatch:
previous reference ReferenceId(8): Some("u1")
current  reference ReferenceId(6): None
reference Mismatch:
previous reference ReferenceId(9): Some("u1")
current  reference ReferenceId(7): None
reference Mismatch:
previous reference ReferenceId(10): Some("u1")
current  reference ReferenceId(8): None
reference Mismatch:
previous reference ReferenceId(11): Some("u1")
current  reference ReferenceId(9): None

tasks/coverage/typescript/tests/cases/compiler/divergentAccessorsTypes7.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(1): ["S"]
current  scope ScopeId(1): []

tasks/coverage/typescript/tests/cases/compiler/divideAndConquerIntersections.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Combine", "EventHub", "Filter", "FilterFunction", "FilterQuery", "FilteredEvent", "L1Fragment", "Middleware", "PerformQuery", "QQ", "RunQuery", "Update", "matchFilter"]
current  scope ScopeId(0): ["EventHub", "matchFilter"]
Bindings Mismatch:
previous scope ScopeId(4): ["Q", "U", "filter"]
current  scope ScopeId(1): ["filter"]
Bindings Mismatch:
previous scope ScopeId(17): ["U"]
current  scope ScopeId(3): []
Bindings Mismatch:
previous scope ScopeId(19): ["Q", "filter", "middleware"]
current  scope ScopeId(5): ["filter", "middleware"]

tasks/coverage/typescript/tests/cases/compiler/doNotEmitPinnedCommentOnNotEmittedNode.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["C", "OData", "x"]
current  scope ScopeId(0): ["C", "x"]

tasks/coverage/typescript/tests/cases/compiler/doNotEmitPinnedCommentOnNotEmittedNodets.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["C", "OData"]
current  scope ScopeId(0): ["C"]

tasks/coverage/typescript/tests/cases/compiler/doNotEmitTripleSlashCommentsOnNotEmittedNode.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["OData"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/doNotInferUnrelatedTypes.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["LiteralType", "alt", "foo"]
current  scope ScopeId(0): ["foo"]
reference Mismatch:
previous reference ReferenceId(7): Some("alt")
current  reference ReferenceId(1): None

tasks/coverage/typescript/tests/cases/compiler/doNotWidenAtObjectLiteralPropertyAssignment.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["IIntervalTreeNode", "ITestEventInterval", "test"]
current  scope ScopeId(0): ["test"]

tasks/coverage/typescript/tests/cases/compiler/dottedModuleName2.ts
semantic error: Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript
Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript
Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript

tasks/coverage/typescript/tests/cases/compiler/dottedNamesInSystem.ts
semantic error: Semantic Collector failed after transform
Missing SymbolId: A
Missing SymbolId: _A
Missing SymbolId: B
Missing SymbolId: _B
Missing SymbolId: C
Missing SymbolId: _C
Missing ReferenceId: _C
Missing ReferenceId: foo
Missing ReferenceId: C
Missing ReferenceId: C
Missing ReferenceId: _B
Missing ReferenceId: _B
Missing ReferenceId: B
Missing ReferenceId: B
Missing ReferenceId: _A
Missing ReferenceId: _A
Missing ReferenceId: A
Missing ReferenceId: A

tasks/coverage/typescript/tests/cases/compiler/dottedSymbolResolution1.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Base", "JQuery", "JQueryStatic", "_setBarAndText", "each"]
current  scope ScopeId(0): ["Base", "_setBarAndText", "each"]

tasks/coverage/typescript/tests/cases/compiler/doubleMixinConditionalTypeBaseClassWorks.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["C", "Constructor", "FooConstructor", "Mixin1", "Mixin2"]
current  scope ScopeId(0): ["C", "Mixin1", "Mixin2"]
Bindings Mismatch:
previous scope ScopeId(2): ["Base", "C"]
current  scope ScopeId(1): ["Base"]
Bindings Mismatch:
previous scope ScopeId(6): ["Base", "C"]
current  scope ScopeId(3): ["Base"]

tasks/coverage/typescript/tests/cases/compiler/doubleUnderscoreEnumEmit.ts
semantic error: Semantic Collector failed after transform
Missing SymbolId: _Foo
Missing ReferenceId: _Foo
Missing ReferenceId: ___call
Missing ReferenceId: Foo
Missing ReferenceId: Foo
Missing SymbolId: _Bar
Missing ReferenceId: _Bar
Missing ReferenceId: __call
Missing ReferenceId: Bar
Missing ReferenceId: Bar

tasks/coverage/typescript/tests/cases/compiler/doubleUnderscoreMappedTypes.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Keys", "Properties", "Property2Type", "k", "ok", "partial"]
current  scope ScopeId(0): ["k", "ok", "partial"]

tasks/coverage/typescript/tests/cases/compiler/doubleUnderscoreReactNamespace.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["__foot", "_jsxFileName", "global", "thing"]
current  scope ScopeId(0): ["_jsxFileName", "thing"]
reference Mismatch:
previous reference ReferenceId(1): Some("__foot")
current  reference ReferenceId(1): None

tasks/coverage/typescript/tests/cases/compiler/downlevelLetConst13.ts
semantic error: Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript
Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript
Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript

tasks/coverage/typescript/tests/cases/compiler/duplicateAnonymousInners1.ts
semantic error: Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript

tasks/coverage/typescript/tests/cases/compiler/duplicateAnonymousModuleClasses.ts
semantic error: Semantic Collector failed after transform
Missing SymbolId: F
Missing SymbolId: _F
Missing ReferenceId: F
Missing ReferenceId: F
Missing SymbolId: _F2
Missing ReferenceId: F
Missing ReferenceId: F
Missing SymbolId: Foo
Missing SymbolId: _Foo
Missing ReferenceId: Foo
Missing ReferenceId: Foo
Missing SymbolId: _Foo2
Missing ReferenceId: Foo
Missing ReferenceId: Foo
Missing SymbolId: Gar
Missing SymbolId: _Gar
Missing SymbolId: Foo
Missing SymbolId: _Foo3
Missing ReferenceId: Foo
Missing ReferenceId: Foo
Missing SymbolId: _Foo4
Missing ReferenceId: Foo
Missing ReferenceId: Foo
Missing ReferenceId: Gar
Missing ReferenceId: Gar

tasks/coverage/typescript/tests/cases/compiler/duplicateConstructSignature.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["I"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/duplicateConstructSignature2.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["I"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/duplicateConstructorOverloadSignature2.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(1): ["T"]
current  scope ScopeId(1): []

tasks/coverage/typescript/tests/cases/compiler/duplicateIdentifierShouldNotShortCircuitBaseTypeBinding.ts
semantic error: Semantic Collector failed after transform
Missing SymbolId: Shapes
Missing SymbolId: _Shapes
Missing ReferenceId: _Shapes
Missing ReferenceId: Point
Missing ReferenceId: Shapes
Missing ReferenceId: Shapes

tasks/coverage/typescript/tests/cases/compiler/duplicateOverloadInTypeAugmentation1.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Array", "a", "r5"]
current  scope ScopeId(0): ["a", "r5"]

tasks/coverage/typescript/tests/cases/compiler/duplicatePackage_packageIdIncludesSubModule.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Foo", "x"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/duplicatePackage_referenceTypes.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Foo", "a", "foo"]
current  scope ScopeId(0): ["a", "foo"]

tasks/coverage/typescript/tests/cases/compiler/duplicatePackage_subModule.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Foo", "a", "o"]
current  scope ScopeId(0): ["a", "o"]

tasks/coverage/typescript/tests/cases/compiler/duplicateVarAndImport.ts
semantic error: Semantic Collector failed after transform
Missing SymbolId: a

tasks/coverage/typescript/tests/cases/compiler/duplicateVariablesByScope.ts
semantic error: Semantic Collector failed after transform
Missing SymbolId: M
Missing SymbolId: _M
Missing ReferenceId: M
Missing ReferenceId: M

tasks/coverage/typescript/tests/cases/compiler/elidedEmbeddedStatementsReplacedWithSemicolon.ts
semantic error: 'with' statements are not allowed

tasks/coverage/typescript/tests/cases/compiler/elidingImportNames.ts
semantic error: `import lib = require(...);` is only supported when compiling modules to CommonJS.
Please consider using `import lib from '...';` alongside Typescript's --allowSyntheticDefaultImports option, or add @babel/plugin-transform-modules-commonjs to your Babel config.
`import lib = require(...);` is only supported when compiling modules to CommonJS.
Please consider using `import lib from '...';` alongside Typescript's --allowSyntheticDefaultImports option, or add @babel/plugin-transform-modules-commonjs to your Babel config.

tasks/coverage/typescript/tests/cases/compiler/emitDecoratorMetadata_object.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["A", "MyClassDecorator", "MyMethodDecorator"]
current  scope ScopeId(0): ["A"]
reference Mismatch:
previous reference ReferenceId(2): Some("MyClassDecorator")
current  reference ReferenceId(0): None
reference Mismatch:
previous reference ReferenceId(3): Some("MyMethodDecorator")
current  reference ReferenceId(1): None

tasks/coverage/typescript/tests/cases/compiler/emitDecoratorMetadata_restArgs.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["A", "B", "MyClassDecorator", "MyMethodDecorator"]
current  scope ScopeId(0): ["A", "B"]
reference Mismatch:
previous reference ReferenceId(2): Some("MyClassDecorator")
current  reference ReferenceId(0): None
reference Mismatch:
previous reference ReferenceId(3): Some("MyMethodDecorator")
current  reference ReferenceId(1): None
reference Mismatch:
previous reference ReferenceId(4): Some("MyClassDecorator")
current  reference ReferenceId(2): None
reference Mismatch:
previous reference ReferenceId(5): Some("MyMethodDecorator")
current  reference ReferenceId(3): None

tasks/coverage/typescript/tests/cases/compiler/emitHelpersWithLocalCollisions.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["A", "__decorate", "dec", "o", "y"]
current  scope ScopeId(0): ["A", "o", "y"]
reference Mismatch:
previous reference ReferenceId(0): Some("dec")
current  reference ReferenceId(0): None

tasks/coverage/typescript/tests/cases/compiler/emitMemberAccessExpression.ts
semantic error: Semantic Collector failed after transform
Missing SymbolId: Microsoft
Missing SymbolId: _Microsoft
Missing SymbolId: PeopleAtWork
Missing SymbolId: _PeopleAtWork
Missing SymbolId: Model
Missing SymbolId: _Model
Missing ReferenceId: _Model
Missing ReferenceId: _Person
Missing ReferenceId: Model
Missing ReferenceId: Model
Missing ReferenceId: _PeopleAtWork
Missing ReferenceId: _PeopleAtWork
Missing ReferenceId: PeopleAtWork
Missing ReferenceId: PeopleAtWork
Missing ReferenceId: _Microsoft
Missing ReferenceId: _Microsoft
Missing ReferenceId: Microsoft
Missing ReferenceId: Microsoft

tasks/coverage/typescript/tests/cases/compiler/emitTopOfFileTripleSlashCommentOnNotEmittedNodeIfRemoveCommentsIsFalse.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["F", "OData"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/emptyAnonymousObjectNarrowing.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["f1", "f2", "foo", "nonNull", "obj", "union"]
current  scope ScopeId(0): ["f1", "f2", "foo"]
Bindings Mismatch:
previous scope ScopeId(5): ["T", "x"]
current  scope ScopeId(5): ["x"]
Bindings Mismatch:
previous scope ScopeId(8): ["T", "x"]
current  scope ScopeId(8): ["x"]
reference Mismatch:
previous reference ReferenceId(0): Some("nonNull")
current  reference ReferenceId(0): None
reference Mismatch:
previous reference ReferenceId(1): Some("nonNull")
current  reference ReferenceId(1): None
reference Mismatch:
previous reference ReferenceId(2): Some("nonNull")
current  reference ReferenceId(2): None
reference Mismatch:
previous reference ReferenceId(3): Some("nonNull")
current  reference ReferenceId(3): None
reference Mismatch:
previous reference ReferenceId(4): Some("obj")
current  reference ReferenceId(4): None
reference Mismatch:
previous reference ReferenceId(5): Some("nonNull")
current  reference ReferenceId(5): None
reference Mismatch:
previous reference ReferenceId(6): Some("nonNull")
current  reference ReferenceId(6): None
reference Mismatch:
previous reference ReferenceId(8): Some("nonNull")
current  reference ReferenceId(7): None
reference Mismatch:
previous reference ReferenceId(10): Some("nonNull")
current  reference ReferenceId(9): None
reference Mismatch:
previous reference ReferenceId(11): Some("nonNull")
current  reference ReferenceId(10): None
reference Mismatch:
previous reference ReferenceId(13): Some("nonNull")
current  reference ReferenceId(11): None
reference Mismatch:
previous reference ReferenceId(15): Some("nonNull")
current  reference ReferenceId(13): None
reference Mismatch:
previous reference ReferenceId(16): Some("nonNull")
current  reference ReferenceId(14): None
reference Mismatch:
previous reference ReferenceId(17): Some("nonNull")
current  reference ReferenceId(15): None
reference Mismatch:
previous reference ReferenceId(18): Some("union")
current  reference ReferenceId(16): None
reference Mismatch:
previous reference ReferenceId(19): Some("nonNull")
current  reference ReferenceId(17): None
reference Mismatch:
previous reference ReferenceId(20): Some("nonNull")
current  reference ReferenceId(18): None
reference Mismatch:
previous reference ReferenceId(21): Some("nonNull")
current  reference ReferenceId(19): None
reference Mismatch:
previous reference ReferenceId(23): Some("nonNull")
current  reference ReferenceId(21): None
reference Mismatch:
previous reference ReferenceId(24): Some("nonNull")
current  reference ReferenceId(22): None
reference Mismatch:
previous reference ReferenceId(25): Some("nonNull")
current  reference ReferenceId(23): None
reference Mismatch:
previous reference ReferenceId(26): Some("nonNull")
current  reference ReferenceId(24): None
reference Mismatch:
previous reference ReferenceId(27): Some("nonNull")
current  reference ReferenceId(25): None
reference Mismatch:
previous reference ReferenceId(28): Some("nonNull")
current  reference ReferenceId(26): None
reference Mismatch:
previous reference ReferenceId(30): Some("nonNull")
current  reference ReferenceId(28): None
reference Mismatch:
previous reference ReferenceId(31): Some("nonNull")
current  reference ReferenceId(29): None

tasks/coverage/typescript/tests/cases/compiler/emptyArgumentsListComment.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["a"]
current  scope ScopeId(0): []
reference Mismatch:
previous reference ReferenceId(0): Some("a")
current  reference ReferenceId(0): None
reference Mismatch:
previous reference ReferenceId(1): Some("a")
current  reference ReferenceId(1): None

tasks/coverage/typescript/tests/cases/compiler/emptyIndexer.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["I1", "I2", "n", "x"]
current  scope ScopeId(0): ["n", "x"]

tasks/coverage/typescript/tests/cases/compiler/emptyOptionalBindingPatternInDeclarationSignature.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["I1", "T1", "T2", "val1", "val2"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/enumAssignmentCompat4.ts
semantic error: Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript
Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript

tasks/coverage/typescript/tests/cases/compiler/enumCodeGenNewLines1.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(1): ["b", "c", "d", "foo"]
current  scope ScopeId(1): ["foo"]

tasks/coverage/typescript/tests/cases/compiler/enumFromExternalModule.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(1): ["Mode", "Open"]
current  scope ScopeId(1): ["Mode"]

tasks/coverage/typescript/tests/cases/compiler/enumIndexer.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(1): ["MyEnumType", "bar", "foo"]
current  scope ScopeId(1): ["MyEnumType"]

tasks/coverage/typescript/tests/cases/compiler/enumInitializersWithExponents.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["E"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/enumLiteralUnionNotWidened.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["A", "B", "C", "D", "List", "asList", "fn1", "fn2"]
current  scope ScopeId(0): ["A", "B", "List", "asList", "fn1", "fn2"]
Bindings Mismatch:
previous scope ScopeId(1): ["A", "one", "two"]
current  scope ScopeId(1): ["A"]
Bindings Mismatch:
previous scope ScopeId(2): ["B", "bar", "foo"]
current  scope ScopeId(2): ["B"]
Bindings Mismatch:
previous scope ScopeId(5): ["T"]
current  scope ScopeId(3): []
Bindings Mismatch:
previous scope ScopeId(6): ["T", "arg"]
current  scope ScopeId(4): ["arg"]

tasks/coverage/typescript/tests/cases/compiler/enumLiteralsSubtypeReduction.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(1): ["E", "E0", "E1", "E10", "E100", "E1000", "E1001", "E1002", "E1003", "E1004", "E1005", "E1006", "E1007", "E1008", "E1009", "E101", "E1010", "E1011", "E1012", "E1013", "E1014", "E1015", "E1016", "E1017", "E1018", "E1019", "E102", "E1020", "E1021", "E1022", "E1023", "E103", "E104", "E105", "E106", "E107", "E108", "E109", "E11", "E110", "E111", "E112", "E113", "E114", "E115", "E116", "E117", "E118", "E119", "E12", "E120", "E121", "E122", "E123", "E124", "E125", "E126", "E127", "E128", "E129", "E13", "E130", "E131", "E132", "E133", "E134", "E135", "E136", "E137", "E138", "E139", "E14", "E140", "E141", "E142", "E143", "E144", "E145", "E146", "E147", "E148", "E149", "E15", "E150", "E151", "E152", "E153", "E154", "E155", "E156", "E157", "E158", "E159", "E16", "E160", "E161", "E162", "E163", "E164", "E165", "E166", "E167", "E168", "E169", "E17", "E170", "E171", "E172", "E173", "E174", "E175", "E176", "E177", "E178", "E179", "E18", "E180", "E181", "E182", "E183", "E184", "E185", "E186", "E187", "E188", "E189", "E19", "E190", "E191", "E192", "E193", "E194", "E195", "E196", "E197", "E198", "E199", "E2", "E20", "E200", "E201", "E202", "E203", "E204", "E205", "E206", "E207", "E208", "E209", "E21", "E210", "E211", "E212", "E213", "E214", "E215", "E216", "E217", "E218", "E219", "E22", "E220", "E221", "E222", "E223", "E224", "E225", "E226", "E227", "E228", "E229", "E23", "E230", "E231", "E232", "E233", "E234", "E235", "E236", "E237", "E238", "E239", "E24", "E240", "E241", "E242", "E243", "E244", "E245", "E246", "E247", "E248", "E249", "E25", "E250", "E251", "E252", "E253", "E254", "E255", "E256", "E257", "E258", "E259", "E26", "E260", "E261", "E262", "E263", "E264", "E265", "E266", "E267", "E268", "E269", "E27", "E270", "E271", "E272", "E273", "E274", "E275", "E276", "E277", "E278", "E279", "E28", "E280", "E281", "E282", "E283", "E284", "E285", "E286", "E287", "E288", "E289", "E29", "E290", "E291", "E292", "E293", "E294", "E295", "E296", "E297", "E298", "E299", "E3", "E30", "E300", "E301", "E302", "E303", "E304", "E305", "E306", "E307", "E308", "E309", "E31", "E310", "E311", "E312", "E313", "E314", "E315", "E316", "E317", "E318", "E319", "E32", "E320", "E321", "E322", "E323", "E324", "E325", "E326", "E327", "E328", "E329", "E33", "E330", "E331", "E332", "E333", "E334", "E335", "E336", "E337", "E338", "E339", "E34", "E340", "E341", "E342", "E343", "E344", "E345", "E346", "E347", "E348", "E349", "E35", "E350", "E351", "E352", "E353", "E354", "E355", "E356", "E357", "E358", "E359", "E36", "E360", "E361", "E362", "E363", "E364", "E365", "E366", "E367", "E368", "E369", "E37", "E370", "E371", "E372", "E373", "E374", "E375", "E376", "E377", "E378", "E379", "E38", "E380", "E381", "E382", "E383", "E384", "E385", "E386", "E387", "E388", "E389", "E39", "E390", "E391", "E392", "E393", "E394", "E395", "E396", "E397", "E398", "E399", "E4", "E40", "E400", "E401", "E402", "E403", "E404", "E405", "E406", "E407", "E408", "E409", "E41", "E410", "E411", "E412", "E413", "E414", "E415", "E416", "E417", "E418", "E419", "E42", "E420", "E421", "E422", "E423", "E424", "E425", "E426", "E427", "E428", "E429", "E43", "E430", "E431", "E432", "E433", "E434", "E435", "E436", "E437", "E438", "E439", "E44", "E440", "E441", "E442", "E443", "E444", "E445", "E446", "E447", "E448", "E449", "E45", "E450", "E451", "E452", "E453", "E454", "E455", "E456", "E457", "E458", "E459", "E46", "E460", "E461", "E462", "E463", "E464", "E465", "E466", "E467", "E468", "E469", "E47", "E470", "E471", "E472", "E473", "E474", "E475", "E476", "E477", "E478", "E479", "E48", "E480", "E481", "E482", "E483", "E484", "E485", "E486", "E487", "E488", "E489", "E49", "E490", "E491", "E492", "E493", "E494", "E495", "E496", "E497", "E498", "E499", "E5", "E50", "E500", "E501", "E502", "E503", "E504", "E505", "E506", "E507", "E508", "E509", "E51", "E510", "E511", "E512", "E513", "E514", "E515", "E516", "E517", "E518", "E519", "E52", "E520", "E521", "E522", "E523", "E524", "E525", "E526", "E527", "E528", "E529", "E53", "E530", "E531", "E532", "E533", "E534", "E535", "E536", "E537", "E538", "E539", "E54", "E540", "E541", "E542", "E543", "E544", "E545", "E546", "E547", "E548", "E549", "E55", "E550", "E551", "E552", "E553", "E554", "E555", "E556", "E557", "E558", "E559", "E56", "E560", "E561", "E562", "E563", "E564", "E565", "E566", "E567", "E568", "E569", "E57", "E570", "E571", "E572", "E573", "E574", "E575", "E576", "E577", "E578", "E579", "E58", "E580", "E581", "E582", "E583", "E584", "E585", "E586", "E587", "E588", "E589", "E59", "E590", "E591", "E592", "E593", "E594", "E595", "E596", "E597", "E598", "E599", "E6", "E60", "E600", "E601", "E602", "E603", "E604", "E605", "E606", "E607", "E608", "E609", "E61", "E610", "E611", "E612", "E613", "E614", "E615", "E616", "E617", "E618", "E619", "E62", "E620", "E621", "E622", "E623", "E624", "E625", "E626", "E627", "E628", "E629", "E63", "E630", "E631", "E632", "E633", "E634", "E635", "E636", "E637", "E638", "E639", "E64", "E640", "E641", "E642", "E643", "E644", "E645", "E646", "E647", "E648", "E649", "E65", "E650", "E651", "E652", "E653", "E654", "E655", "E656", "E657", "E658", "E659", "E66", "E660", "E661", "E662", "E663", "E664", "E665", "E666", "E667", "E668", "E669", "E67", "E670", "E671", "E672", "E673", "E674", "E675", "E676", "E677", "E678", "E679", "E68", "E680", "E681", "E682", "E683", "E684", "E685", "E686", "E687", "E688", "E689", "E69", "E690", "E691", "E692", "E693", "E694", "E695", "E696", "E697", "E698", "E699", "E7", "E70", "E700", "E701", "E702", "E703", "E704", "E705", "E706", "E707", "E708", "E709", "E71", "E710", "E711", "E712", "E713", "E714", "E715", "E716", "E717", "E718", "E719", "E72", "E720", "E721", "E722", "E723", "E724", "E725", "E726", "E727", "E728", "E729", "E73", "E730", "E731", "E732", "E733", "E734", "E735", "E736", "E737", "E738", "E739", "E74", "E740", "E741", "E742", "E743", "E744", "E745", "E746", "E747", "E748", "E749", "E75", "E750", "E751", "E752", "E753", "E754", "E755", "E756", "E757", "E758", "E759", "E76", "E760", "E761", "E762", "E763", "E764", "E765", "E766", "E767", "E768", "E769", "E77", "E770", "E771", "E772", "E773", "E774", "E775", "E776", "E777", "E778", "E779", "E78", "E780", "E781", "E782", "E783", "E784", "E785", "E786", "E787", "E788", "E789", "E79", "E790", "E791", "E792", "E793", "E794", "E795", "E796", "E797", "E798", "E799", "E8", "E80", "E800", "E801", "E802", "E803", "E804", "E805", "E806", "E807", "E808", "E809", "E81", "E810", "E811", "E812", "E813", "E814", "E815", "E816", "E817", "E818", "E819", "E82", "E820", "E821", "E822", "E823", "E824", "E825", "E826", "E827", "E828", "E829", "E83", "E830", "E831", "E832", "E833", "E834", "E835", "E836", "E837", "E838", "E839", "E84", "E840", "E841", "E842", "E843", "E844", "E845", "E846", "E847", "E848", "E849", "E85", "E850", "E851", "E852", "E853", "E854", "E855", "E856", "E857", "E858", "E859", "E86", "E860", "E861", "E862", "E863", "E864", "E865", "E866", "E867", "E868", "E869", "E87", "E870", "E871", "E872", "E873", "E874", "E875", "E876", "E877", "E878", "E879", "E88", "E880", "E881", "E882", "E883", "E884", "E885", "E886", "E887", "E888", "E889", "E89", "E890", "E891", "E892", "E893", "E894", "E895", "E896", "E897", "E898", "E899", "E9", "E90", "E900", "E901", "E902", "E903", "E904", "E905", "E906", "E907", "E908", "E909", "E91", "E910", "E911", "E912", "E913", "E914", "E915", "E916", "E917", "E918", "E919", "E92", "E920", "E921", "E922", "E923", "E924", "E925", "E926", "E927", "E928", "E929", "E93", "E930", "E931", "E932", "E933", "E934", "E935", "E936", "E937", "E938", "E939", "E94", "E940", "E941", "E942", "E943", "E944", "E945", "E946", "E947", "E948", "E949", "E95", "E950", "E951", "E952", "E953", "E954", "E955", "E956", "E957", "E958", "E959", "E96", "E960", "E961", "E962", "E963", "E964", "E965", "E966", "E967", "E968", "E969", "E97", "E970", "E971", "E972", "E973", "E974", "E975", "E976", "E977", "E978", "E979", "E98", "E980", "E981", "E982", "E983", "E984", "E985", "E986", "E987", "E988", "E989", "E99", "E990", "E991", "E992", "E993", "E994", "E995", "E996", "E997", "E998", "E999"]
current  scope ScopeId(1): ["E"]

tasks/coverage/typescript/tests/cases/compiler/enumMapBackIntoItself.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(1): ["Large", "Medium", "Small", "TShirtSize"]
current  scope ScopeId(1): ["TShirtSize"]

tasks/coverage/typescript/tests/cases/compiler/enumMemberReduction.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(1): ["A", "B", "C", "MyEnum"]
current  scope ScopeId(1): ["MyEnum"]
Bindings Mismatch:
previous scope ScopeId(2): ["A", "B", "C", "MyStringEnum"]
current  scope ScopeId(2): ["MyStringEnum"]
Bindings Mismatch:
previous scope ScopeId(3): ["A", "B", "C", "MyStringEnumWithEmpty"]
current  scope ScopeId(3): ["MyStringEnumWithEmpty"]

tasks/coverage/typescript/tests/cases/compiler/enumNegativeLiteral1.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(1): ["E", "a", "b", "c"]
current  scope ScopeId(1): ["E"]

tasks/coverage/typescript/tests/cases/compiler/enumNumbering1.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(1): ["A", "B", "C", "D", "E", "Test"]
current  scope ScopeId(1): ["Test"]

tasks/coverage/typescript/tests/cases/compiler/enumOperations.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(1): ["Enum", "None"]
current  scope ScopeId(1): ["Enum"]

tasks/coverage/typescript/tests/cases/compiler/enumWithInfinityProperty.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(1): ["A", "Infinity"]
current  scope ScopeId(1): ["A"]

tasks/coverage/typescript/tests/cases/compiler/enumWithNaNProperty.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(1): ["A", "NaN"]
current  scope ScopeId(1): ["A"]

tasks/coverage/typescript/tests/cases/compiler/enumWithNegativeInfinityProperty.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(1): ["-Infinity", "A"]
current  scope ScopeId(1): ["A"]

tasks/coverage/typescript/tests/cases/compiler/enumWithQuotedElementName1.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(1): ["E", "fo\"o"]
current  scope ScopeId(1): ["E"]

tasks/coverage/typescript/tests/cases/compiler/enumWithQuotedElementName2.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(1): ["E", "fo'o"]
current  scope ScopeId(1): ["E"]

tasks/coverage/typescript/tests/cases/compiler/enumWithUnicodeEscape1.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(1): ["E", "gold ✰"]
current  scope ScopeId(1): ["E"]

tasks/coverage/typescript/tests/cases/compiler/enumWithoutInitializerAfterComputedMember.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(1): ["E", "a", "b", "c"]
current  scope ScopeId(1): ["E"]

tasks/coverage/typescript/tests/cases/compiler/enumsWithMultipleDeclarations3.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(2): ["A", "E"]
current  scope ScopeId(1): ["E"]

tasks/coverage/typescript/tests/cases/compiler/errorConstructorSubtypes.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["ErrorConstructor", "x"]
current  scope ScopeId(0): []
reference Mismatch:
previous reference ReferenceId(3): Some("x")
current  reference ReferenceId(0): None
reference Mismatch:
previous reference ReferenceId(5): Some("x")
current  reference ReferenceId(2): None
reference Mismatch:
previous reference ReferenceId(7): Some("x")
current  reference ReferenceId(4): None
reference Mismatch:
previous reference ReferenceId(8): Some("x")
current  reference ReferenceId(5): None

tasks/coverage/typescript/tests/cases/compiler/es2018ObjectAssign.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["p", "test"]
current  scope ScopeId(0): ["test"]
reference Mismatch:
previous reference ReferenceId(2): Some("p")
current  reference ReferenceId(1): None

tasks/coverage/typescript/tests/cases/compiler/es5-asyncFunction.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["empty", "singleAwait", "x"]
current  scope ScopeId(0): ["empty", "singleAwait"]
reference Mismatch:
previous reference ReferenceId(0): Some("x")
current  reference ReferenceId(0): None

tasks/coverage/typescript/tests/cases/compiler/es5-asyncFunctionArrayLiterals.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["a", "arrayLiteral0", "arrayLiteral1", "arrayLiteral2", "arrayLiteral3", "arrayLiteral4", "arrayLiteral5", "arrayLiteral6", "arrayLiteral7", "x", "y", "z"]
current  scope ScopeId(0): ["arrayLiteral0", "arrayLiteral1", "arrayLiteral2", "arrayLiteral3", "arrayLiteral4", "arrayLiteral5", "arrayLiteral6", "arrayLiteral7"]
reference Mismatch:
previous reference ReferenceId(0): Some("x")
current  reference ReferenceId(0): None
reference Mismatch:
previous reference ReferenceId(1): Some("y")
current  reference ReferenceId(1): None
reference Mismatch:
previous reference ReferenceId(2): Some("z")
current  reference ReferenceId(2): None
reference Mismatch:
previous reference ReferenceId(3): Some("x")
current  reference ReferenceId(3): None
reference Mismatch:
previous reference ReferenceId(4): Some("y")
current  reference ReferenceId(4): None
reference Mismatch:
previous reference ReferenceId(5): Some("z")
current  reference ReferenceId(5): None
reference Mismatch:
previous reference ReferenceId(6): Some("x")
current  reference ReferenceId(6): None
reference Mismatch:
previous reference ReferenceId(7): Some("y")
current  reference ReferenceId(7): None
reference Mismatch:
previous reference ReferenceId(8): Some("z")
current  reference ReferenceId(8): None
reference Mismatch:
previous reference ReferenceId(9): Some("x")
current  reference ReferenceId(9): None
reference Mismatch:
previous reference ReferenceId(10): Some("y")
current  reference ReferenceId(10): None
reference Mismatch:
previous reference ReferenceId(11): Some("z")
current  reference ReferenceId(11): None
reference Mismatch:
previous reference ReferenceId(12): Some("x")
current  reference ReferenceId(12): None
reference Mismatch:
previous reference ReferenceId(13): Some("y")
current  reference ReferenceId(13): None
reference Mismatch:
previous reference ReferenceId(14): Some("z")
current  reference ReferenceId(14): None
reference Mismatch:
previous reference ReferenceId(15): Some("x")
current  reference ReferenceId(15): None
reference Mismatch:
previous reference ReferenceId(16): Some("y")
current  reference ReferenceId(16): None
reference Mismatch:
previous reference ReferenceId(17): Some("z")
current  reference ReferenceId(17): None
reference Mismatch:
previous reference ReferenceId(18): Some("x")
current  reference ReferenceId(18): None
reference Mismatch:
previous reference ReferenceId(19): Some("y")
current  reference ReferenceId(19): None
reference Mismatch:
previous reference ReferenceId(20): Some("z")
current  reference ReferenceId(20): None
reference Mismatch:
previous reference ReferenceId(21): Some("a")
current  reference ReferenceId(21): None
reference Mismatch:
previous reference ReferenceId(22): Some("x")
current  reference ReferenceId(22): None
reference Mismatch:
previous reference ReferenceId(23): Some("y")
current  reference ReferenceId(23): None
reference Mismatch:
previous reference ReferenceId(24): Some("z")
current  reference ReferenceId(24): None
reference Mismatch:
previous reference ReferenceId(25): Some("a")
current  reference ReferenceId(25): None

tasks/coverage/typescript/tests/cases/compiler/es5-asyncFunctionBinaryExpressions.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["a", "b", "binaryAssignment0", "binaryAssignment1", "binaryAssignment10", "binaryAssignment11", "binaryAssignment12", "binaryAssignment13", "binaryAssignment2", "binaryAssignment3", "binaryAssignment4", "binaryAssignment5", "binaryAssignment6", "binaryAssignment7", "binaryAssignment8", "binaryAssignment9", "binaryComma0", "binaryComma1", "binaryCompoundAssignment0", "binaryCompoundAssignment1", "binaryCompoundAssignment2", "binaryCompoundAssignment3", "binaryCompoundAssignment4", "binaryCompoundAssignment5", "binaryCompoundAssignment6", "binaryCompoundAssignment7", "binaryCompoundAssignment8", "binaryExponentiation", "binaryLogicalAnd0", "binaryLogicalAnd1", "binaryPlus0", "binaryPlus1", "c", "x", "y", "z"]
current  scope ScopeId(0): ["binaryAssignment0", "binaryAssignment1", "binaryAssignment10", "binaryAssignment11", "binaryAssignment12", "binaryAssignment13", "binaryAssignment2", "binaryAssignment3", "binaryAssignment4", "binaryAssignment5", "binaryAssignment6", "binaryAssignment7", "binaryAssignment8", "binaryAssignment9", "binaryComma0", "binaryComma1", "binaryCompoundAssignment0", "binaryCompoundAssignment1", "binaryCompoundAssignment2", "binaryCompoundAssignment3", "binaryCompoundAssignment4", "binaryCompoundAssignment5", "binaryCompoundAssignment6", "binaryCompoundAssignment7", "binaryCompoundAssignment8", "binaryExponentiation", "binaryLogicalAnd0", "binaryLogicalAnd1", "binaryPlus0", "binaryPlus1"]
reference Mismatch:
previous reference ReferenceId(0): Some("x")
current  reference ReferenceId(0): None
reference Mismatch:
previous reference ReferenceId(1): Some("y")
current  reference ReferenceId(1): None
reference Mismatch:
previous reference ReferenceId(2): Some("x")
current  reference ReferenceId(2): None
reference Mismatch:
previous reference ReferenceId(3): Some("y")
current  reference ReferenceId(3): None
reference Mismatch:
previous reference ReferenceId(4): Some("x")
current  reference ReferenceId(4): None
reference Mismatch:
previous reference ReferenceId(5): Some("y")
current  reference ReferenceId(5): None
reference Mismatch:
previous reference ReferenceId(6): Some("x")
current  reference ReferenceId(6): None
reference Mismatch:
previous reference ReferenceId(7): Some("y")
current  reference ReferenceId(7): None
reference Mismatch:
previous reference ReferenceId(8): Some("x")
current  reference ReferenceId(8): None
reference Mismatch:
previous reference ReferenceId(9): Some("y")
current  reference ReferenceId(9): None
reference Mismatch:
previous reference ReferenceId(10): Some("x")
current  reference ReferenceId(10): None
reference Mismatch:
previous reference ReferenceId(11): Some("y")
current  reference ReferenceId(11): None
reference Mismatch:
previous reference ReferenceId(12): Some("x")
current  reference ReferenceId(12): None
reference Mismatch:
previous reference ReferenceId(13): Some("y")
current  reference ReferenceId(13): None
reference Mismatch:
previous reference ReferenceId(14): Some("x")
current  reference ReferenceId(14): None
reference Mismatch:
previous reference ReferenceId(15): Some("z")
current  reference ReferenceId(15): None
reference Mismatch:
previous reference ReferenceId(16): Some("y")
current  reference ReferenceId(16): None
reference Mismatch:
previous reference ReferenceId(17): Some("x")
current  reference ReferenceId(17): None
reference Mismatch:
previous reference ReferenceId(18): Some("z")
current  reference ReferenceId(18): None
reference Mismatch:
previous reference ReferenceId(19): Some("y")
current  reference ReferenceId(19): None
reference Mismatch:
previous reference ReferenceId(20): Some("x")
current  reference ReferenceId(20): None
reference Mismatch:
previous reference ReferenceId(21): Some("z")
current  reference ReferenceId(21): None
reference Mismatch:
previous reference ReferenceId(22): Some("y")
current  reference ReferenceId(22): None
reference Mismatch:
previous reference ReferenceId(23): Some("x")
current  reference ReferenceId(23): None
reference Mismatch:
previous reference ReferenceId(24): Some("y")
current  reference ReferenceId(24): None
reference Mismatch:
previous reference ReferenceId(25): Some("x")
current  reference ReferenceId(25): None
reference Mismatch:
previous reference ReferenceId(26): Some("y")
current  reference ReferenceId(26): None
reference Mismatch:
previous reference ReferenceId(27): Some("x")
current  reference ReferenceId(27): None
reference Mismatch:
previous reference ReferenceId(28): Some("z")
current  reference ReferenceId(28): None
reference Mismatch:
previous reference ReferenceId(29): Some("y")
current  reference ReferenceId(29): None
reference Mismatch:
previous reference ReferenceId(30): Some("x")
current  reference ReferenceId(30): None
reference Mismatch:
previous reference ReferenceId(31): Some("z")
current  reference ReferenceId(31): None
reference Mismatch:
previous reference ReferenceId(32): Some("y")
current  reference ReferenceId(32): None
reference Mismatch:
previous reference ReferenceId(33): Some("x")
current  reference ReferenceId(33): None
reference Mismatch:
previous reference ReferenceId(34): Some("z")
current  reference ReferenceId(34): None
reference Mismatch:
previous reference ReferenceId(35): Some("y")
current  reference ReferenceId(35): None
reference Mismatch:
previous reference ReferenceId(36): Some("x")
current  reference ReferenceId(36): None
reference Mismatch:
previous reference ReferenceId(37): Some("z")
current  reference ReferenceId(37): None
reference Mismatch:
previous reference ReferenceId(38): Some("y")
current  reference ReferenceId(38): None
reference Mismatch:
previous reference ReferenceId(39): Some("x")
current  reference ReferenceId(39): None
reference Mismatch:
previous reference ReferenceId(40): Some("z")
current  reference ReferenceId(40): None
reference Mismatch:
previous reference ReferenceId(41): Some("y")
current  reference ReferenceId(41): None
reference Mismatch:
previous reference ReferenceId(42): Some("x")
current  reference ReferenceId(42): None
reference Mismatch:
previous reference ReferenceId(43): Some("z")
current  reference ReferenceId(43): None
reference Mismatch:
previous reference ReferenceId(44): Some("y")
current  reference ReferenceId(44): None
reference Mismatch:
previous reference ReferenceId(45): Some("x")
current  reference ReferenceId(45): None
reference Mismatch:
previous reference ReferenceId(46): Some("y")
current  reference ReferenceId(46): None
reference Mismatch:
previous reference ReferenceId(47): Some("x")
current  reference ReferenceId(47): None
reference Mismatch:
previous reference ReferenceId(48): Some("y")
current  reference ReferenceId(48): None
reference Mismatch:
previous reference ReferenceId(49): Some("x")
current  reference ReferenceId(49): None
reference Mismatch:
previous reference ReferenceId(50): Some("a")
current  reference ReferenceId(50): None
reference Mismatch:
previous reference ReferenceId(51): Some("y")
current  reference ReferenceId(51): None
reference Mismatch:
previous reference ReferenceId(52): Some("x")
current  reference ReferenceId(52): None
reference Mismatch:
previous reference ReferenceId(53): Some("y")
current  reference ReferenceId(53): None
reference Mismatch:
previous reference ReferenceId(54): Some("x")
current  reference ReferenceId(54): None
reference Mismatch:
previous reference ReferenceId(55): Some("a")
current  reference ReferenceId(55): None
reference Mismatch:
previous reference ReferenceId(56): Some("y")
current  reference ReferenceId(56): None
reference Mismatch:
previous reference ReferenceId(57): Some("x")
current  reference ReferenceId(57): None
reference Mismatch:
previous reference ReferenceId(58): Some("a")
current  reference ReferenceId(58): None
reference Mismatch:
previous reference ReferenceId(59): Some("y")
current  reference ReferenceId(59): None
reference Mismatch:
previous reference ReferenceId(60): Some("x")
current  reference ReferenceId(60): None
reference Mismatch:
previous reference ReferenceId(61): Some("y")
current  reference ReferenceId(61): None
reference Mismatch:
previous reference ReferenceId(62): Some("x")
current  reference ReferenceId(62): None
reference Mismatch:
previous reference ReferenceId(63): Some("a")
current  reference ReferenceId(63): None
reference Mismatch:
previous reference ReferenceId(64): Some("y")
current  reference ReferenceId(64): None
reference Mismatch:
previous reference ReferenceId(65): Some("x")
current  reference ReferenceId(65): None
reference Mismatch:
previous reference ReferenceId(66): Some("a")
current  reference ReferenceId(66): None
reference Mismatch:
previous reference ReferenceId(67): Some("y")
current  reference ReferenceId(67): None
reference Mismatch:
previous reference ReferenceId(68): Some("x")
current  reference ReferenceId(68): None
reference Mismatch:
previous reference ReferenceId(69): Some("y")
current  reference ReferenceId(69): None
reference Mismatch:
previous reference ReferenceId(70): Some("x")
current  reference ReferenceId(70): None
reference Mismatch:
previous reference ReferenceId(71): Some("y")
current  reference ReferenceId(71): None
reference Mismatch:
previous reference ReferenceId(72): Some("x")
current  reference ReferenceId(72): None
reference Mismatch:
previous reference ReferenceId(73): Some("y")
current  reference ReferenceId(73): None
reference Mismatch:
previous reference ReferenceId(75): Some("x")
current  reference ReferenceId(74): None
reference Mismatch:
previous reference ReferenceId(76): Some("y")
current  reference ReferenceId(75): None

tasks/coverage/typescript/tests/cases/compiler/es5-asyncFunctionCallExpressions.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["a", "b", "c", "callExpression0", "callExpression1", "callExpression10", "callExpression11", "callExpression12", "callExpression13", "callExpression14", "callExpression15", "callExpression16", "callExpression17", "callExpression18", "callExpression19", "callExpression2", "callExpression20", "callExpression3", "callExpression4", "callExpression5", "callExpression6", "callExpression7", "callExpression8", "callExpression9", "x", "y", "z"]
current  scope ScopeId(0): ["callExpression0", "callExpression1", "callExpression10", "callExpression11", "callExpression12", "callExpression13", "callExpression14", "callExpression15", "callExpression16", "callExpression17", "callExpression18", "callExpression19", "callExpression2", "callExpression20", "callExpression3", "callExpression4", "callExpression5", "callExpression6", "callExpression7", "callExpression8", "callExpression9"]
reference Mismatch:
previous reference ReferenceId(0): Some("x")
current  reference ReferenceId(0): None
reference Mismatch:
previous reference ReferenceId(1): Some("y")
current  reference ReferenceId(1): None
reference Mismatch:
previous reference ReferenceId(2): Some("z")
current  reference ReferenceId(2): None
reference Mismatch:
previous reference ReferenceId(3): Some("x")
current  reference ReferenceId(3): None
reference Mismatch:
previous reference ReferenceId(4): Some("y")
current  reference ReferenceId(4): None
reference Mismatch:
previous reference ReferenceId(5): Some("z")
current  reference ReferenceId(5): None
reference Mismatch:
previous reference ReferenceId(6): Some("x")
current  reference ReferenceId(6): None
reference Mismatch:
previous reference ReferenceId(7): Some("y")
current  reference ReferenceId(7): None
reference Mismatch:
previous reference ReferenceId(8): Some("z")
current  reference ReferenceId(8): None
reference Mismatch:
previous reference ReferenceId(9): Some("x")
current  reference ReferenceId(9): None
reference Mismatch:
previous reference ReferenceId(10): Some("y")
current  reference ReferenceId(10): None
reference Mismatch:
previous reference ReferenceId(11): Some("z")
current  reference ReferenceId(11): None
reference Mismatch:
previous reference ReferenceId(12): Some("x")
current  reference ReferenceId(12): None
reference Mismatch:
previous reference ReferenceId(13): Some("y")
current  reference ReferenceId(13): None
reference Mismatch:
previous reference ReferenceId(14): Some("z")
current  reference ReferenceId(14): None
reference Mismatch:
previous reference ReferenceId(15): Some("x")
current  reference ReferenceId(15): None
reference Mismatch:
previous reference ReferenceId(16): Some("y")
current  reference ReferenceId(16): None
reference Mismatch:
previous reference ReferenceId(17): Some("z")
current  reference ReferenceId(17): None
reference Mismatch:
previous reference ReferenceId(18): Some("x")
current  reference ReferenceId(18): None
reference Mismatch:
previous reference ReferenceId(19): Some("y")
current  reference ReferenceId(19): None
reference Mismatch:
previous reference ReferenceId(20): Some("z")
current  reference ReferenceId(20): None
reference Mismatch:
previous reference ReferenceId(21): Some("x")
current  reference ReferenceId(21): None
reference Mismatch:
previous reference ReferenceId(22): Some("y")
current  reference ReferenceId(22): None
reference Mismatch:
previous reference ReferenceId(23): Some("z")
current  reference ReferenceId(23): None
reference Mismatch:
previous reference ReferenceId(24): Some("x")
current  reference ReferenceId(24): None
reference Mismatch:
previous reference ReferenceId(25): Some("y")
current  reference ReferenceId(25): None
reference Mismatch:
previous reference ReferenceId(26): Some("z")
current  reference ReferenceId(26): None
reference Mismatch:
previous reference ReferenceId(27): Some("x")
current  reference ReferenceId(27): None
reference Mismatch:
previous reference ReferenceId(28): Some("y")
current  reference ReferenceId(28): None
reference Mismatch:
previous reference ReferenceId(29): Some("z")
current  reference ReferenceId(29): None
reference Mismatch:
previous reference ReferenceId(30): Some("x")
current  reference ReferenceId(30): None
reference Mismatch:
previous reference ReferenceId(31): Some("y")
current  reference ReferenceId(31): None
reference Mismatch:
previous reference ReferenceId(32): Some("z")
current  reference ReferenceId(32): None
reference Mismatch:
previous reference ReferenceId(33): Some("x")
current  reference ReferenceId(33): None
reference Mismatch:
previous reference ReferenceId(34): Some("y")
current  reference ReferenceId(34): None
reference Mismatch:
previous reference ReferenceId(35): Some("z")
current  reference ReferenceId(35): None
reference Mismatch:
previous reference ReferenceId(36): Some("x")
current  reference ReferenceId(36): None
reference Mismatch:
previous reference ReferenceId(37): Some("y")
current  reference ReferenceId(37): None
reference Mismatch:
previous reference ReferenceId(38): Some("z")
current  reference ReferenceId(38): None
reference Mismatch:
previous reference ReferenceId(39): Some("x")
current  reference ReferenceId(39): None
reference Mismatch:
previous reference ReferenceId(40): Some("y")
current  reference ReferenceId(40): None
reference Mismatch:
previous reference ReferenceId(41): Some("z")
current  reference ReferenceId(41): None
reference Mismatch:
previous reference ReferenceId(42): Some("x")
current  reference ReferenceId(42): None
reference Mismatch:
previous reference ReferenceId(43): Some("y")
current  reference ReferenceId(43): None
reference Mismatch:
previous reference ReferenceId(44): Some("z")
current  reference ReferenceId(44): None
reference Mismatch:
previous reference ReferenceId(45): Some("x")
current  reference ReferenceId(45): None
reference Mismatch:
previous reference ReferenceId(46): Some("a")
current  reference ReferenceId(46): None
reference Mismatch:
previous reference ReferenceId(47): Some("y")
current  reference ReferenceId(47): None
reference Mismatch:
previous reference ReferenceId(48): Some("z")
current  reference ReferenceId(48): None
reference Mismatch:
previous reference ReferenceId(49): Some("x")
current  reference ReferenceId(49): None
reference Mismatch:
previous reference ReferenceId(50): Some("a")
current  reference ReferenceId(50): None
reference Mismatch:
previous reference ReferenceId(51): Some("y")
current  reference ReferenceId(51): None
reference Mismatch:
previous reference ReferenceId(52): Some("z")
current  reference ReferenceId(52): None
reference Mismatch:
previous reference ReferenceId(53): Some("x")
current  reference ReferenceId(53): None
reference Mismatch:
previous reference ReferenceId(54): Some("a")
current  reference ReferenceId(54): None
reference Mismatch:
previous reference ReferenceId(55): Some("y")
current  reference ReferenceId(55): None
reference Mismatch:
previous reference ReferenceId(56): Some("z")
current  reference ReferenceId(56): None
reference Mismatch:
previous reference ReferenceId(57): Some("x")
current  reference ReferenceId(57): None
reference Mismatch:
previous reference ReferenceId(58): Some("a")
current  reference ReferenceId(58): None
reference Mismatch:
previous reference ReferenceId(59): Some("y")
current  reference ReferenceId(59): None
reference Mismatch:
previous reference ReferenceId(60): Some("z")
current  reference ReferenceId(60): None
reference Mismatch:
previous reference ReferenceId(61): Some("x")
current  reference ReferenceId(61): None
reference Mismatch:
previous reference ReferenceId(62): Some("a")
current  reference ReferenceId(62): None
reference Mismatch:
previous reference ReferenceId(63): Some("y")
current  reference ReferenceId(63): None
reference Mismatch:
previous reference ReferenceId(64): Some("z")
current  reference ReferenceId(64): None
reference Mismatch:
previous reference ReferenceId(65): Some("x")
current  reference ReferenceId(65): None
reference Mismatch:
previous reference ReferenceId(66): Some("a")
current  reference ReferenceId(66): None
reference Mismatch:
previous reference ReferenceId(67): Some("y")
current  reference ReferenceId(67): None
reference Mismatch:
previous reference ReferenceId(68): Some("z")
current  reference ReferenceId(68): None

tasks/coverage/typescript/tests/cases/compiler/es5-asyncFunctionConditionals.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["a", "b", "c", "conditional0", "conditional1", "conditional2", "x", "y", "z"]
current  scope ScopeId(0): ["conditional0", "conditional1", "conditional2"]
reference Mismatch:
previous reference ReferenceId(0): Some("a")
current  reference ReferenceId(0): None
reference Mismatch:
previous reference ReferenceId(1): Some("x")
current  reference ReferenceId(1): None
reference Mismatch:
previous reference ReferenceId(2): Some("y")
current  reference ReferenceId(2): None
reference Mismatch:
previous reference ReferenceId(3): Some("z")
current  reference ReferenceId(3): None
reference Mismatch:
previous reference ReferenceId(4): Some("a")
current  reference ReferenceId(4): None
reference Mismatch:
previous reference ReferenceId(5): Some("x")
current  reference ReferenceId(5): None
reference Mismatch:
previous reference ReferenceId(6): Some("y")
current  reference ReferenceId(6): None
reference Mismatch:
previous reference ReferenceId(7): Some("z")
current  reference ReferenceId(7): None
reference Mismatch:
previous reference ReferenceId(8): Some("a")
current  reference ReferenceId(8): None
reference Mismatch:
previous reference ReferenceId(9): Some("x")
current  reference ReferenceId(9): None
reference Mismatch:
previous reference ReferenceId(10): Some("y")
current  reference ReferenceId(10): None
reference Mismatch:
previous reference ReferenceId(11): Some("z")
current  reference ReferenceId(11): None

tasks/coverage/typescript/tests/cases/compiler/es5-asyncFunctionDoStatements.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["a", "b", "c", "doStatement0", "doStatement1", "doStatement10", "doStatement11", "doStatement12", "doStatement13", "doStatement14", "doStatement15", "doStatement16", "doStatement17", "doStatement18", "doStatement2", "doStatement3", "doStatement4", "doStatement5", "doStatement6", "doStatement7", "doStatement8", "doStatement9", "x", "y", "z"]
current  scope ScopeId(0): ["doStatement0", "doStatement1", "doStatement10", "doStatement11", "doStatement12", "doStatement13", "doStatement14", "doStatement15", "doStatement16", "doStatement17", "doStatement18", "doStatement2", "doStatement3", "doStatement4", "doStatement5", "doStatement6", "doStatement7", "doStatement8", "doStatement9"]
reference Mismatch:
previous reference ReferenceId(0): Some("x")
current  reference ReferenceId(0): None
reference Mismatch:
previous reference ReferenceId(1): Some("y")
current  reference ReferenceId(1): None
reference Mismatch:
previous reference ReferenceId(2): Some("x")
current  reference ReferenceId(2): None
reference Mismatch:
previous reference ReferenceId(3): Some("y")
current  reference ReferenceId(3): None
reference Mismatch:
previous reference ReferenceId(4): Some("x")
current  reference ReferenceId(4): None
reference Mismatch:
previous reference ReferenceId(5): Some("y")
current  reference ReferenceId(5): None
reference Mismatch:
previous reference ReferenceId(6): Some("y")
current  reference ReferenceId(6): None
reference Mismatch:
previous reference ReferenceId(7): Some("x")
current  reference ReferenceId(7): None
reference Mismatch:
previous reference ReferenceId(8): Some("y")
current  reference ReferenceId(8): None
reference Mismatch:
previous reference ReferenceId(9): Some("x")
current  reference ReferenceId(9): None
reference Mismatch:
previous reference ReferenceId(10): Some("y")
current  reference ReferenceId(10): None
reference Mismatch:
previous reference ReferenceId(11): Some("y")
current  reference ReferenceId(11): None
reference Mismatch:
previous reference ReferenceId(12): Some("y")
current  reference ReferenceId(12): None
reference Mismatch:
previous reference ReferenceId(13): Some("x")
current  reference ReferenceId(13): None
reference Mismatch:
previous reference ReferenceId(14): Some("y")
current  reference ReferenceId(14): None
reference Mismatch:
previous reference ReferenceId(15): Some("x")
current  reference ReferenceId(15): None
reference Mismatch:
previous reference ReferenceId(16): Some("y")
current  reference ReferenceId(16): None
reference Mismatch:
previous reference ReferenceId(17): Some("y")
current  reference ReferenceId(17): None
reference Mismatch:
previous reference ReferenceId(18): Some("y")
current  reference ReferenceId(18): None
reference Mismatch:
previous reference ReferenceId(19): Some("x")
current  reference ReferenceId(19): None
reference Mismatch:
previous reference ReferenceId(20): Some("y")
current  reference ReferenceId(20): None
reference Mismatch:
previous reference ReferenceId(21): Some("x")
current  reference ReferenceId(21): None
reference Mismatch:
previous reference ReferenceId(22): Some("y")
current  reference ReferenceId(22): None
reference Mismatch:
previous reference ReferenceId(23): Some("y")
current  reference ReferenceId(23): None
reference Mismatch:
previous reference ReferenceId(24): Some("y")
current  reference ReferenceId(24): None
reference Mismatch:
previous reference ReferenceId(25): Some("x")
current  reference ReferenceId(25): None
reference Mismatch:
previous reference ReferenceId(26): Some("y")
current  reference ReferenceId(26): None
reference Mismatch:
previous reference ReferenceId(27): Some("x")
current  reference ReferenceId(27): None
reference Mismatch:
previous reference ReferenceId(28): Some("y")
current  reference ReferenceId(28): None
reference Mismatch:
previous reference ReferenceId(29): Some("y")
current  reference ReferenceId(29): None

tasks/coverage/typescript/tests/cases/compiler/es5-asyncFunctionElementAccess.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["a", "b", "c", "elementAccess0", "elementAccess1", "elementAccess2", "x", "y", "z"]
current  scope ScopeId(0): ["elementAccess0", "elementAccess1", "elementAccess2"]
reference Mismatch:
previous reference ReferenceId(0): Some("z")
current  reference ReferenceId(0): None
reference Mismatch:
previous reference ReferenceId(1): Some("x")
current  reference ReferenceId(1): None
reference Mismatch:
previous reference ReferenceId(2): Some("y")
current  reference ReferenceId(2): None
reference Mismatch:
previous reference ReferenceId(3): Some("z")
current  reference ReferenceId(3): None
reference Mismatch:
previous reference ReferenceId(4): Some("x")
current  reference ReferenceId(4): None
reference Mismatch:
previous reference ReferenceId(5): Some("y")
current  reference ReferenceId(5): None
reference Mismatch:
previous reference ReferenceId(6): Some("z")
current  reference ReferenceId(6): None
reference Mismatch:
previous reference ReferenceId(7): Some("x")
current  reference ReferenceId(7): None
reference Mismatch:
previous reference ReferenceId(8): Some("y")
current  reference ReferenceId(8): None

tasks/coverage/typescript/tests/cases/compiler/es5-asyncFunctionForInStatements.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["a", "b", "c", "forInStatement0", "forInStatement1", "forInStatement2", "forInStatement3", "forInStatement4", "forInStatement5", "forInStatement6", "forInStatement7", "forInStatement8", "x", "y", "z"]
current  scope ScopeId(0): ["forInStatement0", "forInStatement1", "forInStatement2", "forInStatement3", "forInStatement4", "forInStatement5", "forInStatement6", "forInStatement7", "forInStatement8"]
reference Mismatch:
previous reference ReferenceId(0): Some("x")
current  reference ReferenceId(0): None
reference Mismatch:
previous reference ReferenceId(1): Some("y")
current  reference ReferenceId(1): None
reference Mismatch:
previous reference ReferenceId(2): Some("z")
current  reference ReferenceId(2): None
reference Mismatch:
previous reference ReferenceId(3): Some("x")
current  reference ReferenceId(3): None
reference Mismatch:
previous reference ReferenceId(4): Some("y")
current  reference ReferenceId(4): None
reference Mismatch:
previous reference ReferenceId(5): Some("z")
current  reference ReferenceId(5): None
reference Mismatch:
previous reference ReferenceId(6): Some("x")
current  reference ReferenceId(6): None
reference Mismatch:
previous reference ReferenceId(7): Some("y")
current  reference ReferenceId(7): None
reference Mismatch:
previous reference ReferenceId(8): Some("z")
current  reference ReferenceId(8): None
reference Mismatch:
previous reference ReferenceId(9): Some("x")
current  reference ReferenceId(9): None
reference Mismatch:
previous reference ReferenceId(10): Some("y")
current  reference ReferenceId(10): None
reference Mismatch:
previous reference ReferenceId(11): Some("z")
current  reference ReferenceId(11): None
reference Mismatch:
previous reference ReferenceId(12): Some("x")
current  reference ReferenceId(12): None
reference Mismatch:
previous reference ReferenceId(13): Some("y")
current  reference ReferenceId(13): None
reference Mismatch:
previous reference ReferenceId(14): Some("z")
current  reference ReferenceId(14): None
reference Mismatch:
previous reference ReferenceId(15): Some("x")
current  reference ReferenceId(15): None
reference Mismatch:
previous reference ReferenceId(16): Some("y")
current  reference ReferenceId(16): None
reference Mismatch:
previous reference ReferenceId(17): Some("z")
current  reference ReferenceId(17): None
reference Mismatch:
previous reference ReferenceId(18): Some("y")
current  reference ReferenceId(18): None
reference Mismatch:
previous reference ReferenceId(19): Some("z")
current  reference ReferenceId(19): None
reference Mismatch:
previous reference ReferenceId(20): Some("y")
current  reference ReferenceId(20): None
reference Mismatch:
previous reference ReferenceId(21): Some("z")
current  reference ReferenceId(21): None
reference Mismatch:
previous reference ReferenceId(22): Some("y")
current  reference ReferenceId(22): None
reference Mismatch:
previous reference ReferenceId(23): Some("z")
current  reference ReferenceId(23): None

tasks/coverage/typescript/tests/cases/compiler/es5-asyncFunctionForOfStatements.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["a", "b", "c", "forOfStatement0", "forOfStatement1", "forOfStatement10", "forOfStatement11", "forOfStatement12", "forOfStatement13", "forOfStatement14", "forOfStatement15", "forOfStatement16", "forOfStatement17", "forOfStatement18", "forOfStatement2", "forOfStatement3", "forOfStatement4", "forOfStatement5", "forOfStatement6", "forOfStatement7", "forOfStatement8", "forOfStatement9", "x", "y", "z"]
current  scope ScopeId(0): ["forOfStatement0", "forOfStatement1", "forOfStatement10", "forOfStatement11", "forOfStatement12", "forOfStatement13", "forOfStatement14", "forOfStatement15", "forOfStatement16", "forOfStatement17", "forOfStatement18", "forOfStatement2", "forOfStatement3", "forOfStatement4", "forOfStatement5", "forOfStatement6", "forOfStatement7", "forOfStatement8", "forOfStatement9"]
reference Mismatch:
previous reference ReferenceId(0): Some("x")
current  reference ReferenceId(0): None
reference Mismatch:
previous reference ReferenceId(1): Some("y")
current  reference ReferenceId(1): None
reference Mismatch:
previous reference ReferenceId(2): Some("z")
current  reference ReferenceId(2): None
reference Mismatch:
previous reference ReferenceId(3): Some("x")
current  reference ReferenceId(3): None
reference Mismatch:
previous reference ReferenceId(4): Some("y")
current  reference ReferenceId(4): None
reference Mismatch:
previous reference ReferenceId(5): Some("z")
current  reference ReferenceId(5): None
reference Mismatch:
previous reference ReferenceId(6): Some("x")
current  reference ReferenceId(6): None
reference Mismatch:
previous reference ReferenceId(7): Some("y")
current  reference ReferenceId(7): None
reference Mismatch:
previous reference ReferenceId(8): Some("z")
current  reference ReferenceId(8): None
reference Mismatch:
previous reference ReferenceId(9): Some("x")
current  reference ReferenceId(9): None
reference Mismatch:
previous reference ReferenceId(10): Some("y")
current  reference ReferenceId(10): None
reference Mismatch:
previous reference ReferenceId(11): Some("z")
current  reference ReferenceId(11): None
reference Mismatch:
previous reference ReferenceId(12): Some("x")
current  reference ReferenceId(12): None
reference Mismatch:
previous reference ReferenceId(13): Some("y")
current  reference ReferenceId(13): None
reference Mismatch:
previous reference ReferenceId(14): Some("z")
current  reference ReferenceId(14): None
reference Mismatch:
previous reference ReferenceId(15): Some("x")
current  reference ReferenceId(15): None
reference Mismatch:
previous reference ReferenceId(16): Some("y")
current  reference ReferenceId(16): None
reference Mismatch:
previous reference ReferenceId(17): Some("z")
current  reference ReferenceId(17): None
reference Mismatch:
previous reference ReferenceId(18): Some("y")
current  reference ReferenceId(18): None
reference Mismatch:
previous reference ReferenceId(19): Some("z")
current  reference ReferenceId(19): None
reference Mismatch:
previous reference ReferenceId(20): Some("y")
current  reference ReferenceId(20): None
reference Mismatch:
previous reference ReferenceId(21): Some("z")
current  reference ReferenceId(21): None
reference Mismatch:
previous reference ReferenceId(22): Some("y")
current  reference ReferenceId(22): None
reference Mismatch:
previous reference ReferenceId(23): Some("z")
current  reference ReferenceId(23): None
reference Mismatch:
previous reference ReferenceId(24): Some("x")
current  reference ReferenceId(24): None
reference Mismatch:
previous reference ReferenceId(25): Some("y")
current  reference ReferenceId(25): None
reference Mismatch:
previous reference ReferenceId(26): Some("z")
current  reference ReferenceId(26): None
reference Mismatch:
previous reference ReferenceId(27): Some("x")
current  reference ReferenceId(27): None
reference Mismatch:
previous reference ReferenceId(28): Some("y")
current  reference ReferenceId(28): None
reference Mismatch:
previous reference ReferenceId(29): Some("z")
current  reference ReferenceId(29): None
reference Mismatch:
previous reference ReferenceId(30): Some("x")
current  reference ReferenceId(30): None
reference Mismatch:
previous reference ReferenceId(31): Some("a")
current  reference ReferenceId(31): None
reference Mismatch:
previous reference ReferenceId(32): Some("y")
current  reference ReferenceId(32): None
reference Mismatch:
previous reference ReferenceId(33): Some("z")
current  reference ReferenceId(33): None
reference Mismatch:
previous reference ReferenceId(34): Some("x")
current  reference ReferenceId(34): None
reference Mismatch:
previous reference ReferenceId(35): Some("a")
current  reference ReferenceId(35): None
reference Mismatch:
previous reference ReferenceId(36): Some("y")
current  reference ReferenceId(36): None
reference Mismatch:
previous reference ReferenceId(37): Some("z")
current  reference ReferenceId(37): None
reference Mismatch:
previous reference ReferenceId(38): Some("x")
current  reference ReferenceId(38): None
reference Mismatch:
previous reference ReferenceId(39): Some("a")
current  reference ReferenceId(39): None
reference Mismatch:
previous reference ReferenceId(40): Some("y")
current  reference ReferenceId(40): None
reference Mismatch:
previous reference ReferenceId(41): Some("z")
current  reference ReferenceId(41): None
reference Mismatch:
previous reference ReferenceId(42): Some("x")
current  reference ReferenceId(42): None
reference Mismatch:
previous reference ReferenceId(43): Some("y")
current  reference ReferenceId(43): None
reference Mismatch:
previous reference ReferenceId(44): Some("z")
current  reference ReferenceId(44): None
reference Mismatch:
previous reference ReferenceId(45): Some("x")
current  reference ReferenceId(45): None
reference Mismatch:
previous reference ReferenceId(46): Some("y")
current  reference ReferenceId(46): None
reference Mismatch:
previous reference ReferenceId(47): Some("z")
current  reference ReferenceId(47): None
reference Mismatch:
previous reference ReferenceId(48): Some("x")
current  reference ReferenceId(48): None
reference Mismatch:
previous reference ReferenceId(49): Some("a")
current  reference ReferenceId(49): None
reference Mismatch:
previous reference ReferenceId(50): Some("y")
current  reference ReferenceId(50): None
reference Mismatch:
previous reference ReferenceId(51): Some("z")
current  reference ReferenceId(51): None
reference Mismatch:
previous reference ReferenceId(52): Some("x")
current  reference ReferenceId(52): None
reference Mismatch:
previous reference ReferenceId(53): Some("a")
current  reference ReferenceId(53): None
reference Mismatch:
previous reference ReferenceId(54): Some("y")
current  reference ReferenceId(54): None
reference Mismatch:
previous reference ReferenceId(55): Some("z")
current  reference ReferenceId(55): None
reference Mismatch:
previous reference ReferenceId(56): Some("x")
current  reference ReferenceId(56): None
reference Mismatch:
previous reference ReferenceId(57): Some("a")
current  reference ReferenceId(57): None
reference Mismatch:
previous reference ReferenceId(58): Some("y")
current  reference ReferenceId(58): None
reference Mismatch:
previous reference ReferenceId(59): Some("z")
current  reference ReferenceId(59): None

tasks/coverage/typescript/tests/cases/compiler/es5-asyncFunctionForStatements.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["a", "b", "c", "forStatement0", "forStatement1", "forStatement2", "forStatement3", "forStatement4", "forStatement5", "forStatement6", "x", "y", "z"]
current  scope ScopeId(0): ["forStatement0", "forStatement1", "forStatement2", "forStatement3", "forStatement4", "forStatement5", "forStatement6"]
reference Mismatch:
previous reference ReferenceId(0): Some("x")
current  reference ReferenceId(0): None
reference Mismatch:
previous reference ReferenceId(1): Some("y")
current  reference ReferenceId(1): None
reference Mismatch:
previous reference ReferenceId(2): Some("z")
current  reference ReferenceId(2): None
reference Mismatch:
previous reference ReferenceId(3): Some("a")
current  reference ReferenceId(3): None
reference Mismatch:
previous reference ReferenceId(4): Some("x")
current  reference ReferenceId(4): None
reference Mismatch:
previous reference ReferenceId(5): Some("y")
current  reference ReferenceId(5): None
reference Mismatch:
previous reference ReferenceId(6): Some("z")
current  reference ReferenceId(6): None
reference Mismatch:
previous reference ReferenceId(7): Some("a")
current  reference ReferenceId(7): None
reference Mismatch:
previous reference ReferenceId(8): Some("x")
current  reference ReferenceId(8): None
reference Mismatch:
previous reference ReferenceId(9): Some("y")
current  reference ReferenceId(9): None
reference Mismatch:
previous reference ReferenceId(10): Some("z")
current  reference ReferenceId(10): None
reference Mismatch:
previous reference ReferenceId(11): Some("a")
current  reference ReferenceId(11): None
reference Mismatch:
previous reference ReferenceId(12): Some("x")
current  reference ReferenceId(12): None
reference Mismatch:
previous reference ReferenceId(13): Some("y")
current  reference ReferenceId(13): None
reference Mismatch:
previous reference ReferenceId(14): Some("z")
current  reference ReferenceId(14): None
reference Mismatch:
previous reference ReferenceId(15): Some("a")
current  reference ReferenceId(15): None
reference Mismatch:
previous reference ReferenceId(16): Some("x")
current  reference ReferenceId(16): None
reference Mismatch:
previous reference ReferenceId(17): Some("y")
current  reference ReferenceId(17): None
reference Mismatch:
previous reference ReferenceId(18): Some("z")
current  reference ReferenceId(18): None
reference Mismatch:
previous reference ReferenceId(19): Some("a")
current  reference ReferenceId(19): None
reference Mismatch:
previous reference ReferenceId(20): Some("y")
current  reference ReferenceId(20): None
reference Mismatch:
previous reference ReferenceId(21): Some("z")
current  reference ReferenceId(21): None
reference Mismatch:
previous reference ReferenceId(22): Some("a")
current  reference ReferenceId(22): None
reference Mismatch:
previous reference ReferenceId(23): Some("x")
current  reference ReferenceId(23): None
reference Mismatch:
previous reference ReferenceId(24): Some("y")
current  reference ReferenceId(24): None
reference Mismatch:
previous reference ReferenceId(25): Some("z")
current  reference ReferenceId(25): None
reference Mismatch:
previous reference ReferenceId(26): Some("a")
current  reference ReferenceId(26): None

tasks/coverage/typescript/tests/cases/compiler/es5-asyncFunctionHoisting.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["hoisting", "hoistingWithAwait", "y"]
current  scope ScopeId(0): ["hoisting", "hoistingWithAwait"]
reference Mismatch:
previous reference ReferenceId(0): Some("y")
current  reference ReferenceId(0): None
reference Mismatch:
previous reference ReferenceId(1): Some("y")
current  reference ReferenceId(1): None
reference Mismatch:
previous reference ReferenceId(2): Some("y")
current  reference ReferenceId(2): None
reference Mismatch:
previous reference ReferenceId(3): Some("y")
current  reference ReferenceId(3): None
reference Mismatch:
previous reference ReferenceId(4): Some("y")
current  reference ReferenceId(4): None
reference Mismatch:
previous reference ReferenceId(5): Some("y")
current  reference ReferenceId(5): None

tasks/coverage/typescript/tests/cases/compiler/es5-asyncFunctionIfStatements.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["a", "b", "c", "ifStatement1", "ifStatement2", "ifStatement3", "x", "y", "z"]
current  scope ScopeId(0): ["ifStatement1", "ifStatement2", "ifStatement3"]
reference Mismatch:
previous reference ReferenceId(0): Some("x")
current  reference ReferenceId(0): None
reference Mismatch:
previous reference ReferenceId(1): Some("y")
current  reference ReferenceId(1): None
reference Mismatch:
previous reference ReferenceId(2): Some("z")
current  reference ReferenceId(2): None
reference Mismatch:
previous reference ReferenceId(3): Some("x")
current  reference ReferenceId(3): None
reference Mismatch:
previous reference ReferenceId(4): Some("y")
current  reference ReferenceId(4): None
reference Mismatch:
previous reference ReferenceId(5): Some("z")
current  reference ReferenceId(5): None
reference Mismatch:
previous reference ReferenceId(6): Some("x")
current  reference ReferenceId(6): None
reference Mismatch:
previous reference ReferenceId(7): Some("y")
current  reference ReferenceId(7): None
reference Mismatch:
previous reference ReferenceId(8): Some("z")
current  reference ReferenceId(8): None

tasks/coverage/typescript/tests/cases/compiler/es5-asyncFunctionNestedLoops.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["a", "b", "c", "nestedLoops", "x", "y", "z"]
current  scope ScopeId(0): ["nestedLoops"]
reference Mismatch:
previous reference ReferenceId(0): Some("x")
current  reference ReferenceId(0): None
reference Mismatch:
previous reference ReferenceId(1): Some("y")
current  reference ReferenceId(1): None
reference Mismatch:
previous reference ReferenceId(2): Some("z")
current  reference ReferenceId(2): None
reference Mismatch:
previous reference ReferenceId(3): Some("a")
current  reference ReferenceId(3): None

tasks/coverage/typescript/tests/cases/compiler/es5-asyncFunctionNewExpressions.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["a", "b", "c", "newExpression0", "newExpression1", "newExpression10", "newExpression11", "newExpression12", "newExpression13", "newExpression14", "newExpression15", "newExpression16", "newExpression17", "newExpression18", "newExpression19", "newExpression2", "newExpression20", "newExpression3", "newExpression4", "newExpression5", "newExpression6", "newExpression7", "newExpression8", "newExpression9", "x", "y", "z"]
current  scope ScopeId(0): ["newExpression0", "newExpression1", "newExpression10", "newExpression11", "newExpression12", "newExpression13", "newExpression14", "newExpression15", "newExpression16", "newExpression17", "newExpression18", "newExpression19", "newExpression2", "newExpression20", "newExpression3", "newExpression4", "newExpression5", "newExpression6", "newExpression7", "newExpression8", "newExpression9"]
reference Mismatch:
previous reference ReferenceId(0): Some("x")
current  reference ReferenceId(0): None
reference Mismatch:
previous reference ReferenceId(1): Some("y")
current  reference ReferenceId(1): None
reference Mismatch:
previous reference ReferenceId(2): Some("z")
current  reference ReferenceId(2): None
reference Mismatch:
previous reference ReferenceId(3): Some("x")
current  reference ReferenceId(3): None
reference Mismatch:
previous reference ReferenceId(4): Some("y")
current  reference ReferenceId(4): None
reference Mismatch:
previous reference ReferenceId(5): Some("z")
current  reference ReferenceId(5): None
reference Mismatch:
previous reference ReferenceId(6): Some("x")
current  reference ReferenceId(6): None
reference Mismatch:
previous reference ReferenceId(7): Some("y")
current  reference ReferenceId(7): None
reference Mismatch:
previous reference ReferenceId(8): Some("z")
current  reference ReferenceId(8): None
reference Mismatch:
previous reference ReferenceId(9): Some("x")
current  reference ReferenceId(9): None
reference Mismatch:
previous reference ReferenceId(10): Some("y")
current  reference ReferenceId(10): None
reference Mismatch:
previous reference ReferenceId(11): Some("z")
current  reference ReferenceId(11): None
reference Mismatch:
previous reference ReferenceId(12): Some("x")
current  reference ReferenceId(12): None
reference Mismatch:
previous reference ReferenceId(13): Some("y")
current  reference ReferenceId(13): None
reference Mismatch:
previous reference ReferenceId(14): Some("z")
current  reference ReferenceId(14): None
reference Mismatch:
previous reference ReferenceId(15): Some("x")
current  reference ReferenceId(15): None
reference Mismatch:
previous reference ReferenceId(16): Some("y")
current  reference ReferenceId(16): None
reference Mismatch:
previous reference ReferenceId(17): Some("z")
current  reference ReferenceId(17): None
reference Mismatch:
previous reference ReferenceId(18): Some("x")
current  reference ReferenceId(18): None
reference Mismatch:
previous reference ReferenceId(19): Some("y")
current  reference ReferenceId(19): None
reference Mismatch:
previous reference ReferenceId(20): Some("z")
current  reference ReferenceId(20): None
reference Mismatch:
previous reference ReferenceId(21): Some("x")
current  reference ReferenceId(21): None
reference Mismatch:
previous reference ReferenceId(22): Some("y")
current  reference ReferenceId(22): None
reference Mismatch:
previous reference ReferenceId(23): Some("z")
current  reference ReferenceId(23): None
reference Mismatch:
previous reference ReferenceId(24): Some("x")
current  reference ReferenceId(24): None
reference Mismatch:
previous reference ReferenceId(25): Some("y")
current  reference ReferenceId(25): None
reference Mismatch:
previous reference ReferenceId(26): Some("z")
current  reference ReferenceId(26): None
reference Mismatch:
previous reference ReferenceId(27): Some("x")
current  reference ReferenceId(27): None
reference Mismatch:
previous reference ReferenceId(28): Some("y")
current  reference ReferenceId(28): None
reference Mismatch:
previous reference ReferenceId(29): Some("z")
current  reference ReferenceId(29): None
reference Mismatch:
previous reference ReferenceId(30): Some("x")
current  reference ReferenceId(30): None
reference Mismatch:
previous reference ReferenceId(31): Some("y")
current  reference ReferenceId(31): None
reference Mismatch:
previous reference ReferenceId(32): Some("z")
current  reference ReferenceId(32): None
reference Mismatch:
previous reference ReferenceId(33): Some("x")
current  reference ReferenceId(33): None
reference Mismatch:
previous reference ReferenceId(34): Some("y")
current  reference ReferenceId(34): None
reference Mismatch:
previous reference ReferenceId(35): Some("z")
current  reference ReferenceId(35): None
reference Mismatch:
previous reference ReferenceId(36): Some("x")
current  reference ReferenceId(36): None
reference Mismatch:
previous reference ReferenceId(37): Some("y")
current  reference ReferenceId(37): None
reference Mismatch:
previous reference ReferenceId(38): Some("z")
current  reference ReferenceId(38): None
reference Mismatch:
previous reference ReferenceId(39): Some("x")
current  reference ReferenceId(39): None
reference Mismatch:
previous reference ReferenceId(40): Some("y")
current  reference ReferenceId(40): None
reference Mismatch:
previous reference ReferenceId(41): Some("z")
current  reference ReferenceId(41): None
reference Mismatch:
previous reference ReferenceId(42): Some("x")
current  reference ReferenceId(42): None
reference Mismatch:
previous reference ReferenceId(43): Some("y")
current  reference ReferenceId(43): None
reference Mismatch:
previous reference ReferenceId(44): Some("z")
current  reference ReferenceId(44): None
reference Mismatch:
previous reference ReferenceId(45): Some("x")
current  reference ReferenceId(45): None
reference Mismatch:
previous reference ReferenceId(46): Some("a")
current  reference ReferenceId(46): None
reference Mismatch:
previous reference ReferenceId(47): Some("y")
current  reference ReferenceId(47): None
reference Mismatch:
previous reference ReferenceId(48): Some("z")
current  reference ReferenceId(48): None
reference Mismatch:
previous reference ReferenceId(49): Some("x")
current  reference ReferenceId(49): None
reference Mismatch:
previous reference ReferenceId(50): Some("a")
current  reference ReferenceId(50): None
reference Mismatch:
previous reference ReferenceId(51): Some("y")
current  reference ReferenceId(51): None
reference Mismatch:
previous reference ReferenceId(52): Some("z")
current  reference ReferenceId(52): None
reference Mismatch:
previous reference ReferenceId(53): Some("x")
current  reference ReferenceId(53): None
reference Mismatch:
previous reference ReferenceId(54): Some("a")
current  reference ReferenceId(54): None
reference Mismatch:
previous reference ReferenceId(55): Some("y")
current  reference ReferenceId(55): None
reference Mismatch:
previous reference ReferenceId(56): Some("z")
current  reference ReferenceId(56): None
reference Mismatch:
previous reference ReferenceId(57): Some("x")
current  reference ReferenceId(57): None
reference Mismatch:
previous reference ReferenceId(58): Some("a")
current  reference ReferenceId(58): None
reference Mismatch:
previous reference ReferenceId(59): Some("y")
current  reference ReferenceId(59): None
reference Mismatch:
previous reference ReferenceId(60): Some("z")
current  reference ReferenceId(60): None
reference Mismatch:
previous reference ReferenceId(61): Some("x")
current  reference ReferenceId(61): None
reference Mismatch:
previous reference ReferenceId(62): Some("a")
current  reference ReferenceId(62): None
reference Mismatch:
previous reference ReferenceId(63): Some("y")
current  reference ReferenceId(63): None
reference Mismatch:
previous reference ReferenceId(64): Some("z")
current  reference ReferenceId(64): None
reference Mismatch:
previous reference ReferenceId(65): Some("x")
current  reference ReferenceId(65): None
reference Mismatch:
previous reference ReferenceId(66): Some("a")
current  reference ReferenceId(66): None
reference Mismatch:
previous reference ReferenceId(67): Some("y")
current  reference ReferenceId(67): None
reference Mismatch:
previous reference ReferenceId(68): Some("z")
current  reference ReferenceId(68): None

tasks/coverage/typescript/tests/cases/compiler/es5-asyncFunctionObjectLiterals.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["a", "b", "c", "objectLiteral0", "objectLiteral1", "objectLiteral2", "objectLiteral3", "objectLiteral4", "objectLiteral5", "objectLiteral6", "x", "y", "z"]
current  scope ScopeId(0): ["objectLiteral0", "objectLiteral1", "objectLiteral2", "objectLiteral3", "objectLiteral4", "objectLiteral5", "objectLiteral6"]
reference Mismatch:
previous reference ReferenceId(0): Some("x")
current  reference ReferenceId(0): None
reference Mismatch:
previous reference ReferenceId(1): Some("y")
current  reference ReferenceId(1): None
reference Mismatch:
previous reference ReferenceId(2): Some("z")
current  reference ReferenceId(2): None
reference Mismatch:
previous reference ReferenceId(3): Some("x")
current  reference ReferenceId(3): None
reference Mismatch:
previous reference ReferenceId(4): Some("y")
current  reference ReferenceId(4): None
reference Mismatch:
previous reference ReferenceId(5): Some("z")
current  reference ReferenceId(5): None
reference Mismatch:
previous reference ReferenceId(6): Some("x")
current  reference ReferenceId(6): None
reference Mismatch:
previous reference ReferenceId(7): Some("a")
current  reference ReferenceId(7): None
reference Mismatch:
previous reference ReferenceId(8): Some("y")
current  reference ReferenceId(8): None
reference Mismatch:
previous reference ReferenceId(9): Some("z")
current  reference ReferenceId(9): None
reference Mismatch:
previous reference ReferenceId(10): Some("x")
current  reference ReferenceId(10): None
reference Mismatch:
previous reference ReferenceId(11): Some("a")
current  reference ReferenceId(11): None
reference Mismatch:
previous reference ReferenceId(12): Some("y")
current  reference ReferenceId(12): None
reference Mismatch:
previous reference ReferenceId(13): Some("z")
current  reference ReferenceId(13): None
reference Mismatch:
previous reference ReferenceId(14): Some("x")
current  reference ReferenceId(14): None
reference Mismatch:
previous reference ReferenceId(15): Some("y")
current  reference ReferenceId(15): None
reference Mismatch:
previous reference ReferenceId(16): Some("b")
current  reference ReferenceId(16): None
reference Mismatch:
previous reference ReferenceId(17): Some("z")
current  reference ReferenceId(17): None
reference Mismatch:
previous reference ReferenceId(18): Some("x")
current  reference ReferenceId(18): None
reference Mismatch:
previous reference ReferenceId(19): Some("y")
current  reference ReferenceId(19): None
reference Mismatch:
previous reference ReferenceId(20): Some("b")
current  reference ReferenceId(20): None
reference Mismatch:
previous reference ReferenceId(21): Some("z")
current  reference ReferenceId(21): None
reference Mismatch:
previous reference ReferenceId(22): Some("x")
current  reference ReferenceId(22): None
reference Mismatch:
previous reference ReferenceId(23): Some("y")
current  reference ReferenceId(23): None
reference Mismatch:
previous reference ReferenceId(24): Some("b")
current  reference ReferenceId(24): None
reference Mismatch:
previous reference ReferenceId(25): Some("z")
current  reference ReferenceId(25): None

tasks/coverage/typescript/tests/cases/compiler/es5-asyncFunctionPropertyAccess.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["a", "b", "c", "callExpression0", "propertyAccess0", "propertyAccess1", "x", "y", "z"]
current  scope ScopeId(0): ["callExpression0", "propertyAccess0", "propertyAccess1"]
reference Mismatch:
previous reference ReferenceId(0): Some("y")
current  reference ReferenceId(0): None
reference Mismatch:
previous reference ReferenceId(1): Some("x")
current  reference ReferenceId(1): None
reference Mismatch:
previous reference ReferenceId(2): Some("y")
current  reference ReferenceId(2): None
reference Mismatch:
previous reference ReferenceId(3): Some("x")
current  reference ReferenceId(3): None
reference Mismatch:
previous reference ReferenceId(4): Some("x")
current  reference ReferenceId(4): None
reference Mismatch:
previous reference ReferenceId(5): Some("y")
current  reference ReferenceId(5): None
reference Mismatch:
previous reference ReferenceId(6): Some("z")
current  reference ReferenceId(6): None

tasks/coverage/typescript/tests/cases/compiler/es5-asyncFunctionReturnStatements.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["a", "b", "c", "returnStatement0", "returnStatement1", "returnStatement2", "returnStatement3", "returnStatement4", "returnStatement5", "x", "y", "z"]
current  scope ScopeId(0): ["returnStatement0", "returnStatement1", "returnStatement2", "returnStatement3", "returnStatement4", "returnStatement5"]
reference Mismatch:
previous reference ReferenceId(2): Some("x")
current  reference ReferenceId(0): None
reference Mismatch:
previous reference ReferenceId(4): Some("x")
current  reference ReferenceId(1): None
reference Mismatch:
previous reference ReferenceId(7): Some("x")
current  reference ReferenceId(2): None
reference Mismatch:
previous reference ReferenceId(9): Some("x")
current  reference ReferenceId(3): None

tasks/coverage/typescript/tests/cases/compiler/es5-asyncFunctionSwitchStatements.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["a", "b", "c", "switchStatement0", "switchStatement1", "switchStatement2", "switchStatement3", "switchStatement4", "switchStatement5", "switchStatement6", "switchStatement7", "switchStatement8", "x", "y", "z"]
current  scope ScopeId(0): ["switchStatement0", "switchStatement1", "switchStatement2", "switchStatement3", "switchStatement4", "switchStatement5", "switchStatement6", "switchStatement7", "switchStatement8"]
reference Mismatch:
previous reference ReferenceId(0): Some("x")
current  reference ReferenceId(0): None
reference Mismatch:
previous reference ReferenceId(1): Some("y")
current  reference ReferenceId(1): None
reference Mismatch:
previous reference ReferenceId(2): Some("a")
current  reference ReferenceId(2): None
reference Mismatch:
previous reference ReferenceId(3): Some("b")
current  reference ReferenceId(3): None
reference Mismatch:
previous reference ReferenceId(4): Some("x")
current  reference ReferenceId(4): None
reference Mismatch:
previous reference ReferenceId(5): Some("y")
current  reference ReferenceId(5): None
reference Mismatch:
previous reference ReferenceId(6): Some("a")
current  reference ReferenceId(6): None
reference Mismatch:
previous reference ReferenceId(7): Some("b")
current  reference ReferenceId(7): None
reference Mismatch:
previous reference ReferenceId(8): Some("x")
current  reference ReferenceId(8): None
reference Mismatch:
previous reference ReferenceId(9): Some("y")
current  reference ReferenceId(9): None
reference Mismatch:
previous reference ReferenceId(10): Some("a")
current  reference ReferenceId(10): None
reference Mismatch:
previous reference ReferenceId(11): Some("b")
current  reference ReferenceId(11): None
reference Mismatch:
previous reference ReferenceId(12): Some("x")
current  reference ReferenceId(12): None
reference Mismatch:
previous reference ReferenceId(13): Some("y")
current  reference ReferenceId(13): None
reference Mismatch:
previous reference ReferenceId(14): Some("a")
current  reference ReferenceId(14): None
reference Mismatch:
previous reference ReferenceId(15): Some("b")
current  reference ReferenceId(15): None
reference Mismatch:
previous reference ReferenceId(16): Some("x")
current  reference ReferenceId(16): None
reference Mismatch:
previous reference ReferenceId(17): Some("y")
current  reference ReferenceId(17): None
reference Mismatch:
previous reference ReferenceId(18): Some("a")
current  reference ReferenceId(18): None
reference Mismatch:
previous reference ReferenceId(19): Some("b")
current  reference ReferenceId(19): None
reference Mismatch:
previous reference ReferenceId(20): Some("x")
current  reference ReferenceId(20): None
reference Mismatch:
previous reference ReferenceId(21): Some("y")
current  reference ReferenceId(21): None
reference Mismatch:
previous reference ReferenceId(22): Some("a")
current  reference ReferenceId(22): None
reference Mismatch:
previous reference ReferenceId(23): Some("z")
current  reference ReferenceId(23): None
reference Mismatch:
previous reference ReferenceId(24): Some("b")
current  reference ReferenceId(24): None
reference Mismatch:
previous reference ReferenceId(25): Some("x")
current  reference ReferenceId(25): None
reference Mismatch:
previous reference ReferenceId(26): Some("c")
current  reference ReferenceId(26): None
reference Mismatch:
previous reference ReferenceId(27): Some("y")
current  reference ReferenceId(27): None
reference Mismatch:
previous reference ReferenceId(28): Some("a")
current  reference ReferenceId(28): None
reference Mismatch:
previous reference ReferenceId(29): Some("z")
current  reference ReferenceId(29): None
reference Mismatch:
previous reference ReferenceId(30): Some("b")
current  reference ReferenceId(30): None
reference Mismatch:
previous reference ReferenceId(31): Some("x")
current  reference ReferenceId(31): None
reference Mismatch:
previous reference ReferenceId(32): Some("c")
current  reference ReferenceId(32): None
reference Mismatch:
previous reference ReferenceId(33): Some("y")
current  reference ReferenceId(33): None
reference Mismatch:
previous reference ReferenceId(34): Some("a")
current  reference ReferenceId(34): None
reference Mismatch:
previous reference ReferenceId(35): Some("z")
current  reference ReferenceId(35): None
reference Mismatch:
previous reference ReferenceId(36): Some("b")
current  reference ReferenceId(36): None
reference Mismatch:
previous reference ReferenceId(37): Some("x")
current  reference ReferenceId(37): None
reference Mismatch:
previous reference ReferenceId(38): Some("c")
current  reference ReferenceId(38): None
reference Mismatch:
previous reference ReferenceId(39): Some("y")
current  reference ReferenceId(39): None
reference Mismatch:
previous reference ReferenceId(40): Some("a")
current  reference ReferenceId(40): None
reference Mismatch:
previous reference ReferenceId(41): Some("z")
current  reference ReferenceId(41): None
reference Mismatch:
previous reference ReferenceId(42): Some("b")
current  reference ReferenceId(42): None

tasks/coverage/typescript/tests/cases/compiler/es5-asyncFunctionTryStatements.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["a", "b", "c", "tryCatch0", "tryCatch1", "tryCatch2", "tryCatch3", "tryCatchFinally0", "tryCatchFinally1", "tryCatchFinally2", "tryCatchFinally3", "tryFinally0", "tryFinally1", "tryFinally2", "x", "y", "z"]
current  scope ScopeId(0): ["tryCatch0", "tryCatch1", "tryCatch2", "tryCatch3", "tryCatchFinally0", "tryCatchFinally1", "tryCatchFinally2", "tryCatchFinally3", "tryFinally0", "tryFinally1", "tryFinally2"]

tasks/coverage/typescript/tests/cases/compiler/es5-asyncFunctionWhileStatements.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["a", "b", "c", "whileStatement0", "whileStatement1", "whileStatement10", "whileStatement11", "whileStatement12", "whileStatement13", "whileStatement14", "whileStatement15", "whileStatement16", "whileStatement17", "whileStatement18", "whileStatement2", "whileStatement3", "whileStatement4", "whileStatement5", "whileStatement6", "whileStatement7", "whileStatement8", "whileStatement9", "x", "y", "z"]
current  scope ScopeId(0): ["whileStatement0", "whileStatement1", "whileStatement10", "whileStatement11", "whileStatement12", "whileStatement13", "whileStatement14", "whileStatement15", "whileStatement16", "whileStatement17", "whileStatement18", "whileStatement2", "whileStatement3", "whileStatement4", "whileStatement5", "whileStatement6", "whileStatement7", "whileStatement8", "whileStatement9"]
reference Mismatch:
previous reference ReferenceId(0): Some("x")
current  reference ReferenceId(0): None
reference Mismatch:
previous reference ReferenceId(1): Some("y")
current  reference ReferenceId(1): None
reference Mismatch:
previous reference ReferenceId(2): Some("x")
current  reference ReferenceId(2): None
reference Mismatch:
previous reference ReferenceId(3): Some("y")
current  reference ReferenceId(3): None
reference Mismatch:
previous reference ReferenceId(4): Some("x")
current  reference ReferenceId(4): None
reference Mismatch:
previous reference ReferenceId(5): Some("y")
current  reference ReferenceId(5): None
reference Mismatch:
previous reference ReferenceId(6): Some("x")
current  reference ReferenceId(6): None
reference Mismatch:
previous reference ReferenceId(7): Some("x")
current  reference ReferenceId(7): None
reference Mismatch:
previous reference ReferenceId(8): Some("x")
current  reference ReferenceId(8): None
reference Mismatch:
previous reference ReferenceId(9): Some("y")
current  reference ReferenceId(9): None
reference Mismatch:
previous reference ReferenceId(10): Some("x")
current  reference ReferenceId(10): None
reference Mismatch:
previous reference ReferenceId(11): Some("y")
current  reference ReferenceId(11): None
reference Mismatch:
previous reference ReferenceId(12): Some("x")
current  reference ReferenceId(12): None
reference Mismatch:
previous reference ReferenceId(13): Some("x")
current  reference ReferenceId(13): None
reference Mismatch:
previous reference ReferenceId(14): Some("x")
current  reference ReferenceId(14): None
reference Mismatch:
previous reference ReferenceId(15): Some("y")
current  reference ReferenceId(15): None
reference Mismatch:
previous reference ReferenceId(16): Some("x")
current  reference ReferenceId(16): None
reference Mismatch:
previous reference ReferenceId(17): Some("y")
current  reference ReferenceId(17): None
reference Mismatch:
previous reference ReferenceId(18): Some("x")
current  reference ReferenceId(18): None
reference Mismatch:
previous reference ReferenceId(19): Some("x")
current  reference ReferenceId(19): None
reference Mismatch:
previous reference ReferenceId(20): Some("x")
current  reference ReferenceId(20): None
reference Mismatch:
previous reference ReferenceId(21): Some("y")
current  reference ReferenceId(21): None
reference Mismatch:
previous reference ReferenceId(22): Some("x")
current  reference ReferenceId(22): None
reference Mismatch:
previous reference ReferenceId(23): Some("y")
current  reference ReferenceId(23): None
reference Mismatch:
previous reference ReferenceId(24): Some("x")
current  reference ReferenceId(24): None
reference Mismatch:
previous reference ReferenceId(25): Some("x")
current  reference ReferenceId(25): None
reference Mismatch:
previous reference ReferenceId(26): Some("x")
current  reference ReferenceId(26): None
reference Mismatch:
previous reference ReferenceId(27): Some("y")
current  reference ReferenceId(27): None
reference Mismatch:
previous reference ReferenceId(28): Some("x")
current  reference ReferenceId(28): None
reference Mismatch:
previous reference ReferenceId(29): Some("y")
current  reference ReferenceId(29): None

tasks/coverage/typescript/tests/cases/compiler/es6ClassTest2.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["BaseClassWithConstructor", "BasicMonster", "ChildClassWithoutConstructor", "GetSetMonster", "IFoo", "ImplementsInterface", "OverloadedMonster", "PrototypeMonster", "SplatMonster", "Statics", "SuperChild", "SuperParent", "Visibility", "ccwc", "foo", "m1", "m2", "m3", "m4", "m5", "m6", "stat", "x", "y"]
current  scope ScopeId(0): ["BaseClassWithConstructor", "BasicMonster", "ChildClassWithoutConstructor", "GetSetMonster", "ImplementsInterface", "OverloadedMonster", "PrototypeMonster", "SplatMonster", "Statics", "SuperChild", "SuperParent", "Visibility", "ccwc", "foo", "m1", "m2", "m3", "m4", "m5", "m6", "stat", "x", "y"]

tasks/coverage/typescript/tests/cases/compiler/es6ClassTest3.ts
semantic error: Semantic Collector failed after transform
Missing SymbolId: M
Missing SymbolId: _M
Missing ReferenceId: M
Missing ReferenceId: M

tasks/coverage/typescript/tests/cases/compiler/es6ClassTest5.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["C1T5", "C2T5", "bigClass"]
current  scope ScopeId(0): ["C1T5", "bigClass"]

tasks/coverage/typescript/tests/cases/compiler/es6ClassTest7.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Bar", "M"]
current  scope ScopeId(0): ["Bar"]

tasks/coverage/typescript/tests/cases/compiler/es6ExportAssignment3.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["a"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/es6ExportAssignment4.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["a"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/es6ImportEqualsDeclaration2.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["a"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/es6ImportNameSpaceImportNoNamedExports.ts
semantic error: `export = <value>;` is only supported when compiling modules to CommonJS.
Please consider using `export default <value>;`, or add @babel/plugin-transform-modules-commonjs to your Babel config.

tasks/coverage/typescript/tests/cases/compiler/es6ModuleClassDeclaration.ts
semantic error: Semantic Collector failed after transform
Missing SymbolId: m1
Missing SymbolId: _m
Missing ReferenceId: _m
Missing ReferenceId: c3
Missing ReferenceId: m1
Missing ReferenceId: m1
Missing SymbolId: m2
Missing SymbolId: _m2
Missing ReferenceId: _m2
Missing ReferenceId: c3
Missing ReferenceId: m2
Missing ReferenceId: m2

tasks/coverage/typescript/tests/cases/compiler/es6ModuleConst.ts
semantic error: Semantic Collector failed after transform
Missing SymbolId: m1
Missing SymbolId: _m
Missing ReferenceId: _m
Missing ReferenceId: _m
Missing ReferenceId: _m
Missing ReferenceId: m1
Missing ReferenceId: m1
Missing SymbolId: m2
Missing SymbolId: _m2
Missing ReferenceId: _m2
Missing ReferenceId: _m2
Missing ReferenceId: _m2
Missing ReferenceId: m2
Missing ReferenceId: m2

tasks/coverage/typescript/tests/cases/compiler/es6ModuleConstEnumDeclaration.ts
semantic error: Semantic Collector failed after transform
Missing SymbolId: m1
Missing SymbolId: _m
Missing ReferenceId: _m
Missing ReferenceId: e3
Missing ReferenceId: m1
Missing ReferenceId: m1
Missing SymbolId: m2
Missing SymbolId: _m2
Missing ReferenceId: _m2
Missing ReferenceId: e5
Missing ReferenceId: m2
Missing ReferenceId: m2

tasks/coverage/typescript/tests/cases/compiler/es6ModuleConstEnumDeclaration2.ts
semantic error: Semantic Collector failed after transform
Missing SymbolId: m1
Missing SymbolId: _m
Missing ReferenceId: _m
Missing ReferenceId: e3
Missing ReferenceId: m1
Missing ReferenceId: m1
Missing SymbolId: m2
Missing SymbolId: _m2
Missing ReferenceId: _m2
Missing ReferenceId: e5
Missing ReferenceId: m2
Missing ReferenceId: m2

tasks/coverage/typescript/tests/cases/compiler/es6ModuleEnumDeclaration.ts
semantic error: Semantic Collector failed after transform
Missing SymbolId: m1
Missing SymbolId: _m
Missing ReferenceId: _m
Missing ReferenceId: e3
Missing ReferenceId: m1
Missing ReferenceId: m1
Missing SymbolId: m2
Missing SymbolId: _m2
Missing ReferenceId: _m2
Missing ReferenceId: e5
Missing ReferenceId: m2
Missing ReferenceId: m2

tasks/coverage/typescript/tests/cases/compiler/es6ModuleFunctionDeclaration.ts
semantic error: Semantic Collector failed after transform
Missing SymbolId: m1
Missing SymbolId: _m
Missing ReferenceId: _m
Missing ReferenceId: foo3
Missing ReferenceId: m1
Missing ReferenceId: m1
Missing SymbolId: m2
Missing SymbolId: _m2
Missing ReferenceId: _m2
Missing ReferenceId: foo3
Missing ReferenceId: m2
Missing ReferenceId: m2

tasks/coverage/typescript/tests/cases/compiler/es6ModuleInternalImport.ts
semantic error: Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript

tasks/coverage/typescript/tests/cases/compiler/es6ModuleLet.ts
semantic error: Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript
Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript
Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript
Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript
Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript
Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript

tasks/coverage/typescript/tests/cases/compiler/es6ModuleModuleDeclaration.ts
semantic error: Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript
Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript
Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript
Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript
Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript
Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript

tasks/coverage/typescript/tests/cases/compiler/es6ModuleVariableStatement.ts
semantic error: Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript
Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript
Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript
Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript
Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript
Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript

tasks/coverage/typescript/tests/cases/compiler/esNextWeakRefs_IterableWeakMap.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(2): ["K", "V"]
current  scope ScopeId(2): []

tasks/coverage/typescript/tests/cases/compiler/escapedIdentifiers.ts
semantic error: Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript
Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript

tasks/coverage/typescript/tests/cases/compiler/eventEmitterPatternWithRecordOfFunction.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["A", "Args", "B", "EventMap"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/evolvingArrayTypeInAssert.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(1): ["T", "_value"]
current  scope ScopeId(1): ["_value"]

tasks/coverage/typescript/tests/cases/compiler/excessPropertyCheckWithNestedArrayIntersection.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["BugRepro", "ValueAndKeyFields", "ValueOnlyFields", "repro"]
current  scope ScopeId(0): ["repro"]

tasks/coverage/typescript/tests/cases/compiler/excessPropertyCheckingIntersectionWithConditional.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Foo", "createDefaultExample"]
current  scope ScopeId(0): ["createDefaultExample"]
Bindings Mismatch:
previous scope ScopeId(3): ["K", "x"]
current  scope ScopeId(1): ["x"]

tasks/coverage/typescript/tests/cases/compiler/expandoFunctionContextualTypes.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["MyComponent", "MyComponentProps", "StatelessComponent"]
current  scope ScopeId(0): ["MyComponent"]

tasks/coverage/typescript/tests/cases/compiler/expandoFunctionExpressionsWithDynamicNames2.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Bar", "Foo", "bar", "foo", "mySymbol", "t"]
current  scope ScopeId(0): ["bar", "foo", "mySymbol", "t"]

tasks/coverage/typescript/tests/cases/compiler/exportAssignClassAndModule.ts
semantic error: `export = <value>;` is only supported when compiling modules to CommonJS.
Please consider using `export default <value>;`, or add @babel/plugin-transform-modules-commonjs to your Babel config.

tasks/coverage/typescript/tests/cases/compiler/exportAssignValueAndType.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["http", "server", "x"]
current  scope ScopeId(0): ["server", "x"]

tasks/coverage/typescript/tests/cases/compiler/exportAssignedTypeAsTypeAnnotation.ts
semantic error: `export = <value>;` is only supported when compiling modules to CommonJS.
Please consider using `export default <value>;`, or add @babel/plugin-transform-modules-commonjs to your Babel config.

tasks/coverage/typescript/tests/cases/compiler/exportAssignmentClass.ts
semantic error: `export = <value>;` is only supported when compiling modules to CommonJS.
Please consider using `export default <value>;`, or add @babel/plugin-transform-modules-commonjs to your Babel config.

tasks/coverage/typescript/tests/cases/compiler/exportAssignmentEnum.ts
semantic error: `export = <value>;` is only supported when compiling modules to CommonJS.
Please consider using `export default <value>;`, or add @babel/plugin-transform-modules-commonjs to your Babel config.

tasks/coverage/typescript/tests/cases/compiler/exportAssignmentError.ts
semantic error: Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript

tasks/coverage/typescript/tests/cases/compiler/exportAssignmentFunction.ts
semantic error: `export = <value>;` is only supported when compiling modules to CommonJS.
Please consider using `export default <value>;`, or add @babel/plugin-transform-modules-commonjs to your Babel config.

tasks/coverage/typescript/tests/cases/compiler/exportAssignmentInterface.ts
semantic error: `export = <value>;` is only supported when compiling modules to CommonJS.
Please consider using `export default <value>;`, or add @babel/plugin-transform-modules-commonjs to your Babel config.

tasks/coverage/typescript/tests/cases/compiler/exportAssignmentInternalModule.ts
semantic error: Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript
`export = <value>;` is only supported when compiling modules to CommonJS.
Please consider using `export default <value>;`, or add @babel/plugin-transform-modules-commonjs to your Babel config.

tasks/coverage/typescript/tests/cases/compiler/exportAssignmentOfGenericType1.ts
semantic error: `export = <value>;` is only supported when compiling modules to CommonJS.
Please consider using `export default <value>;`, or add @babel/plugin-transform-modules-commonjs to your Babel config.

tasks/coverage/typescript/tests/cases/compiler/exportAssignmentVariable.ts
semantic error: `export = <value>;` is only supported when compiling modules to CommonJS.
Please consider using `export default <value>;`, or add @babel/plugin-transform-modules-commonjs to your Babel config.

tasks/coverage/typescript/tests/cases/compiler/exportAssignmentWithImportStatementPrivacyError.ts
semantic error: Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript

tasks/coverage/typescript/tests/cases/compiler/exportAssignmentWithPrivacyError.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["connectexport", "connectmodule", "server"]
current  scope ScopeId(0): ["server"]

tasks/coverage/typescript/tests/cases/compiler/exportDeclarationForModuleOrEnumWithMemberOfSameName.ts
semantic error: Semantic Collector failed after transform
Missing SymbolId: A
Missing SymbolId: _A
Missing ReferenceId: _A
Missing ReferenceId: A
Missing ReferenceId: A

tasks/coverage/typescript/tests/cases/compiler/exportDeclarationsInAmbientNamespaces.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Q"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/exportDefaultForNonInstantiatedModule.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["m"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/exportDefaultImportedType.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Foo"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/exportDefaultInterface.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["A", "a"]
current  scope ScopeId(0): ["a"]

tasks/coverage/typescript/tests/cases/compiler/exportDefaultInterfaceAndFunctionOverloads.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Foo", "foo"]
current  scope ScopeId(0): ["foo"]

tasks/coverage/typescript/tests/cases/compiler/exportDefaultInterfaceAndValue.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["A", "x"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/exportDefaultProperty.ts
semantic error: Semantic Collector failed after transform
Missing SymbolId: A
Missing SymbolId: _A
Missing ReferenceId: _A
Missing ReferenceId: B
Missing SymbolId: _B
Missing ReferenceId: _B
Missing ReferenceId: B
Missing ReferenceId: B
Missing ReferenceId: _A
Missing ReferenceId: _A
Missing ReferenceId: A
Missing ReferenceId: A

tasks/coverage/typescript/tests/cases/compiler/exportDefaultVariable.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["io", "module"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/exportEqualCallable.ts
semantic error: `export = <value>;` is only supported when compiling modules to CommonJS.
Please consider using `export default <value>;`, or add @babel/plugin-transform-modules-commonjs to your Babel config.

tasks/coverage/typescript/tests/cases/compiler/exportEqualsDefaultProperty.ts
semantic error: `export = <value>;` is only supported when compiling modules to CommonJS.
Please consider using `export default <value>;`, or add @babel/plugin-transform-modules-commonjs to your Babel config.

tasks/coverage/typescript/tests/cases/compiler/exportEqualsOfModule.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["popsicle", "popsicle-proxy-agent", "~popsicle/dist/common", "~popsicle/dist/request"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/exportEqualsProperty.ts
semantic error: `export = <value>;` is only supported when compiling modules to CommonJS.
Please consider using `export default <value>;`, or add @babel/plugin-transform-modules-commonjs to your Babel config.

tasks/coverage/typescript/tests/cases/compiler/exportEqualsProperty2.ts
semantic error: `export = <value>;` is only supported when compiling modules to CommonJS.
Please consider using `export default <value>;`, or add @babel/plugin-transform-modules-commonjs to your Babel config.

tasks/coverage/typescript/tests/cases/compiler/exportImportAndClodule.ts
semantic error: Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript

tasks/coverage/typescript/tests/cases/compiler/exportImportMultipleFiles.ts
semantic error: `import lib = require(...);` is only supported when compiling modules to CommonJS.
Please consider using `import lib from '...';` alongside Typescript's --allowSyntheticDefaultImports option, or add @babel/plugin-transform-modules-commonjs to your Babel config.

tasks/coverage/typescript/tests/cases/compiler/exportImportNonInstantiatedModule.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["A", "B", "x"]
current  scope ScopeId(0): ["x"]

tasks/coverage/typescript/tests/cases/compiler/exportPrivateType.ts
semantic error: Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript
Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript
Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript
Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript

tasks/coverage/typescript/tests/cases/compiler/exportSpecifierAndExportedMemberDeclaration.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["m2"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/exportStarForValues.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Foo"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/exportStarForValues10.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Foo"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/exportStarForValues2.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Foo"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/exportStarForValues3.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Foo"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/exportStarForValues4.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Foo"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/exportStarForValues5.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Foo"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/exportStarForValues6.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Foo"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/exportStarForValues7.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Foo"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/exportStarForValues8.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Foo"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/exportStarForValues9.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Foo"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/exportStarForValuesInSystem.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Foo"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/exportTwoInterfacesWithSameName.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["I"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/exportedInterfaceInaccessibleInCallbackInModule.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["ProgressCallback"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/exportsInAmbientModules1.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["M"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/exportsInAmbientModules2.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["M"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/extBaseClass1.ts
semantic error: Semantic Collector failed after transform
Missing SymbolId: M
Missing SymbolId: _M
Missing ReferenceId: _M
Missing ReferenceId: B
Missing ReferenceId: _M
Missing ReferenceId: C
Missing ReferenceId: M
Missing ReferenceId: M
Missing SymbolId: _M2
Missing ReferenceId: _M2
Missing ReferenceId: C2
Missing ReferenceId: M
Missing ReferenceId: M
Missing SymbolId: N
Missing SymbolId: _N
Missing ReferenceId: _N
Missing ReferenceId: C3
Missing ReferenceId: N
Missing ReferenceId: N

tasks/coverage/typescript/tests/cases/compiler/extendConstructSignatureInInterface.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["C", "CStatic", "E", "e"]
current  scope ScopeId(0): ["CStatic", "E", "e"]

tasks/coverage/typescript/tests/cases/compiler/extendedInterfaceGenericType.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Alpha", "Beta", "alpha", "betaOfNumber"]
current  scope ScopeId(0): ["alpha", "betaOfNumber"]

tasks/coverage/typescript/tests/cases/compiler/extendingClassFromAliasAndUsageInIndexer.ts
semantic error: `import lib = require(...);` is only supported when compiling modules to CommonJS.
Please consider using `import lib from '...';` alongside Typescript's --allowSyntheticDefaultImports option, or add @babel/plugin-transform-modules-commonjs to your Babel config.

tasks/coverage/typescript/tests/cases/compiler/externModuleClobber.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["EM", "ec", "x"]
current  scope ScopeId(0): ["ec", "x"]

tasks/coverage/typescript/tests/cases/compiler/externalModuleAssignToVar.ts
semantic error: `export = <value>;` is only supported when compiling modules to CommonJS.
Please consider using `export default <value>;`, or add @babel/plugin-transform-modules-commonjs to your Babel config.

tasks/coverage/typescript/tests/cases/compiler/externalModuleQualification.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(1): ["A", "B", "C"]
current  scope ScopeId(1): []

tasks/coverage/typescript/tests/cases/compiler/externalModuleReferenceDoubleUnderscore1.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["__timezonecomplete/basics", "timezonecomplete"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/externalModuleReferenceOfImportDeclarationWithExportModifier.ts
semantic error: `import lib = require(...);` is only supported when compiling modules to CommonJS.
Please consider using `import lib from '...';` alongside Typescript's --allowSyntheticDefaultImports option, or add @babel/plugin-transform-modules-commonjs to your Babel config.

tasks/coverage/typescript/tests/cases/compiler/externalModuleResolution.ts
semantic error: Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript
`export = <value>;` is only supported when compiling modules to CommonJS.
Please consider using `export default <value>;`, or add @babel/plugin-transform-modules-commonjs to your Babel config.

tasks/coverage/typescript/tests/cases/compiler/externalModuleResolution2.ts
semantic error: Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript
`export = <value>;` is only supported when compiling modules to CommonJS.
Please consider using `export default <value>;`, or add @babel/plugin-transform-modules-commonjs to your Babel config.

tasks/coverage/typescript/tests/cases/compiler/externalModuleWithoutCompilerFlag1.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["M"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/fatArrowSelf.ts
semantic error: Semantic Collector failed after transform
Missing SymbolId: Events
Missing SymbolId: _Events
Missing ReferenceId: _Events
Missing ReferenceId: EventEmitter
Missing ReferenceId: Events
Missing ReferenceId: Events
Missing SymbolId: Consumer
Missing SymbolId: _Consumer
Missing ReferenceId: Consumer
Missing ReferenceId: Consumer

tasks/coverage/typescript/tests/cases/compiler/fatArrowfunctionAsType.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["T", "b", "c"]
current  scope ScopeId(0): ["c"]
Bindings Mismatch:
previous scope ScopeId(1): ["T", "x"]
current  scope ScopeId(1): ["x"]
reference Mismatch:
previous reference ReferenceId(3): Some("b")
current  reference ReferenceId(0): None

tasks/coverage/typescript/tests/cases/compiler/fillInMissingTypeArgsOnConstructCalls.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(1): ["T"]
current  scope ScopeId(1): []

tasks/coverage/typescript/tests/cases/compiler/fixCrashAliasLookupForDefauledImport.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Foo"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/fixingTypeParametersRepeatedly3.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Base", "Derived", "derived", "result", "result2"]
current  scope ScopeId(0): ["derived", "result", "result2"]

tasks/coverage/typescript/tests/cases/compiler/flowControlTypeGuardThenSwitch.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["A", "B", "Base", "Both", "Kind", "foo", "isBoth"]
current  scope ScopeId(0): ["Kind", "foo", "isBoth"]
Bindings Mismatch:
previous scope ScopeId(1): ["A", "B", "Kind"]
current  scope ScopeId(1): ["Kind"]

tasks/coverage/typescript/tests/cases/compiler/forAwaitForUnion.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(1): ["T", "source"]
current  scope ScopeId(1): ["source"]

tasks/coverage/typescript/tests/cases/compiler/forInModule.ts
semantic error: Semantic Collector failed after transform
Missing SymbolId: Foo
Missing SymbolId: _Foo
Missing ReferenceId: Foo
Missing ReferenceId: Foo

tasks/coverage/typescript/tests/cases/compiler/forInStatement3.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(1): ["T", "a", "expr"]
current  scope ScopeId(1): ["a", "expr"]

tasks/coverage/typescript/tests/cases/compiler/forLoopEndingMultilineComments.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["a", "consoleTestResultHandler"]
current  scope ScopeId(0): ["consoleTestResultHandler"]
reference Mismatch:
previous reference ReferenceId(0): Some("a")
current  reference ReferenceId(0): None
reference Mismatch:
previous reference ReferenceId(1): Some("a")
current  reference ReferenceId(1): None
reference Mismatch:
previous reference ReferenceId(2): Some("a")
current  reference ReferenceId(2): None
reference Mismatch:
previous reference ReferenceId(3): Some("a")
current  reference ReferenceId(3): None

tasks/coverage/typescript/tests/cases/compiler/forOfStringConstituents.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["A", "AB", "B", "C", "CD", "D", "x", "y"]
current  scope ScopeId(0): []
reference Mismatch:
previous reference ReferenceId(8): Some("y")
current  reference ReferenceId(0): None
reference Mismatch:
previous reference ReferenceId(9): Some("x")
current  reference ReferenceId(1): None

tasks/coverage/typescript/tests/cases/compiler/forStatementInnerComments.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["a", "x", "y"]
current  scope ScopeId(0): ["x", "y"]
reference Mismatch:
previous reference ReferenceId(0): Some("a")
current  reference ReferenceId(0): None
reference Mismatch:
previous reference ReferenceId(1): Some("a")
current  reference ReferenceId(1): None
reference Mismatch:
previous reference ReferenceId(3): Some("a")
current  reference ReferenceId(3): None
reference Mismatch:
previous reference ReferenceId(5): Some("a")
current  reference ReferenceId(5): None
reference Mismatch:
previous reference ReferenceId(6): Some("a")
current  reference ReferenceId(6): None
reference Mismatch:
previous reference ReferenceId(7): Some("a")
current  reference ReferenceId(7): None
reference Mismatch:
previous reference ReferenceId(8): Some("a")
current  reference ReferenceId(8): None

tasks/coverage/typescript/tests/cases/compiler/forwardRefInTypeDeclaration.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Cls2", "Foo2", "Foo3", "Foo6", "foo4", "obj1", "obj2", "s", "s1", "s2", "s3", "s4", "s5"]
current  scope ScopeId(0): ["Cls2", "obj2", "s1", "s2", "s3", "s4", "s5"]

tasks/coverage/typescript/tests/cases/compiler/functionCall5.ts
semantic error: Semantic Collector failed after transform
Missing SymbolId: m1
Missing SymbolId: _m
Missing ReferenceId: _m
Missing ReferenceId: c1
Missing ReferenceId: m1
Missing ReferenceId: m1

tasks/coverage/typescript/tests/cases/compiler/functionDeclarationWithResolutionOfTypeNamedArguments01.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["arguments", "f"]
current  scope ScopeId(0): ["f"]

tasks/coverage/typescript/tests/cases/compiler/functionExpressionWithResolutionOfTypeNamedArguments01.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["arguments", "x"]
current  scope ScopeId(0): ["x"]

tasks/coverage/typescript/tests/cases/compiler/functionExpressionWithResolutionOfTypeOfSameName01.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["f", "x"]
current  scope ScopeId(0): ["x"]

tasks/coverage/typescript/tests/cases/compiler/functionExpressionWithResolutionOfTypeOfSameName02.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Foo", "x"]
current  scope ScopeId(0): ["x"]

tasks/coverage/typescript/tests/cases/compiler/functionInIfStatementInModule.ts
semantic error: Semantic Collector failed after transform
Missing SymbolId: Midori
Missing SymbolId: _Midori
Missing ReferenceId: Midori
Missing ReferenceId: Midori

tasks/coverage/typescript/tests/cases/compiler/functionMergedWithModule.ts
semantic error: Semantic Collector failed after transform
Missing SymbolId: _foo
Missing SymbolId: Bar
Missing SymbolId: _Bar
Missing ReferenceId: _Bar
Missing ReferenceId: f
Missing ReferenceId: Bar
Missing ReferenceId: Bar
Missing ReferenceId: _foo
Missing ReferenceId: _foo
Missing ReferenceId: foo
Missing ReferenceId: foo
Missing SymbolId: _foo2
Missing SymbolId: Baz
Missing SymbolId: _Baz
Missing ReferenceId: _Baz
Missing ReferenceId: g
Missing ReferenceId: Baz
Missing ReferenceId: Baz
Missing ReferenceId: _foo2
Missing ReferenceId: _foo2
Missing ReferenceId: foo
Missing ReferenceId: foo

tasks/coverage/typescript/tests/cases/compiler/functionOverloads44.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Animal", "Cat", "Dog", "foo1", "foo2", "x1", "x2", "y1", "y2"]
current  scope ScopeId(0): ["foo1", "foo2", "x1", "x2", "y1", "y2"]

tasks/coverage/typescript/tests/cases/compiler/functionOverloads45.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Animal", "Cat", "Dog", "foo1", "foo2", "x1", "x2", "y1", "y2"]
current  scope ScopeId(0): ["foo1", "foo2", "x1", "x2", "y1", "y2"]

tasks/coverage/typescript/tests/cases/compiler/functionOverloadsOnGenericArity1.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["C"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/functionOverloadsOnGenericArity2.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["I"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/functionOverloadsRecursiveGenericReturnType.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(1): ["V"]
current  scope ScopeId(1): []
Bindings Mismatch:
previous scope ScopeId(2): ["U"]
current  scope ScopeId(2): []
Bindings Mismatch:
previous scope ScopeId(5): ["T", "v_args"]
current  scope ScopeId(3): ["v_args"]

tasks/coverage/typescript/tests/cases/compiler/functionReturnTypeQuery.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["foo"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/functionTypeArgumentArrayAssignment.ts
semantic error: Semantic Collector failed after transform
Missing SymbolId: test
Missing SymbolId: _test
Missing ReferenceId: test
Missing ReferenceId: test

tasks/coverage/typescript/tests/cases/compiler/functionsWithImplicitReturnTypeAssignableToUndefined.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["MyUnknown", "f1", "f2", "f3", "f4", "f5", "f6", "f7", "f8"]
current  scope ScopeId(0): ["f1", "f2", "f3", "f4", "f5", "f6", "f7", "f8"]

tasks/coverage/typescript/tests/cases/compiler/funduleExportedClassIsUsedBeforeDeclaration.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["A", "B"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/funduleOfFunctionWithoutReturnTypeAnnotation.ts
semantic error: Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript

tasks/coverage/typescript/tests/cases/compiler/funduleUsedAcrossFileBoundary.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Q"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/generativeRecursionWithTypeOf.ts
semantic error: Semantic Collector failed after transform
Missing SymbolId: M
Missing SymbolId: _M
Missing ReferenceId: _M
Missing ReferenceId: f
Missing ReferenceId: M
Missing ReferenceId: M

tasks/coverage/typescript/tests/cases/compiler/genericAndNonGenericOverload1.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["c2", "callable2"]
current  scope ScopeId(0): ["c2"]

tasks/coverage/typescript/tests/cases/compiler/genericBaseClassLiteralProperty.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(1): ["T"]
current  scope ScopeId(1): []

tasks/coverage/typescript/tests/cases/compiler/genericBaseClassLiteralProperty2.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(2): ["TItem"]
current  scope ScopeId(2): []

tasks/coverage/typescript/tests/cases/compiler/genericCallInferenceWithGenericLocalFunction.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(1): ["I", "O", "tr"]
current  scope ScopeId(1): ["tr"]
Bindings Mismatch:
previous scope ScopeId(2): ["P", "m", "p"]
current  scope ScopeId(2): ["m", "p"]
Bindings Mismatch:
previous scope ScopeId(3): ["I", "from"]
current  scope ScopeId(3): ["from"]

tasks/coverage/typescript/tests/cases/compiler/genericCallOnMemberReturningClosedOverObject.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(1): ["T1", "x"]
current  scope ScopeId(1): ["x"]
Bindings Mismatch:
previous scope ScopeId(2): ["T2", "t2"]
current  scope ScopeId(2): ["t2"]

tasks/coverage/typescript/tests/cases/compiler/genericCallWithFixedArguments.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(5): ["T", "U", "x"]
current  scope ScopeId(5): ["x"]

tasks/coverage/typescript/tests/cases/compiler/genericCallWithNonGenericArgs1.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(1): ["T", "x"]
current  scope ScopeId(1): ["x"]

tasks/coverage/typescript/tests/cases/compiler/genericCallWithinOwnBodyCastTypeParameterIdentity.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Thenable", "toThenable", "toThenableInferred"]
current  scope ScopeId(0): ["toThenable", "toThenableInferred"]
Bindings Mismatch:
previous scope ScopeId(3): ["Input", "Result", "fn"]
current  scope ScopeId(1): ["fn"]
Bindings Mismatch:
previous scope ScopeId(5): ["V", "onFulfilled"]
current  scope ScopeId(3): ["onFulfilled"]
Bindings Mismatch:
previous scope ScopeId(6): ["Input", "Result", "fn"]
current  scope ScopeId(4): ["fn"]

tasks/coverage/typescript/tests/cases/compiler/genericCallbacksAndClassHierarchy.ts
semantic error: Semantic Collector failed after transform
Missing SymbolId: M
Missing SymbolId: _M
Missing ReferenceId: _M
Missing ReferenceId: C1
Missing ReferenceId: _M
Missing ReferenceId: A
Missing ReferenceId: _M
Missing ReferenceId: B
Missing ReferenceId: _M
Missing ReferenceId: D
Missing ReferenceId: M
Missing ReferenceId: M

tasks/coverage/typescript/tests/cases/compiler/genericCapturingFunctionNarrowing.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(1): ["First", "Second", "SubFirst", "SubFirstMore", "hasAFoo", "thing"]
current  scope ScopeId(1): ["hasAFoo", "thing"]

tasks/coverage/typescript/tests/cases/compiler/genericClassPropertyInheritanceSpecialization.ts
semantic error: Semantic Collector failed after transform
Missing SymbolId: Portal
Missing SymbolId: _Portal
Missing SymbolId: Controls
Missing SymbolId: _Controls
Missing SymbolId: Validators
Missing SymbolId: _Validators
Missing ReferenceId: _Validators
Missing ReferenceId: Validator
Missing ReferenceId: Validators
Missing ReferenceId: Validators
Missing ReferenceId: _Controls
Missing ReferenceId: _Controls
Missing ReferenceId: Controls
Missing ReferenceId: Controls
Missing ReferenceId: _Portal
Missing ReferenceId: _Portal
Missing ReferenceId: Portal
Missing ReferenceId: Portal
Missing SymbolId: PortalFx
Missing SymbolId: _PortalFx
Missing SymbolId: ViewModels
Missing SymbolId: _ViewModels
Missing SymbolId: Controls
Missing SymbolId: _Controls2
Missing SymbolId: Validators
Missing SymbolId: _Validators2
Missing ReferenceId: _Validators2
Missing ReferenceId: Validator
Missing ReferenceId: Validators
Missing ReferenceId: Validators
Missing ReferenceId: _Controls2
Missing ReferenceId: _Controls2
Missing ReferenceId: Controls
Missing ReferenceId: Controls
Missing ReferenceId: _ViewModels
Missing ReferenceId: _ViewModels
Missing ReferenceId: ViewModels
Missing ReferenceId: ViewModels
Missing ReferenceId: _PortalFx
Missing ReferenceId: _PortalFx
Missing ReferenceId: PortalFx
Missing ReferenceId: PortalFx

tasks/coverage/typescript/tests/cases/compiler/genericClassStaticMethod.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(1): ["T"]
current  scope ScopeId(1): []
Bindings Mismatch:
previous scope ScopeId(3): ["T"]
current  scope ScopeId(3): []

tasks/coverage/typescript/tests/cases/compiler/genericClassWithStaticFactory.ts
semantic error: Semantic Collector failed after transform
Missing SymbolId: Editor
Missing SymbolId: _Editor
Missing ReferenceId: _Editor
Missing ReferenceId: List
Missing ReferenceId: _Editor
Missing ReferenceId: ListFactory
Missing ReferenceId: Editor
Missing ReferenceId: Editor

tasks/coverage/typescript/tests/cases/compiler/genericClasses4.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(1): ["A"]
current  scope ScopeId(1): []
Bindings Mismatch:
previous scope ScopeId(3): ["B", "f", "retval", "x", "y"]
current  scope ScopeId(3): ["f", "retval", "x", "y"]
Bindings Mismatch:
previous scope ScopeId(4): ["B", "f", "retval", "x", "y"]
current  scope ScopeId(4): ["f", "retval", "x", "y"]

tasks/coverage/typescript/tests/cases/compiler/genericClassesInModule2.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["A", "B", "C"]
current  scope ScopeId(0): ["A", "B"]
Bindings Mismatch:
previous scope ScopeId(1): ["T1"]
current  scope ScopeId(1): []
Bindings Mismatch:
previous scope ScopeId(6): ["T2"]
current  scope ScopeId(4): []

tasks/coverage/typescript/tests/cases/compiler/genericCloduleInModule.ts
semantic error: Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript

tasks/coverage/typescript/tests/cases/compiler/genericConstraint3.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["A", "B", "C"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/genericConstraintOnExtendedBuiltinTypes.ts
semantic error: Semantic Collector failed after transform
Missing SymbolId: EndGate
Missing SymbolId: _EndGate
Missing SymbolId: Tweening
Missing SymbolId: _Tweening
Missing ReferenceId: _Tweening
Missing ReferenceId: Tween
Missing ReferenceId: Tweening
Missing ReferenceId: Tweening
Missing ReferenceId: _EndGate
Missing ReferenceId: _EndGate
Missing ReferenceId: EndGate
Missing ReferenceId: EndGate
Missing SymbolId: _EndGate2
Missing SymbolId: Tweening
Missing SymbolId: _Tweening2
Missing ReferenceId: _Tweening2
Missing ReferenceId: NumberTween
Missing ReferenceId: Tweening
Missing ReferenceId: Tweening
Missing ReferenceId: _EndGate2
Missing ReferenceId: _EndGate2
Missing ReferenceId: EndGate
Missing ReferenceId: EndGate

tasks/coverage/typescript/tests/cases/compiler/genericConstraintOnExtendedBuiltinTypes2.ts
semantic error: Semantic Collector failed after transform
Missing SymbolId: EndGate
Missing SymbolId: _EndGate2
Missing SymbolId: Tweening
Missing SymbolId: _Tweening
Missing ReferenceId: _Tweening
Missing ReferenceId: Tween
Missing ReferenceId: Tweening
Missing ReferenceId: Tweening
Missing ReferenceId: _EndGate2
Missing ReferenceId: _EndGate2
Missing ReferenceId: EndGate
Missing ReferenceId: EndGate
Missing SymbolId: _EndGate3
Missing SymbolId: Tweening
Missing SymbolId: _Tweening2
Missing ReferenceId: _Tweening2
Missing ReferenceId: NumberTween
Missing ReferenceId: Tweening
Missing ReferenceId: Tweening
Missing ReferenceId: _EndGate3
Missing ReferenceId: _EndGate3
Missing ReferenceId: EndGate
Missing ReferenceId: EndGate

tasks/coverage/typescript/tests/cases/compiler/genericConstructSignatureInInterface.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["C", "r", "v"]
current  scope ScopeId(0): ["r", "v"]

tasks/coverage/typescript/tests/cases/compiler/genericFunctionHasFreshTypeArgs.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(1): ["T", "p"]
current  scope ScopeId(1): ["p"]

tasks/coverage/typescript/tests/cases/compiler/genericFunctionInference2.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["HandleCreatorsFactory", "MyState", "Props", "Reducer", "enhancer4", "foo", "myReducer1", "myReducer2"]
current  scope ScopeId(0): ["enhancer4", "myReducer1", "myReducer2"]
reference Mismatch:
previous reference ReferenceId(14): Some("foo")
current  reference ReferenceId(2): None
reference Mismatch:
previous reference ReferenceId(17): Some("foo")
current  reference ReferenceId(5): None

tasks/coverage/typescript/tests/cases/compiler/genericFunctionSpecializations1.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(2): ["T", "test"]
current  scope ScopeId(1): ["test"]
Bindings Mismatch:
previous scope ScopeId(4): ["T", "test"]
current  scope ScopeId(2): ["test"]

tasks/coverage/typescript/tests/cases/compiler/genericFunctions3.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Query", "from"]
current  scope ScopeId(0): ["from"]
Bindings Mismatch:
previous scope ScopeId(4): ["T", "arg"]
current  scope ScopeId(1): ["arg"]

tasks/coverage/typescript/tests/cases/compiler/genericFunctionsAndConditionalInference.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Boxified", "LR", "Ops", "Result", "Target", "Targets", "foo", "left", "leftOk", "leftOrphaned", "ok", "orphaned", "qq", "right", "rightOk", "rightOrphaned"]
current  scope ScopeId(0): ["foo", "left", "leftOk", "leftOrphaned", "ok", "orphaned", "qq", "right", "rightOk", "rightOrphaned"]
Bindings Mismatch:
previous scope ScopeId(4): ["U", "V", "obj"]
current  scope ScopeId(1): ["obj"]
Bindings Mismatch:
previous scope ScopeId(13): ["F", "at"]
current  scope ScopeId(2): ["at"]
Bindings Mismatch:
previous scope ScopeId(14): ["F", "at"]
current  scope ScopeId(3): ["at"]

tasks/coverage/typescript/tests/cases/compiler/genericFunctionsNotContextSensitive.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(1): ["F", "G", "_"]
current  scope ScopeId(1): ["_"]
Bindings Mismatch:
previous scope ScopeId(2): ["K", "_"]
current  scope ScopeId(2): ["_"]

tasks/coverage/typescript/tests/cases/compiler/genericFunctionsWithOptionalParameters1.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Utils", "utils"]
current  scope ScopeId(0): ["utils"]

tasks/coverage/typescript/tests/cases/compiler/genericFunctionsWithOptionalParameters3.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Collection", "Utils", "c", "f1", "f2", "r3", "r4", "r5", "utils"]
current  scope ScopeId(0): ["Collection", "c", "f1", "f2", "r3", "r4", "r5", "utils"]
Bindings Mismatch:
previous scope ScopeId(1): ["T"]
current  scope ScopeId(1): []

tasks/coverage/typescript/tests/cases/compiler/genericIndexedAccessMethodIntersectionCanBeAccessed.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["ExtendedService", "Service", "createService"]
current  scope ScopeId(0): ["createService"]
Bindings Mismatch:
previous scope ScopeId(5): ["ServiceCtr", "T"]
current  scope ScopeId(1): ["ServiceCtr"]

tasks/coverage/typescript/tests/cases/compiler/genericInference2.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["age_v", "ko", "name_v", "o", "rr_v", "x_v", "yy_v", "zz_v"]
current  scope ScopeId(0): ["age_v", "name_v", "o", "rr_v", "x_v", "yy_v", "zz_v"]

tasks/coverage/typescript/tests/cases/compiler/genericInferenceDefaultTypeParameter.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Type"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/genericInferenceDefaultTypeParameterJsxReact.tsx
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["ButtonBaseProps", "Component", "ComponentPropsWithRef", "ElementType", "React", "ReactNode", "_jsxFileName", "v1"]
current  scope ScopeId(0): ["Component", "React", "_jsxFileName", "v1"]
Bindings Mismatch:
previous scope ScopeId(2): ["T", "props"]
current  scope ScopeId(1): ["props"]

tasks/coverage/typescript/tests/cases/compiler/genericInheritedDefaultConstructors.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["A", "B", "Constructor", "c"]
current  scope ScopeId(0): ["A", "B", "c"]
Bindings Mismatch:
previous scope ScopeId(3): ["U"]
current  scope ScopeId(1): []
Bindings Mismatch:
previous scope ScopeId(4): ["V"]
current  scope ScopeId(2): []

tasks/coverage/typescript/tests/cases/compiler/genericInstanceOf.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["C", "F"]
current  scope ScopeId(0): ["C"]
Bindings Mismatch:
previous scope ScopeId(2): ["T"]
current  scope ScopeId(1): []

tasks/coverage/typescript/tests/cases/compiler/genericInterfaceFunctionTypeParameter.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["IFoo", "foo"]
current  scope ScopeId(0): ["foo"]
Bindings Mismatch:
previous scope ScopeId(2): ["A", "fn"]
current  scope ScopeId(1): ["fn"]

tasks/coverage/typescript/tests/cases/compiler/genericInterfaceImplementation.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["IOption", "None"]
current  scope ScopeId(0): ["None"]
Bindings Mismatch:
previous scope ScopeId(4): ["T"]
current  scope ScopeId(1): []
Bindings Mismatch:
previous scope ScopeId(6): ["U"]
current  scope ScopeId(3): []

tasks/coverage/typescript/tests/cases/compiler/genericInterfaceTypeCall.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Foo", "bar", "foo", "test"]
current  scope ScopeId(0): ["foo", "test"]

tasks/coverage/typescript/tests/cases/compiler/genericIsNeverEmptyObject.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(1): ["T", "a", "obj", "rest"]
current  scope ScopeId(1): ["a", "obj", "rest"]

tasks/coverage/typescript/tests/cases/compiler/genericMethodOverspecialization.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Document", "HTMLElement", "document", "elements", "names", "widths", "xxx"]
current  scope ScopeId(0): ["elements", "names", "widths", "xxx"]
reference Mismatch:
previous reference ReferenceId(3): Some("document")
current  reference ReferenceId(1): None

tasks/coverage/typescript/tests/cases/compiler/genericNumberIndex.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["X"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/genericObjectCreationWithoutTypeArgs.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(1): ["T"]
current  scope ScopeId(1): []

tasks/coverage/typescript/tests/cases/compiler/genericObjectLitReturnType.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(1): ["T"]
current  scope ScopeId(1): []

tasks/coverage/typescript/tests/cases/compiler/genericObjectSpreadResultInSwitch.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Params", "getType", "params"]
current  scope ScopeId(0): ["getType"]
Bindings Mismatch:
previous scope ScopeId(2): ["P", "foo", "params", "rest"]
current  scope ScopeId(1): ["foo", "params", "rest"]
reference Mismatch:
previous reference ReferenceId(5): Some("params")
current  reference ReferenceId(2): None
reference Mismatch:
previous reference ReferenceId(7): Some("params")
current  reference ReferenceId(4): None
reference Mismatch:
previous reference ReferenceId(9): Some("params")
current  reference ReferenceId(6): None

tasks/coverage/typescript/tests/cases/compiler/genericOfACloduleType1.ts
semantic error: Semantic Collector failed after transform
Missing SymbolId: M
Missing SymbolId: _M
Missing ReferenceId: _M
Missing ReferenceId: C
Missing SymbolId: _C
Missing ReferenceId: _C
Missing ReferenceId: X
Missing ReferenceId: C
Missing ReferenceId: C
Missing ReferenceId: _M
Missing ReferenceId: _M
Missing ReferenceId: M
Missing ReferenceId: M

tasks/coverage/typescript/tests/cases/compiler/genericOfACloduleType2.ts
semantic error: Semantic Collector failed after transform
Missing SymbolId: M
Missing SymbolId: _M
Missing ReferenceId: _M
Missing ReferenceId: C
Missing SymbolId: _C
Missing ReferenceId: _C
Missing ReferenceId: X
Missing ReferenceId: C
Missing ReferenceId: C
Missing ReferenceId: _M
Missing ReferenceId: _M
Missing ReferenceId: M
Missing ReferenceId: M
Missing SymbolId: N
Missing SymbolId: _N
Missing ReferenceId: N
Missing ReferenceId: N

tasks/coverage/typescript/tests/cases/compiler/genericOverloadSignatures.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["A", "C2", "D", "I2", "I3", "b", "f"]
current  scope ScopeId(0): ["C2", "b", "f"]
Bindings Mismatch:
previous scope ScopeId(11): ["T"]
current  scope ScopeId(2): []

tasks/coverage/typescript/tests/cases/compiler/genericParameterAssignability1.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(1): ["T", "x"]
current  scope ScopeId(1): ["x"]
Bindings Mismatch:
previous scope ScopeId(2): ["T", "x"]
current  scope ScopeId(2): ["x"]

tasks/coverage/typescript/tests/cases/compiler/genericPrototypeProperty.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(1): ["T"]
current  scope ScopeId(1): []

tasks/coverage/typescript/tests/cases/compiler/genericPrototypeProperty2.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["BaseEvent", "BaseEventWrapper", "EventTarget", "MyEvent", "MyEventWrapper"]
current  scope ScopeId(0): ["BaseEvent", "BaseEventWrapper", "MyEvent", "MyEventWrapper"]
Bindings Mismatch:
previous scope ScopeId(3): ["T"]
current  scope ScopeId(2): []

tasks/coverage/typescript/tests/cases/compiler/genericPrototypeProperty3.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(2): ["T"]
current  scope ScopeId(2): []

tasks/coverage/typescript/tests/cases/compiler/genericRecursiveImplicitConstructorErrors2.ts
semantic error: Semantic Collector failed after transform
Missing SymbolId: TypeScript2
Missing SymbolId: _TypeScript
Missing ReferenceId: _TypeScript
Missing ReferenceId: PullSymbolVisibility
Missing ReferenceId: _TypeScript
Missing ReferenceId: PullSymbol
Missing ReferenceId: _TypeScript
Missing ReferenceId: PullTypeSymbol
Missing ReferenceId: TypeScript2
Missing ReferenceId: TypeScript2

tasks/coverage/typescript/tests/cases/compiler/genericReversingTypeParameters.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(1): ["K", "V"]
current  scope ScopeId(1): []

tasks/coverage/typescript/tests/cases/compiler/genericReversingTypeParameters2.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(1): ["K", "V"]
current  scope ScopeId(1): []

tasks/coverage/typescript/tests/cases/compiler/genericSignatureInheritance.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["I", "I2"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/genericSignatureInheritance2.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["I", "I2"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/genericSpecializationToTypeLiteral1.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["IDictionary", "IEnumerable"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/genericStaticAnyTypeFunction.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(2): ["T", "source", "value"]
current  scope ScopeId(2): ["source", "value"]
Bindings Mismatch:
previous scope ScopeId(4): ["T", "source"]
current  scope ScopeId(4): ["source"]

tasks/coverage/typescript/tests/cases/compiler/genericTemplateOverloadResolution.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["IFooFn", "fooFn"]
current  scope ScopeId(0): []
reference Mismatch:
previous reference ReferenceId(8): Some("fooFn")
current  reference ReferenceId(1): None

tasks/coverage/typescript/tests/cases/compiler/genericTupleWithSimplifiableElements.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["I", "SS1", "SS2", "y", "z"]
current  scope ScopeId(0): ["I", "y", "z"]
Bindings Mismatch:
previous scope ScopeId(5): ["SS"]
current  scope ScopeId(1): []

tasks/coverage/typescript/tests/cases/compiler/genericTypeAssertions3.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["T", "r", "s"]
current  scope ScopeId(0): ["r", "s"]

tasks/coverage/typescript/tests/cases/compiler/genericTypeParameterEquivalence2.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(1): ["A", "B", "C", "f", "g"]
current  scope ScopeId(1): ["f", "g"]
Bindings Mismatch:
previous scope ScopeId(3): ["A", "f", "i", "list"]
current  scope ScopeId(3): ["f", "i", "list"]
Bindings Mismatch:
previous scope ScopeId(5): ["A", "ar", "f", "ret"]
current  scope ScopeId(5): ["ar", "f", "ret"]
Bindings Mismatch:
previous scope ScopeId(8): ["A", "ar"]
current  scope ScopeId(8): ["ar"]
Bindings Mismatch:
previous scope ScopeId(9): ["A", "B", "C", "f"]
current  scope ScopeId(9): ["f"]
Bindings Mismatch:
previous scope ScopeId(12): ["A", "pred"]
current  scope ScopeId(12): ["pred"]
Bindings Mismatch:
previous scope ScopeId(13): ["A", "pred", "where"]
current  scope ScopeId(13): ["pred", "where"]

tasks/coverage/typescript/tests/cases/compiler/genericTypeWithCallableMembers.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["C", "Constructable"]
current  scope ScopeId(0): ["C"]
Bindings Mismatch:
previous scope ScopeId(3): ["T"]
current  scope ScopeId(1): []

tasks/coverage/typescript/tests/cases/compiler/genericTypeWithCallableMembers2.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(1): ["T", "f"]
current  scope ScopeId(1): ["f"]
Bindings Mismatch:
previous scope ScopeId(2): ["T", "f"]
current  scope ScopeId(2): ["f"]

tasks/coverage/typescript/tests/cases/compiler/genericTypeWithMultipleBases1.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["I1", "I2", "I3", "x"]
current  scope ScopeId(0): ["x"]

tasks/coverage/typescript/tests/cases/compiler/genericTypeWithMultipleBases2.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["I1", "I2", "I3", "x"]
current  scope ScopeId(0): ["x"]

tasks/coverage/typescript/tests/cases/compiler/genericTypeWithMultipleBases3.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["IA", "IB", "IC", "c", "x", "y"]
current  scope ScopeId(0): ["c", "x", "y"]

tasks/coverage/typescript/tests/cases/compiler/genericWithCallSignatureReturningSpecialization.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["B", "x"]
current  scope ScopeId(0): ["x"]

tasks/coverage/typescript/tests/cases/compiler/genericWithCallSignatures1.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Callable", "CallableExtention"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/genericWithIndexerOfTypeParameterType1.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(1): ["T"]
current  scope ScopeId(1): []

tasks/coverage/typescript/tests/cases/compiler/genericWithIndexerOfTypeParameterType2.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(1): ["TItem"]
current  scope ScopeId(1): []

tasks/coverage/typescript/tests/cases/compiler/genericsAndHigherOrderFunctions.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["K", "M", "N", "R", "S", "T", "U", "combine", "foo"]
current  scope ScopeId(0): ["combine", "foo"]
Bindings Mismatch:
previous scope ScopeId(1): ["S", "T", "f"]
current  scope ScopeId(1): ["f"]
Bindings Mismatch:
previous scope ScopeId(2): ["U", "g"]
current  scope ScopeId(2): ["g"]
Bindings Mismatch:
previous scope ScopeId(4): ["K", "N", "g"]
current  scope ScopeId(4): ["g"]
Bindings Mismatch:
previous scope ScopeId(5): ["M", "h"]
current  scope ScopeId(5): ["h"]
Bindings Mismatch:
previous scope ScopeId(6): ["R", "f"]
current  scope ScopeId(6): ["f"]

tasks/coverage/typescript/tests/cases/compiler/genericsManyTypeParameters.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(1): ["a1", "a10", "a11", "a111", "a112", "a113", "a114", "a115", "a116", "a117", "a118", "a119", "a12", "a13", "a14", "a15", "a16", "a17", "a18", "a2", "a21", "a210", "a211", "a212", "a213", "a214", "a215", "a216", "a217", "a218", "a219", "a22", "a23", "a24", "a25", "a26", "a27", "a28", "a29", "a3", "a31", "a310", "a311", "a312", "a313", "a314", "a315", "a316", "a317", "a318", "a319", "a32", "a33", "a34", "a35", "a36", "a37", "a38", "a39", "a4", "a41", "a410", "a411", "a412", "a413", "a414", "a415", "a416", "a417", "a418", "a419", "a42", "a43", "a44", "a45", "a46", "a47", "a48", "a49", "a5", "a51", "a510", "a511", "a512", "a513", "a514", "a515", "a516", "a517", "a518", "a519", "a52", "a53", "a54", "a55", "a56", "a57", "a58", "a59", "a6", "a61", "a610", "a611", "a612", "a613", "a614", "a615", "a616", "a617", "a618", "a619", "a62", "a63", "a64", "a65", "a66", "a67", "a68", "a69", "a7", "a71", "a8", "a81", "a9", "a91", "b1", "b10", "b11", "b12", "b13", "b14", "b15", "b16", "b17", "b18", "b2", "b3", "b4", "b5", "b6", "b7", "b8", "b9", "c1", "c10", "c11", "c12", "c13", "c14", "c15", "c16", "c17", "c18", "c2", "c3", "c4", "c5", "c6", "c7", "c8", "c9", "x1", "x10", "x11", "x12", "x13", "x14", "x15", "x16", "x17", "x18", "x2", "x3", "x4", "x5", "x6", "x7", "x8", "x9", "y1", "y10", "y12", "y13", "y14", "y15", "y16", "y17", "y18", "y19", "y2", "y3", "y4", "y5", "y6", "y7", "y8", "y9", "z1", "z10", "z11", "z12", "z13", "z14", "z15", "z16", "z17", "z18", "z2", "z3", "z4", "z5", "z6", "z7", "z8", "z9"]
current  scope ScopeId(1): ["a1", "a10", "a11", "a12", "a13", "a14", "a15", "a16", "a17", "a18", "a2", "a3", "a4", "a5", "a6", "a7", "a8", "a9", "b1", "b10", "b11", "b12", "b13", "b14", "b15", "b16", "b17", "b18", "b2", "b3", "b4", "b5", "b6", "b7", "b8", "b9", "c1", "c10", "c11", "c12", "c13", "c14", "c15", "c16", "c17", "c18", "c2", "c3", "c4", "c5", "c6", "c7", "c8", "c9", "x1", "x10", "x11", "x12", "x13", "x14", "x15", "x16", "x17", "x18", "x2", "x3", "x4", "x5", "x6", "x7", "x8", "x9", "y1", "y10", "y12", "y13", "y14", "y15", "y16", "y17", "y18", "y19", "y2", "y3", "y4", "y5", "y6", "y7", "y8", "y9", "z1", "z10", "z11", "z12", "z13", "z14", "z15", "z16", "z17", "z18", "z2", "z3", "z4", "z5", "z6", "z7", "z8", "z9"]

tasks/coverage/typescript/tests/cases/compiler/getAccessorWithImpliedReturnTypeAndFunctionClassMerge.ts
semantic error: Semantic Collector failed after transform
Missing SymbolId: MyModule
Missing SymbolId: _MyModule
Missing ReferenceId: _MyModule
Missing ReferenceId: MyClass
Missing ReferenceId: MyModule
Missing ReferenceId: MyModule

tasks/coverage/typescript/tests/cases/compiler/getParameterNameAtPosition.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Mock", "Tester"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/getterErrorMessageNotDuplicated.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Bar", "Foo", "Thing"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/getterSetterSubtypeAssignment.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Foo", "NumberOrObject", "NumberOrString", "NumberOrUndefined", "numberOrObject", "numberOrString", "numberOrUndefined"]
current  scope ScopeId(0): ["NumberOrObject", "NumberOrString", "NumberOrUndefined", "numberOrObject", "numberOrString", "numberOrUndefined"]

tasks/coverage/typescript/tests/cases/compiler/global.ts
semantic error: Semantic Collector failed after transform
Missing SymbolId: M
Missing SymbolId: _M
Missing ReferenceId: _M
Missing ReferenceId: f
Missing ReferenceId: M
Missing ReferenceId: M

tasks/coverage/typescript/tests/cases/compiler/globalFunctionAugmentationOverload.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["global"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/globalIsContextualKeyword.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["a", "b", "foo", "global", "obj"]
current  scope ScopeId(0): ["a", "b", "foo", "obj"]

tasks/coverage/typescript/tests/cases/compiler/hidingCallSignatures.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["C", "D", "E", "F", "d", "e", "f"]
current  scope ScopeId(0): ["d", "e", "f"]

tasks/coverage/typescript/tests/cases/compiler/hidingConstructSignatures.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["C", "D", "E", "F", "d", "e", "f"]
current  scope ScopeId(0): ["d", "e", "f"]

tasks/coverage/typescript/tests/cases/compiler/hidingIndexSignatures.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["A", "B", "a", "b"]
current  scope ScopeId(0): ["a", "b"]

tasks/coverage/typescript/tests/cases/compiler/higherOrderMappedIndexLookupInference.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["IdMapped", "T", "U", "f", "f1", "f2", "f3", "g", "h"]
current  scope ScopeId(0): ["f1", "f2", "f3", "h"]
Bindings Mismatch:
previous scope ScopeId(1): ["T", "U", "a", "b"]
current  scope ScopeId(1): ["a", "b"]
Bindings Mismatch:
previous scope ScopeId(2): ["K", "L", "T", "U", "a", "b"]
current  scope ScopeId(2): ["a", "b"]
Bindings Mismatch:
previous scope ScopeId(3): ["T", "U", "a", "b"]
current  scope ScopeId(3): ["a", "b"]
reference Mismatch:
previous reference ReferenceId(35): Some("f")
current  reference ReferenceId(12): None

tasks/coverage/typescript/tests/cases/compiler/homomorphicMappedTypeIntersectionAssignability.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(1): ["TType", "a", "b", "c"]
current  scope ScopeId(1): ["a", "b", "c"]

tasks/coverage/typescript/tests/cases/compiler/homomorphicMappedTypeNesting.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Box", "Identity", "Test", "UnboxArray"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/homomorphicMappedTypeWithNonHomomorphicInstantiationSpreadable1.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["HandleOptions", "result"]
current  scope ScopeId(0): ["result"]

tasks/coverage/typescript/tests/cases/compiler/icomparable.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["IComparable", "StringComparable", "sc", "x"]
current  scope ScopeId(0): ["sc", "x"]

tasks/coverage/typescript/tests/cases/compiler/identicalGenericConditionalsWithInferRelated.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Constructor", "MappedResult", "X", "Y", "f"]
current  scope ScopeId(0): ["Y", "f"]
Bindings Mismatch:
previous scope ScopeId(1): ["Cond1", "Cond2", "X", "arg", "x", "y"]
current  scope ScopeId(1): ["arg", "x", "y"]
Bindings Mismatch:
previous scope ScopeId(15): ["C", "ctor"]
current  scope ScopeId(3): ["ctor"]

tasks/coverage/typescript/tests/cases/compiler/identicalTypesNoDifferByCheckOrder.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["FunctionComponent1", "FunctionComponent2", "SomeProps", "SomePropsClone", "SomePropsCloneX", "SomePropsX", "Validator", "WeakValidationMap", "comp2", "comp3", "needsComponentOfSomeProps2", "needsComponentOfSomeProps3"]
current  scope ScopeId(0): ["comp2", "comp3", "needsComponentOfSomeProps2", "needsComponentOfSomeProps3"]

tasks/coverage/typescript/tests/cases/compiler/identityAndDivergentNormalizedTypes.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["ApiPost", "PostBody", "PostPath", "fx1", "post", "tmp"]
current  scope ScopeId(0): ["fx1", "post", "tmp"]
Bindings Mismatch:
previous scope ScopeId(4): ["PATH", "body", "options", "path"]
current  scope ScopeId(1): ["body", "options", "path"]
Bindings Mismatch:
previous scope ScopeId(5): ["PATH", "body", "path"]
current  scope ScopeId(2): ["body", "path"]
Bindings Mismatch:
previous scope ScopeId(6): ["P", "x", "y"]
current  scope ScopeId(3): ["x", "y"]

tasks/coverage/typescript/tests/cases/compiler/illegalGenericWrapping1.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Sequence"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/implementInterfaceAnyMemberWithVoid.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Bug", "I"]
current  scope ScopeId(0): ["Bug"]

tasks/coverage/typescript/tests/cases/compiler/implementsInClassExpression.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Foo", "cls"]
current  scope ScopeId(0): ["cls"]

tasks/coverage/typescript/tests/cases/compiler/implicitAnyGenericTypeInference.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Comparer", "c", "r"]
current  scope ScopeId(0): ["c", "r"]

tasks/coverage/typescript/tests/cases/compiler/implicitAnyGenerics.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(1): ["T"]
current  scope ScopeId(1): []
Bindings Mismatch:
previous scope ScopeId(2): ["T"]
current  scope ScopeId(2): []
Bindings Mismatch:
previous scope ScopeId(4): ["T"]
current  scope ScopeId(4): []

tasks/coverage/typescript/tests/cases/compiler/implicitIndexSignatures.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["StringMap", "empty1", "empty2", "f1", "f2", "f3", "f4", "f5", "map", "names1", "names2"]
current  scope ScopeId(0): ["empty1", "empty2", "f1", "f2", "f3", "f4", "f5", "map", "names1", "names2"]
Bindings Mismatch:
previous scope ScopeId(9): ["A", "B", "E1"]
current  scope ScopeId(6): ["E1"]
Bindings Mismatch:
previous scope ScopeId(10): ["A", "B", "E2"]
current  scope ScopeId(7): ["E2"]
Bindings Mismatch:
previous scope ScopeId(11): ["A", "B", "E3"]
current  scope ScopeId(8): ["E3"]

tasks/coverage/typescript/tests/cases/compiler/importAliasAnExternalModuleInsideAnInternalModule.ts
semantic error: Semantic Collector failed after transform
Missing SymbolId: m
Missing SymbolId: _m
Missing ReferenceId: _m
Missing ReferenceId: foo
Missing ReferenceId: m
Missing ReferenceId: m

tasks/coverage/typescript/tests/cases/compiler/importAliasWithDottedName.ts
semantic error: Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript
Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript

tasks/coverage/typescript/tests/cases/compiler/importAndVariableDeclarationConflict2.ts
semantic error: Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript

tasks/coverage/typescript/tests/cases/compiler/importDeclWithExportModifierInAmbientContext.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["m"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/importElisionEnum.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(1): ["MyEnum", "a", "b", "c", "d"]
current  scope ScopeId(1): ["MyEnum"]

tasks/coverage/typescript/tests/cases/compiler/importHelpers.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["A", "B", "C", "dec", "id", "result"]
current  scope ScopeId(0): ["A", "B", "C", "id", "result"]
Bindings Mismatch:
previous scope ScopeId(5): ["T", "x"]
current  scope ScopeId(5): ["x"]
reference Mismatch:
previous reference ReferenceId(1): Some("dec")
current  reference ReferenceId(1): None
reference Mismatch:
previous reference ReferenceId(2): Some("dec")
current  reference ReferenceId(2): None

tasks/coverage/typescript/tests/cases/compiler/importHelpersES6.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["A", "dec", "o", "y"]
current  scope ScopeId(0): ["A", "o", "y"]
reference Mismatch:
previous reference ReferenceId(0): Some("dec")
current  reference ReferenceId(0): None

tasks/coverage/typescript/tests/cases/compiler/importHelpersInAmbientContext.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["N"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/importHelpersInIsolatedModules.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["A", "B", "C", "dec"]
current  scope ScopeId(0): ["A", "B", "C"]
reference Mismatch:
previous reference ReferenceId(1): Some("dec")
current  reference ReferenceId(1): None
reference Mismatch:
previous reference ReferenceId(2): Some("dec")
current  reference ReferenceId(2): None

tasks/coverage/typescript/tests/cases/compiler/importHelpersInTsx.tsx
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["React", "_jsxFileName", "o", "x"]
current  scope ScopeId(0): ["_jsxFileName", "x"]
reference Mismatch:
previous reference ReferenceId(2): Some("React")
current  reference ReferenceId(0): None
reference Mismatch:
previous reference ReferenceId(0): Some("o")
current  reference ReferenceId(1): None

tasks/coverage/typescript/tests/cases/compiler/importHelpersVerbatimModuleSyntax.ts
semantic error: `export = <value>;` is only supported when compiling modules to CommonJS.
Please consider using `export default <value>;`, or add @babel/plugin-transform-modules-commonjs to your Babel config.

tasks/coverage/typescript/tests/cases/compiler/importHelpersWithLocalCollisions.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["A", "__decorate", "dec", "o", "y"]
current  scope ScopeId(0): ["A", "o", "y"]
reference Mismatch:
previous reference ReferenceId(0): Some("dec")
current  reference ReferenceId(0): None

tasks/coverage/typescript/tests/cases/compiler/importInTypePosition.ts
semantic error: Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript

tasks/coverage/typescript/tests/cases/compiler/importNonExportedMember12.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["A"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/importOnAliasedIdentifiers.ts
semantic error: Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript

tasks/coverage/typescript/tests/cases/compiler/importPropertyFromMappedType.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["NotFound"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/importShadowsGlobalName.ts
semantic error: `export = <value>;` is only supported when compiling modules to CommonJS.
Please consider using `export default <value>;`, or add @babel/plugin-transform-modules-commonjs to your Babel config.

tasks/coverage/typescript/tests/cases/compiler/importUsedInExtendsList1.ts
semantic error: `import lib = require(...);` is only supported when compiling modules to CommonJS.
Please consider using `import lib from '...';` alongside Typescript's --allowSyntheticDefaultImports option, or add @babel/plugin-transform-modules-commonjs to your Babel config.

tasks/coverage/typescript/tests/cases/compiler/import_reference-exported-alias.ts
semantic error: `export = <value>;` is only supported when compiling modules to CommonJS.
Please consider using `export default <value>;`, or add @babel/plugin-transform-modules-commonjs to your Babel config.

tasks/coverage/typescript/tests/cases/compiler/import_reference-to-type-alias.ts
semantic error: Semantic Collector failed after transform
Missing SymbolId: App
Missing SymbolId: _App
Missing SymbolId: Services
Missing SymbolId: _Services
Missing ReferenceId: _Services
Missing ReferenceId: UserServices
Missing ReferenceId: Services
Missing ReferenceId: Services
Missing ReferenceId: _App
Missing ReferenceId: _App
Missing ReferenceId: App
Missing ReferenceId: App

tasks/coverage/typescript/tests/cases/compiler/import_unneeded-require-when-referenecing-aliased-type-throug-array.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["ITest"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/import_var-referencing-an-imported-module-alias.ts
semantic error: `import lib = require(...);` is only supported when compiling modules to CommonJS.
Please consider using `import lib from '...';` alongside Typescript's --allowSyntheticDefaultImports option, or add @babel/plugin-transform-modules-commonjs to your Babel config.

tasks/coverage/typescript/tests/cases/compiler/importedAliasedConditionalTypeInstantiation.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Actual", "Expected", "Handler", "lambdaTester"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/importedAliasesInTypePositions.ts
semantic error: Semantic Collector failed after transform
Missing SymbolId: elaborate
Missing SymbolId: _elaborate
Missing SymbolId: nested
Missing SymbolId: _nested
Missing SymbolId: mod
Missing SymbolId: _mod
Missing SymbolId: name
Missing SymbolId: _name
Missing ReferenceId: _name
Missing ReferenceId: ReferredTo
Missing ReferenceId: name
Missing ReferenceId: name
Missing ReferenceId: _mod
Missing ReferenceId: _mod
Missing ReferenceId: mod
Missing ReferenceId: mod
Missing ReferenceId: _nested
Missing ReferenceId: _nested
Missing ReferenceId: nested
Missing ReferenceId: nested
Missing ReferenceId: _elaborate
Missing ReferenceId: _elaborate
Missing ReferenceId: elaborate
Missing ReferenceId: elaborate

tasks/coverage/typescript/tests/cases/compiler/importedModuleClassNameClash.ts
semantic error: Semantic Collector failed after transform
Missing SymbolId: foo

tasks/coverage/typescript/tests/cases/compiler/importsInAmbientModules1.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["M"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/importsInAmbientModules2.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["M"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/importsInAmbientModules3.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["M"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/inKeywordAndIntersection.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["A", "B", "ClassOne", "InstanceOne", "InstanceTwo", "f10", "instance"]
current  scope ScopeId(0): ["A", "B", "ClassOne", "f10", "instance"]

tasks/coverage/typescript/tests/cases/compiler/inKeywordTypeguard.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["A", "AOrB", "AWithMethod", "AWithOptionalProp", "B", "BWithMethod", "BWithOptionalProp", "C", "ClassWithUnionProp", "D", "NegativeClassTest", "UnreachableCodeDetection", "checkIsTouchDevice", "error", "f", "f1", "f10", "f11", "f12", "f13", "f14", "f15", "f16", "f2", "f3", "f4", "f5", "f6", "f7", "f8", "f9", "foo", "isHTMLTable", "narrowsToNever", "negativeClassesTest", "negativeIntersectionTest", "negativeMultipleClassesTest", "negativePropTest", "negativeTestClassesWithMemberMissingInBothClasses", "negativeTestClassesWithMembers", "positiveClassesTest", "positiveIntersectionTest", "positiveTestClassesWithOptionalProperties", "sym", "test1", "test2", "test3", "x"]
current  scope ScopeId(0): ["A", "AWithMethod", "AWithOptionalProp", "B", "BWithMethod", "BWithOptionalProp", "C", "ClassWithUnionProp", "D", "NegativeClassTest", "UnreachableCodeDetection", "checkIsTouchDevice", "f", "f1", "f10", "f11", "f12", "f13", "f14", "f15", "f16", "f2", "f3", "f4", "f5", "f6", "f7", "f8", "f9", "foo", "isHTMLTable", "narrowsToNever", "negativeClassesTest", "negativeIntersectionTest", "negativeMultipleClassesTest", "negativePropTest", "negativeTestClassesWithMemberMissingInBothClasses", "negativeTestClassesWithMembers", "positiveClassesTest", "positiveIntersectionTest", "positiveTestClassesWithOptionalProperties", "sym", "test1", "test2", "test3"]
Bindings Mismatch:
previous scope ScopeId(67): ["T", "x"]
current  scope ScopeId(65): ["x"]
Bindings Mismatch:
previous scope ScopeId(111): ["A", "value"]
current  scope ScopeId(109): ["value"]
Bindings Mismatch:
previous scope ScopeId(114): ["T", "table"]
current  scope ScopeId(112): ["table"]
Bindings Mismatch:
previous scope ScopeId(115): ["P", "a"]
current  scope ScopeId(113): ["a"]
Bindings Mismatch:
previous scope ScopeId(116): ["T", "obj"]
current  scope ScopeId(114): ["obj"]
Bindings Mismatch:
previous scope ScopeId(119): ["T", "obj"]
current  scope ScopeId(117): ["obj"]
Bindings Mismatch:
previous scope ScopeId(122): ["T", "obj"]
current  scope ScopeId(120): ["obj"]
reference Mismatch:
previous reference ReferenceId(46): Some("error")
current  reference ReferenceId(26): None
reference Mismatch:
previous reference ReferenceId(47): Some("error")
current  reference ReferenceId(27): None
reference Mismatch:
previous reference ReferenceId(48): Some("error")
current  reference ReferenceId(28): None
reference Mismatch:
previous reference ReferenceId(60): Some("x")
current  reference ReferenceId(39): None
reference Mismatch:
previous reference ReferenceId(61): Some("x")
current  reference ReferenceId(40): None
reference Mismatch:
previous reference ReferenceId(62): Some("x")
current  reference ReferenceId(41): None
reference Mismatch:
previous reference ReferenceId(63): Some("x")
current  reference ReferenceId(42): None
reference Mismatch:
previous reference ReferenceId(64): Some("x")
current  reference ReferenceId(43): None
reference Mismatch:
previous reference ReferenceId(65): Some("x")
current  reference ReferenceId(44): None
reference Mismatch:
previous reference ReferenceId(66): Some("x")
current  reference ReferenceId(45): None

tasks/coverage/typescript/tests/cases/compiler/inOperatorWithGeneric.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(1): ["T"]
current  scope ScopeId(1): []

tasks/coverage/typescript/tests/cases/compiler/incrementOnNullAssertion.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Dictionary", "foo", "x"]
current  scope ScopeId(0): ["foo", "x"]

tasks/coverage/typescript/tests/cases/compiler/indexIntoEnum.ts
semantic error: Semantic Collector failed after transform
Missing SymbolId: M
Missing SymbolId: _M
Missing ReferenceId: M
Missing ReferenceId: M

tasks/coverage/typescript/tests/cases/compiler/indexSignaturesInferentialTyping.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(1): ["T", "items"]
current  scope ScopeId(1): ["items"]
Bindings Mismatch:
previous scope ScopeId(2): ["T", "items"]
current  scope ScopeId(2): ["items"]

tasks/coverage/typescript/tests/cases/compiler/indexTypeNoSubstitutionTemplateLiteral.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Foo", "Test"]
current  scope ScopeId(0): ["Foo"]

tasks/coverage/typescript/tests/cases/compiler/indexedAccessAndNullableNarrowing.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["AnyObject", "State", "Store", "f1", "f2", "f3", "syncStoreProp"]
current  scope ScopeId(0): ["f1", "f2", "f3", "syncStoreProp"]
Bindings Mismatch:
previous scope ScopeId(1): ["K", "T", "x"]
current  scope ScopeId(1): ["x"]
Bindings Mismatch:
previous scope ScopeId(2): ["K", "T", "x"]
current  scope ScopeId(2): ["x"]
Bindings Mismatch:
previous scope ScopeId(3): ["K", "T", "p1", "p2", "t"]
current  scope ScopeId(3): ["p1", "p2", "t"]
Bindings Mismatch:
previous scope ScopeId(9): ["K", "P", "S", "key", "props", "store", "value"]
current  scope ScopeId(4): ["key", "props", "store", "value"]

tasks/coverage/typescript/tests/cases/compiler/indexedAccessCanBeHighOrder.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(3): ["A", "B", "a", "b", "item"]
current  scope ScopeId(1): ["a", "b", "item"]

tasks/coverage/typescript/tests/cases/compiler/indexedAccessKeyofNestedSimplifiedSubstituteUnwrapped.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["A", "AWrapped", "AnyFunction", "B", "BWrapped", "Params", "Wrapper"]
current  scope ScopeId(0): ["A", "B"]

tasks/coverage/typescript/tests/cases/compiler/indexedAccessNormalization.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["MyMap", "f1", "f2"]
current  scope ScopeId(0): ["f1", "f2"]
Bindings Mismatch:
previous scope ScopeId(4): ["M", "elemofM", "k", "mymap"]
current  scope ScopeId(1): ["elemofM", "k", "mymap"]
Bindings Mismatch:
previous scope ScopeId(5): ["M", "k", "mymap", "q1", "q2", "q3", "z"]
current  scope ScopeId(2): ["k", "mymap", "q1", "q2", "q3", "z"]

tasks/coverage/typescript/tests/cases/compiler/indexedAccessRetainsIndexSignature.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Diff", "O", "Omit", "Omit1", "Omit2", "o"]
current  scope ScopeId(0): ["o"]

tasks/coverage/typescript/tests/cases/compiler/indexedAccessToThisTypeOnIntersection01.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["A", "T"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/indexedAccessTypeConstraints.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Bar", "Data", "Foo", "IData", "Parent", "foo"]
current  scope ScopeId(0): ["Bar", "Foo", "Parent", "foo"]
Bindings Mismatch:
previous scope ScopeId(3): ["M"]
current  scope ScopeId(1): []
Bindings Mismatch:
previous scope ScopeId(6): ["C"]
current  scope ScopeId(4): []
Bindings Mismatch:
previous scope ScopeId(8): ["C", "T"]
current  scope ScopeId(6): []
Bindings Mismatch:
previous scope ScopeId(10): ["C", "T", "x", "y"]
current  scope ScopeId(8): ["x", "y"]

tasks/coverage/typescript/tests/cases/compiler/indexer.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["JQuery", "JQueryElement", "jq"]
current  scope ScopeId(0): ["jq"]

tasks/coverage/typescript/tests/cases/compiler/indexer2.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["IDirectChildrenMap", "IHeapObjectProperty", "directChildrenMap"]
current  scope ScopeId(0): ["directChildrenMap"]

tasks/coverage/typescript/tests/cases/compiler/indexerReturningTypeParameter1.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["a", "a2", "c", "f", "r", "r2"]
current  scope ScopeId(0): ["a", "a2", "c", "r", "r2"]
Bindings Mismatch:
previous scope ScopeId(4): ["T"]
current  scope ScopeId(2): []

tasks/coverage/typescript/tests/cases/compiler/indexingTypesWithNever.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["EmptyObj", "Example", "ExpectType", "Match", "O0", "O0Names", "O0Props", "O1", "O1Names", "O1Props", "O2", "O2Names", "O2Props", "O3", "O3Names", "O3Props", "OptionalPropNames", "OptionalProps", "P0", "P0Names", "P0Props", "P1", "P1Names", "P1Props", "P2", "P2Names", "P2Props", "P3", "P3Names", "P3Props", "RequiredPropNames", "RequiredProps", "Res1", "Res2", "Res3", "Result1", "Result2", "TestObj", "key", "o0NameTest", "o0Test", "o1NameTest", "o1Test", "o2NameTest", "o2Test", "o3NameTest", "o3Test", "obj", "p0NameTest", "p0Test", "p1NameTest", "p1Test", "p2NameTest", "p2Test", "p3NameTest", "p3Test", "result3", "result4", "result5", "result6"]
current  scope ScopeId(0): ["result3", "result4", "result5", "result6"]
reference Mismatch:
previous reference ReferenceId(21): Some("obj")
current  reference ReferenceId(3): None
reference Mismatch:
previous reference ReferenceId(22): Some("key")
current  reference ReferenceId(4): None

tasks/coverage/typescript/tests/cases/compiler/indirectTypeParameterReferences.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["B", "combined", "flowtypes", "literal", "n"]
current  scope ScopeId(0): ["combined", "flowtypes", "literal", "n"]
Bindings Mismatch:
previous scope ScopeId(2): ["A", "Combined", "b", "combined", "literal"]
current  scope ScopeId(1): ["b", "combined", "literal"]

tasks/coverage/typescript/tests/cases/compiler/inferConditionalConstraintMappedMember.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["KeysWithoutStringIndex", "RemoveIdxSgn", "test"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/inferFromGenericFunctionReturnTypes2.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Mapper", "SetOf", "a1", "a2", "a3", "a4", "a5", "a6", "compose", "f1", "f2", "f3", "f4", "filter", "map", "t1", "t2", "testSet"]
current  scope ScopeId(0): ["SetOf", "a1", "a2", "a3", "a4", "a5", "a6", "compose", "f1", "f2", "f3", "f4", "filter", "map", "t1", "t2", "testSet"]
Bindings Mismatch:
previous scope ScopeId(19): ["A"]
current  scope ScopeId(14): []
Bindings Mismatch:
previous scope ScopeId(21): ["B", "transformer"]
current  scope ScopeId(16): ["transformer"]
Bindings Mismatch:
previous scope ScopeId(25): ["T", "fns"]
current  scope ScopeId(19): ["fns"]
Bindings Mismatch:
previous scope ScopeId(28): ["A", "B", "fn"]
current  scope ScopeId(22): ["fn"]
Bindings Mismatch:
previous scope ScopeId(31): ["A", "predicate"]
current  scope ScopeId(25): ["predicate"]

tasks/coverage/typescript/tests/cases/compiler/inferObjectTypeFromStringLiteralToKeyof.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["two", "x", "y"]
current  scope ScopeId(0): ["x", "y"]
reference Mismatch:
previous reference ReferenceId(6): Some("two")
current  reference ReferenceId(1): None
reference Mismatch:
previous reference ReferenceId(9): Some("two")
current  reference ReferenceId(4): None

tasks/coverage/typescript/tests/cases/compiler/inferRestArgumentsMappedTuple.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["MyMappedTupleNew", "MyMappedTupleOld", "MyMappedType", "TupleMapperNew", "TupleMapperOld", "myPrimitiveTupleNew", "myPrimitiveTupleOld"]
current  scope ScopeId(0): ["myPrimitiveTupleNew", "myPrimitiveTupleOld"]

tasks/coverage/typescript/tests/cases/compiler/inferSecondaryParameter.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Ib", "b"]
current  scope ScopeId(0): ["b"]

tasks/coverage/typescript/tests/cases/compiler/inferTInParentheses.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["F1", "IsNumber", "T1", "T2", "T3", "T4", "T5", "T6", "T7", "T8", "T9"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/inferTypeArgumentsInSignatureWithRestParameters.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(1): ["T", "args", "array"]
current  scope ScopeId(1): ["args", "array"]
Bindings Mismatch:
previous scope ScopeId(3): ["T", "args", "nonarray"]
current  scope ScopeId(3): ["args", "nonarray"]
Bindings Mismatch:
previous scope ScopeId(4): ["T", "array", "opt"]
current  scope ScopeId(4): ["array", "opt"]

tasks/coverage/typescript/tests/cases/compiler/inferTypeConstraintInstantiationCircularity.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["AMappedType", "Cell", "F1", "F2", "HasM", "InferIOItemToJSType", "Items", "MyObject", "Simplify", "X1", "X2", "ZodObject", "ZodRawShape", "ZodType", "addQuestionMarks", "optionalKeys", "requiredKeys"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/inferTypeParameterConstraints.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["BaseClass", "Constrain", "Constructor", "E0", "E1", "Foo", "IsSub", "Klass", "SubGuard", "T0", "U", "inferTest", "m"]
current  scope ScopeId(0): ["BaseClass", "Klass"]
Bindings Mismatch:
previous scope ScopeId(11): ["V"]
current  scope ScopeId(1): []
Bindings Mismatch:
previous scope ScopeId(13): ["V"]
current  scope ScopeId(3): []
reference Mismatch:
previous reference ReferenceId(30): Some("m")
current  reference ReferenceId(2): None

tasks/coverage/typescript/tests/cases/compiler/inferTypesWithFixedTupleExtendsAtVariadicPosition.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["SubTup2FixedLength", "SubTup2FixedLengthTest", "SubTup2RestAndTrailingVariadic2", "SubTup2RestAndTrailingVariadic2Test", "SubTup2TrailingVariadic", "SubTup2TrailingVariadicTest", "SubTup2TrailingVariadicTest2", "SubTup2TrailingVariadicWithTrailingFixedElements", "SubTup2TrailingVariadicWithTrailingFixedElementsTest", "SubTup2TrailingVariadicWithTrailingFixedElementsTest2", "SubTup2Variadic", "SubTup2VariadicAndRest", "SubTup2VariadicAndRestTest", "SubTup2VariadicTest", "SubTup2VariadicTest2", "SubTup2VariadicWithLeadingFixedElements", "SubTup2VariadicWithLeadingFixedElementsTest", "SubTup2VariadicWithLeadingFixedElementsTest2"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/inferenceAndHKTs.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["A", "Apply", "B", "F", "T", "TTypeLambda", "TypeClass", "TypeLambda", "a", "map", "typeClass", "x1", "x2"]
current  scope ScopeId(0): ["x1", "x2"]
reference Mismatch:
previous reference ReferenceId(25): Some("map")
current  reference ReferenceId(0): None
reference Mismatch:
previous reference ReferenceId(26): Some("typeClass")
current  reference ReferenceId(1): None
reference Mismatch:
previous reference ReferenceId(27): Some("map")
current  reference ReferenceId(2): None
reference Mismatch:
previous reference ReferenceId(28): Some("typeClass")
current  reference ReferenceId(3): None
reference Mismatch:
previous reference ReferenceId(29): Some("a")
current  reference ReferenceId(4): None

tasks/coverage/typescript/tests/cases/compiler/inferenceAndSelfReferentialConstraint.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Test", "res1", "res2", "res3", "test"]
current  scope ScopeId(0): ["res1", "res2", "res3", "test"]
Bindings Mismatch:
previous scope ScopeId(4): ["T", "arg"]
current  scope ScopeId(1): ["arg"]

tasks/coverage/typescript/tests/cases/compiler/inferenceDoesNotAddUndefinedOrNull.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Node", "NodeArray", "flatMapChildren", "flatMapChildren2"]
current  scope ScopeId(0): ["flatMapChildren", "flatMapChildren2"]
Bindings Mismatch:
previous scope ScopeId(6): ["T", "cb", "node", "result"]
current  scope ScopeId(1): ["cb", "node", "result"]
Bindings Mismatch:
previous scope ScopeId(9): ["T", "cb", "node", "result"]
current  scope ScopeId(4): ["cb", "node", "result"]

tasks/coverage/typescript/tests/cases/compiler/inferenceDoesntCompareAgainstUninstantiatedTypeParameter.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["ClassA", "ConcreteClass", "SettingsInterface", "ValueInterface", "thisGetsTheFalseError", "thisIsOk"]
current  scope ScopeId(0): ["ClassA", "ConcreteClass", "thisGetsTheFalseError", "thisIsOk"]
Bindings Mismatch:
previous scope ScopeId(1): ["TEntityClass"]
current  scope ScopeId(1): []

tasks/coverage/typescript/tests/cases/compiler/inferenceErasedSignatures.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["BaseType", "CType", "GetT1", "InheritedType", "MType", "RType", "SomeAbstractClass", "SomeClass", "SomeClassC", "SomeClassM", "SomeClassR", "StructuralVersion", "T1", "T2"]
current  scope ScopeId(0): ["SomeAbstractClass", "SomeClass"]
Bindings Mismatch:
previous scope ScopeId(3): ["C", "M", "R"]
current  scope ScopeId(1): []

tasks/coverage/typescript/tests/cases/compiler/inferenceExactOptionalProperties1.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Test1"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/inferenceFromParameterlessLambda.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Make", "Take", "foo"]
current  scope ScopeId(0): ["foo"]
Bindings Mismatch:
previous scope ScopeId(1): ["T", "i", "o"]
current  scope ScopeId(1): ["i", "o"]

tasks/coverage/typescript/tests/cases/compiler/inferenceLimit.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["BrokenClass", "MyModule"]
current  scope ScopeId(0): ["BrokenClass"]

tasks/coverage/typescript/tests/cases/compiler/inferenceOfNullableObjectTypesWithCommonBase.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["B", "D", "equal", "v"]
current  scope ScopeId(0): ["equal", "v"]
Bindings Mismatch:
previous scope ScopeId(1): ["T", "a", "b"]
current  scope ScopeId(1): ["a", "b"]

tasks/coverage/typescript/tests/cases/compiler/inferenceOptionalPropertiesToIndexSignatures.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["a1", "a2", "a3", "a4", "obj", "param2", "query", "x1", "x2", "x3", "x4"]
current  scope ScopeId(0): ["a1", "a2", "a3", "a4", "obj", "param2", "query"]
reference Mismatch:
previous reference ReferenceId(3): Some("x1")
current  reference ReferenceId(1): None
reference Mismatch:
previous reference ReferenceId(5): Some("x2")
current  reference ReferenceId(3): None
reference Mismatch:
previous reference ReferenceId(7): Some("x3")
current  reference ReferenceId(5): None
reference Mismatch:
previous reference ReferenceId(9): Some("x4")
current  reference ReferenceId(7): None

tasks/coverage/typescript/tests/cases/compiler/inferenceOuterResultNotIncorrectlyInstantiatedWithInnerResult.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Assign", "Base", "Foo", "Supervisor", "Test", "Zip"]
current  scope ScopeId(0): ["Base", "Foo", "Test", "Zip"]
Bindings Mismatch:
previous scope ScopeId(1): ["A", "B"]
current  scope ScopeId(1): []
Bindings Mismatch:
previous scope ScopeId(3): ["C", "c"]
current  scope ScopeId(3): ["c"]
Bindings Mismatch:
previous scope ScopeId(6): ["T0", "T1"]
current  scope ScopeId(4): []
Bindings Mismatch:
previous scope ScopeId(8): ["A", "right"]
current  scope ScopeId(6): ["right"]
Bindings Mismatch:
previous scope ScopeId(10): ["T"]
current  scope ScopeId(7): []
Bindings Mismatch:
previous scope ScopeId(12): ["T"]
current  scope ScopeId(9): []

tasks/coverage/typescript/tests/cases/compiler/inferenceUnionOfObjectsMappedContextualType.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Entity", "RowRenderer", "RowRendererMeta", "test"]
current  scope ScopeId(0): ["test"]

tasks/coverage/typescript/tests/cases/compiler/inferentialTypingObjectLiteralMethod1.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Int"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/inferentialTypingObjectLiteralMethod2.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Int"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/inferentialTypingUsingApparentType1.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(1): ["T", "x"]
current  scope ScopeId(1): ["x"]

tasks/coverage/typescript/tests/cases/compiler/inferentialTypingUsingApparentType2.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(1): ["T", "x"]
current  scope ScopeId(1): ["x"]

tasks/coverage/typescript/tests/cases/compiler/inferentialTypingUsingApparentType3.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["CharField", "Field", "NumberField", "ObjectField", "person"]
current  scope ScopeId(0): ["CharField", "NumberField", "ObjectField", "person"]
Bindings Mismatch:
previous scope ScopeId(7): ["A", "T"]
current  scope ScopeId(5): []

tasks/coverage/typescript/tests/cases/compiler/inferentialTypingWithFunctionType2.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(1): ["A", "a"]
current  scope ScopeId(1): ["a"]

tasks/coverage/typescript/tests/cases/compiler/inferentialTypingWithFunctionTypeSyntacticScenarios.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["IdentityConstructor", "dottedIdentity", "ic", "s", "t"]
current  scope ScopeId(0): ["dottedIdentity", "ic", "s", "t"]

tasks/coverage/typescript/tests/cases/compiler/inferentialTypingWithFunctionTypeZip.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["S", "T", "U", "i", "pair", "result", "zipWith"]
current  scope ScopeId(0): ["i", "pair", "result", "zipWith"]

tasks/coverage/typescript/tests/cases/compiler/inferredRestTypeFixedOnce.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(1): ["Args", "_"]
current  scope ScopeId(1): ["_"]

tasks/coverage/typescript/tests/cases/compiler/inferringAnyFunctionType1.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(1): ["T", "p"]
current  scope ScopeId(1): ["p"]

tasks/coverage/typescript/tests/cases/compiler/inferringAnyFunctionType2.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(1): ["T", "p"]
current  scope ScopeId(1): ["p"]

tasks/coverage/typescript/tests/cases/compiler/inferringAnyFunctionType3.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(1): ["T", "p"]
current  scope ScopeId(1): ["p"]

tasks/coverage/typescript/tests/cases/compiler/inferringAnyFunctionType4.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(1): ["T", "p"]
current  scope ScopeId(1): ["p"]

tasks/coverage/typescript/tests/cases/compiler/inferringAnyFunctionType5.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(1): ["T", "p"]
current  scope ScopeId(1): ["p"]

tasks/coverage/typescript/tests/cases/compiler/inferringReturnTypeFromConstructSignatureGeneric.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(1): ["T"]
current  scope ScopeId(1): []
Bindings Mismatch:
previous scope ScopeId(3): ["T"]
current  scope ScopeId(3): []
Bindings Mismatch:
previous scope ScopeId(5): ["T"]
current  scope ScopeId(5): []
Bindings Mismatch:
previous scope ScopeId(7): ["T", "type"]
current  scope ScopeId(7): ["type"]
Bindings Mismatch:
previous scope ScopeId(8): ["T"]
current  scope ScopeId(8): []

tasks/coverage/typescript/tests/cases/compiler/infiniteExpandingTypeThroughInheritanceInstantiation.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["A", "B"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/infinitelyExpandingBaseTypes1.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["A", "B", "C"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/infinitelyExpandingBaseTypes2.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["A", "B", "a", "b"]
current  scope ScopeId(0): ["a", "b"]

tasks/coverage/typescript/tests/cases/compiler/infinitelyExpandingOverloads.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["KnockoutObservableBase2", "KnockoutSubscription2", "Validatable2", "ValidationPlacement2", "Validator2", "ViewModel", "Widget"]
current  scope ScopeId(0): ["Validator2", "ViewModel", "Widget"]
Bindings Mismatch:
previous scope ScopeId(7): ["TValue"]
current  scope ScopeId(1): []
Bindings Mismatch:
previous scope ScopeId(8): ["TValue"]
current  scope ScopeId(2): []
Bindings Mismatch:
previous scope ScopeId(9): ["TValue"]
current  scope ScopeId(3): []

tasks/coverage/typescript/tests/cases/compiler/infinitelyExpandingTypeAssignability.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["A", "B", "C", "x", "y"]
current  scope ScopeId(0): ["x", "y"]

tasks/coverage/typescript/tests/cases/compiler/infinitelyExpandingTypes2.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Bar", "Foo", "f", "v"]
current  scope ScopeId(0): ["f", "v"]

tasks/coverage/typescript/tests/cases/compiler/infinitelyExpandingTypes3.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["List", "OwnerList", "OwnerList2", "o1", "o2"]
current  scope ScopeId(0): ["o1", "o2"]

tasks/coverage/typescript/tests/cases/compiler/infinitelyExpandingTypes4.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Grouping", "Query", "QueryEnumerator", "q1", "q2", "q3"]
current  scope ScopeId(0): ["q1", "q2", "q3"]

tasks/coverage/typescript/tests/cases/compiler/infinitelyExpandingTypes5.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Enumerator", "Query", "from"]
current  scope ScopeId(0): ["from"]

tasks/coverage/typescript/tests/cases/compiler/infinitelyExpandingTypesNonGenericBase.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["A", "Base", "Functionality", "Options", "OptionsBase", "o"]
current  scope ScopeId(0): ["A", "Base", "Functionality", "o"]
Bindings Mismatch:
previous scope ScopeId(1): ["V"]
current  scope ScopeId(1): []
Bindings Mismatch:
previous scope ScopeId(3): ["T"]
current  scope ScopeId(3): []

tasks/coverage/typescript/tests/cases/compiler/infinitelyGenerativeInheritance1.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["MyStack", "Stack"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/inheritSameNamePrivatePropertiesFromSameOrigin.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["A", "B", "C", "C2"]
current  scope ScopeId(0): ["B", "C", "C2"]

tasks/coverage/typescript/tests/cases/compiler/inheritanceOfGenericConstructorMethod1.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(1): ["T"]
current  scope ScopeId(1): []
Bindings Mismatch:
previous scope ScopeId(2): ["T"]
current  scope ScopeId(2): []

tasks/coverage/typescript/tests/cases/compiler/inheritanceOfGenericConstructorMethod2.ts
semantic error: Semantic Collector failed after transform
Missing SymbolId: M
Missing SymbolId: _M
Missing ReferenceId: _M
Missing ReferenceId: C1
Missing ReferenceId: _M
Missing ReferenceId: C2
Missing ReferenceId: M
Missing ReferenceId: M
Missing SymbolId: N
Missing SymbolId: _N
Missing ReferenceId: _N
Missing ReferenceId: D1
Missing ReferenceId: _N
Missing ReferenceId: D2
Missing ReferenceId: N
Missing ReferenceId: N

tasks/coverage/typescript/tests/cases/compiler/inheritedConstructorPropertyContextualType.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Assignment", "State"]
current  scope ScopeId(0): ["Assignment"]

tasks/coverage/typescript/tests/cases/compiler/inheritedFunctionAssignmentCompatibility.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["IResultCallback", "fn"]
current  scope ScopeId(0): ["fn"]

tasks/coverage/typescript/tests/cases/compiler/inheritedGenericCallSignature.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["I1", "I2", "Object", "x", "y"]
current  scope ScopeId(0): ["x", "y"]

tasks/coverage/typescript/tests/cases/compiler/inheritedMembersAndIndexSignaturesFromDifferentBases2.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["A", "B", "C"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/inheritedOverloadedSpecializedSignatures.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["A", "B", "C", "C1", "C2", "b", "c", "x1", "x2", "x3", "x4", "x5", "x6", "x7", "x8", "x9"]
current  scope ScopeId(0): ["b", "c", "x1", "x2", "x3", "x4", "x5", "x6", "x7", "x8", "x9"]

tasks/coverage/typescript/tests/cases/compiler/initializersInAmbientEnums.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["E"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/inlineConditionalHasSimilarAssignability.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["MyExtract", "foo"]
current  scope ScopeId(0): ["foo"]
Bindings Mismatch:
previous scope ScopeId(3): ["CustomType", "T", "a", "b", "c", "d", "e"]
current  scope ScopeId(1): ["a", "b", "c", "d", "e"]

tasks/coverage/typescript/tests/cases/compiler/inlinedAliasAssignableToConstraintSameAsAlias.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["A", "Name", "RelationFields", "ShouldA"]
current  scope ScopeId(0): ["A"]
Bindings Mismatch:
previous scope ScopeId(6): ["A1", "A2", "N", "RF"]
current  scope ScopeId(2): []

tasks/coverage/typescript/tests/cases/compiler/innerAliases2.ts
semantic error: Semantic Collector failed after transform
Missing SymbolId: _provider
Missing SymbolId: _provider2
Missing ReferenceId: _provider2
Missing ReferenceId: UsefulClass
Missing ReferenceId: _provider
Missing ReferenceId: _provider
Missing SymbolId: consumer
Missing SymbolId: _consumer
Missing ReferenceId: consumer
Missing ReferenceId: consumer

tasks/coverage/typescript/tests/cases/compiler/innerBoundLambdaEmit.ts
semantic error: Semantic Collector failed after transform
Missing SymbolId: M
Missing SymbolId: _M
Missing ReferenceId: _M
Missing ReferenceId: Foo
Missing ReferenceId: M
Missing ReferenceId: M

tasks/coverage/typescript/tests/cases/compiler/innerExtern.ts
semantic error: Semantic Collector failed after transform
Missing SymbolId: A
Missing SymbolId: _A
Missing SymbolId: B
Missing SymbolId: _B
Missing ReferenceId: _B
Missing ReferenceId: C
Missing ReferenceId: B
Missing ReferenceId: B
Missing ReferenceId: _A
Missing ReferenceId: _A
Missing ReferenceId: A
Missing ReferenceId: A

tasks/coverage/typescript/tests/cases/compiler/innerFunc.ts
semantic error: Semantic Collector failed after transform
Missing SymbolId: M
Missing SymbolId: _M
Missing ReferenceId: _M
Missing ReferenceId: tungsten
Missing ReferenceId: M
Missing ReferenceId: M

tasks/coverage/typescript/tests/cases/compiler/innerTypeArgumentInference.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Generate", "Generator"]
current  scope ScopeId(0): ["Generate"]
Bindings Mismatch:
previous scope ScopeId(2): ["U", "func"]
current  scope ScopeId(1): ["func"]

tasks/coverage/typescript/tests/cases/compiler/instanceOfAssignability.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["ABC", "Alpha", "Animal", "Base", "Beta", "Derived1", "Derived2", "Gamma", "Giraffe", "Mammal", "fn1", "fn2", "fn3", "fn4", "fn5", "fn6", "fn7", "fn8"]
current  scope ScopeId(0): ["ABC", "Animal", "Derived1", "Derived2", "Giraffe", "Mammal", "fn1", "fn2", "fn3", "fn4", "fn5", "fn6", "fn7", "fn8"]

tasks/coverage/typescript/tests/cases/compiler/instanceOfInExternalModules.ts
semantic error: `import lib = require(...);` is only supported when compiling modules to CommonJS.
Please consider using `import lib from '...';` alongside Typescript's --allowSyntheticDefaultImports option, or add @babel/plugin-transform-modules-commonjs to your Babel config.

tasks/coverage/typescript/tests/cases/compiler/instanceSubtypeCheck1.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["A", "B"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/instanceofTypeAliasToGenericClass.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Table", "fn", "fn2", "o"]
current  scope ScopeId(0): ["fn", "fn2"]
Bindings Mismatch:
previous scope ScopeId(3): ["T", "o"]
current  scope ScopeId(1): ["o"]
Bindings Mismatch:
previous scope ScopeId(4): ["T", "o"]
current  scope ScopeId(2): ["o"]
reference Mismatch:
previous reference ReferenceId(11): Some("o")
current  reference ReferenceId(4): None

tasks/coverage/typescript/tests/cases/compiler/instantiateConstraintsToTypeArguments2.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["A", "B"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/instantiateContextualTypes.ts
semantic error: Semantic Collector failed after transform
Missing SymbolId: N1
Missing SymbolId: _N
Missing ReferenceId: N1
Missing ReferenceId: N1

tasks/coverage/typescript/tests/cases/compiler/instantiateContextuallyTypedGenericThis.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["$", "JQuery", "lines"]
current  scope ScopeId(0): ["$", "lines"]

tasks/coverage/typescript/tests/cases/compiler/instantiateCrossFileMerge.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["P"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/instantiatedBaseTypeConstraints.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Bar", "Foo"]
current  scope ScopeId(0): ["Bar"]

tasks/coverage/typescript/tests/cases/compiler/instantiatedBaseTypeConstraints2.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["A", "B"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/instantiatedReturnTypeContravariance.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["B", "c", "d"]
current  scope ScopeId(0): ["c", "d"]

tasks/coverage/typescript/tests/cases/compiler/interMixingModulesInterfaces0.ts
semantic error: Semantic Collector failed after transform
Missing SymbolId: A
Missing SymbolId: _A
Missing SymbolId: B
Missing SymbolId: _B
Missing ReferenceId: _B
Missing ReferenceId: createB
Missing ReferenceId: B
Missing ReferenceId: B
Missing ReferenceId: _A
Missing ReferenceId: _A
Missing ReferenceId: A
Missing ReferenceId: A

tasks/coverage/typescript/tests/cases/compiler/interMixingModulesInterfaces1.ts
semantic error: Semantic Collector failed after transform
Missing SymbolId: A
Missing SymbolId: _A
Missing SymbolId: B
Missing SymbolId: _B
Missing ReferenceId: _B
Missing ReferenceId: createB
Missing ReferenceId: B
Missing ReferenceId: B
Missing ReferenceId: _A
Missing ReferenceId: _A
Missing ReferenceId: A
Missing ReferenceId: A

tasks/coverage/typescript/tests/cases/compiler/interMixingModulesInterfaces2.ts
semantic error: Semantic Collector failed after transform
Missing SymbolId: A
Missing SymbolId: _A
Missing SymbolId: B
Missing SymbolId: _B
Missing ReferenceId: _B
Missing ReferenceId: createB
Missing ReferenceId: B
Missing ReferenceId: B
Missing ReferenceId: A
Missing ReferenceId: A

tasks/coverage/typescript/tests/cases/compiler/interMixingModulesInterfaces3.ts
semantic error: Semantic Collector failed after transform
Missing SymbolId: A
Missing SymbolId: _A
Missing SymbolId: B
Missing SymbolId: _B
Missing ReferenceId: _B
Missing ReferenceId: createB
Missing ReferenceId: B
Missing ReferenceId: B
Missing ReferenceId: A
Missing ReferenceId: A

tasks/coverage/typescript/tests/cases/compiler/interMixingModulesInterfaces4.ts
semantic error: Semantic Collector failed after transform
Missing SymbolId: A
Missing SymbolId: _A
Missing SymbolId: B
Missing SymbolId: _B
Missing ReferenceId: _B
Missing ReferenceId: createB
Missing ReferenceId: B
Missing ReferenceId: B
Missing ReferenceId: _A
Missing ReferenceId: _A
Missing ReferenceId: A
Missing ReferenceId: A

tasks/coverage/typescript/tests/cases/compiler/interMixingModulesInterfaces5.ts
semantic error: Semantic Collector failed after transform
Missing SymbolId: A
Missing SymbolId: _A
Missing SymbolId: B
Missing SymbolId: _B
Missing ReferenceId: _B
Missing ReferenceId: createB
Missing ReferenceId: B
Missing ReferenceId: B
Missing ReferenceId: _A
Missing ReferenceId: _A
Missing ReferenceId: A
Missing ReferenceId: A

tasks/coverage/typescript/tests/cases/compiler/interface0.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Generic", "y"]
current  scope ScopeId(0): ["y"]

tasks/coverage/typescript/tests/cases/compiler/interfaceContextualType.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Bug", "IMap", "IOptions"]
current  scope ScopeId(0): ["Bug"]

tasks/coverage/typescript/tests/cases/compiler/interfaceDeclaration2.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["I1", "I2", "I3", "I4"]
current  scope ScopeId(0): ["I2", "I3", "I4"]

tasks/coverage/typescript/tests/cases/compiler/interfaceDeclaration5.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["C1", "I1"]
current  scope ScopeId(0): ["C1"]

tasks/coverage/typescript/tests/cases/compiler/interfaceExtendsClass1.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Button", "Control", "Image", "Location", "SelectableControl", "TextBox"]
current  scope ScopeId(0): ["Button", "Control", "Image", "Location", "TextBox"]

tasks/coverage/typescript/tests/cases/compiler/interfaceImplementation5.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["C1", "C2", "C3", "C4", "C5", "C6", "I1"]
current  scope ScopeId(0): ["C1", "C2", "C3", "C4", "C5", "C6"]

tasks/coverage/typescript/tests/cases/compiler/interfaceInReopenedModule.ts
semantic error: Semantic Collector failed after transform
Missing SymbolId: m
Missing SymbolId: _m2
Missing ReferenceId: _m2
Missing ReferenceId: n
Missing ReferenceId: m
Missing ReferenceId: m

tasks/coverage/typescript/tests/cases/compiler/interfaceInheritance2.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["I6", "I7", "v1"]
current  scope ScopeId(0): ["v1"]

tasks/coverage/typescript/tests/cases/compiler/interfaceMergedUnconstrainedNoErrorIrrespectiveOfOrder.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["ns"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/interfacePropertiesWithSameName1.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Mover", "MoverShaker", "Shaker"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/interfaceSubtyping.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Camera", "iface"]
current  scope ScopeId(0): ["Camera"]

tasks/coverage/typescript/tests/cases/compiler/interfaceWithCommaSeparators.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Foo", "v"]
current  scope ScopeId(0): ["v"]

tasks/coverage/typescript/tests/cases/compiler/internalImportInstantiatedModuleMergedWithClassNotReferencingInstanceNoConflict.ts
semantic error: Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript

tasks/coverage/typescript/tests/cases/compiler/internalImportUnInstantiatedModuleMergedWithClassNotReferencingInstanceNoConflict.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["A", "B"]
current  scope ScopeId(0): ["A"]

tasks/coverage/typescript/tests/cases/compiler/internalImportUnInstantiatedModuleNotReferencingInstanceNoConflict.ts
semantic error: Semantic Collector failed after transform
Missing SymbolId: B
Missing SymbolId: _B
Missing ReferenceId: B
Missing ReferenceId: B

tasks/coverage/typescript/tests/cases/compiler/intersectionApparentTypeCaching.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["T0", "T1", "TX"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/intersectionConstraintReduction.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["AnyKey", "KeyIfSignatureOfObject", "MustBeKey", "Reduced1", "Reduced2", "ReturnTypeKeyof", "Test1", "Test2"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/intersectionOfMixinConstructorTypeAndNonConstructorType.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["x"]
current  scope ScopeId(0): []
reference Mismatch:
previous reference ReferenceId(0): Some("x")
current  reference ReferenceId(0): None

tasks/coverage/typescript/tests/cases/compiler/intersectionOfTypeVariableHasApparentSignatures.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Component", "Props"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/intersectionReductionGenericStringLikeType.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["_1", "_2", "keyContaining1", "keyContaining2", "obj"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/intersectionSatisfiesConstraint.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["FirstInterface", "SecondInterface", "myFirstFunction", "mySecondFunction"]
current  scope ScopeId(0): ["myFirstFunction", "mySecondFunction"]
Bindings Mismatch:
previous scope ScopeId(3): ["T", "newParam", "param1"]
current  scope ScopeId(1): ["newParam", "param1"]
Bindings Mismatch:
previous scope ScopeId(4): ["T", "newParam"]
current  scope ScopeId(2): ["newParam"]

tasks/coverage/typescript/tests/cases/compiler/intersectionTypeInference1.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(3): ["OwnProps", "f"]
current  scope ScopeId(3): ["f"]

tasks/coverage/typescript/tests/cases/compiler/intersectionTypeNormalization.ts
semantic error: Semantic Collector failed after transform
Missing SymbolId: enums
Missing SymbolId: _enums
Missing ReferenceId: _enums
Missing ReferenceId: A
Missing ReferenceId: _enums
Missing ReferenceId: B
Missing ReferenceId: _enums
Missing ReferenceId: C
Missing ReferenceId: enums
Missing ReferenceId: enums

tasks/coverage/typescript/tests/cases/compiler/intersectionTypeWithLeadingOperator.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["A", "B", "C"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/intersectionType_useDefineForClassFields.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Baz", "Foo", "bar"]
current  scope ScopeId(0): ["Baz", "bar"]
Bindings Mismatch:
previous scope ScopeId(3): ["T", "_p"]
current  scope ScopeId(1): ["_p"]

tasks/coverage/typescript/tests/cases/compiler/intersectionWithConstructSignaturePrototypeResult.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["PersonPrototype", "PersonType"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/invalidThisEmitInContextualObjectLiteral.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["IDef", "TestController"]
current  scope ScopeId(0): ["TestController"]

tasks/coverage/typescript/tests/cases/compiler/ipromise2.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Windows", "p", "p2", "x"]
current  scope ScopeId(0): ["p", "p2", "x"]

tasks/coverage/typescript/tests/cases/compiler/ipromise3.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["IPromise3", "p1", "p2"]
current  scope ScopeId(0): ["p1", "p2"]

tasks/coverage/typescript/tests/cases/compiler/ipromise4.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Windows", "p"]
current  scope ScopeId(0): ["p"]

tasks/coverage/typescript/tests/cases/compiler/isolatedModulesConstEnum.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["E2"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/isolatedModulesDontElideReExportStar.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["T"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/isolatedModulesImportConstEnum.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(1): ["BAR", "Foo"]
current  scope ScopeId(1): ["Foo"]

tasks/coverage/typescript/tests/cases/compiler/isolatedModulesImportConstEnumTypeOnly.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(1): ["Bar", "Foo"]
current  scope ScopeId(1): ["Foo"]

tasks/coverage/typescript/tests/cases/compiler/isolatedModulesNonAmbientConstEnum.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(1): ["E", "X"]
current  scope ScopeId(1): ["E"]

tasks/coverage/typescript/tests/cases/compiler/isolatedModulesReExportAlias.ts
semantic error: `import lib = require(...);` is only supported when compiling modules to CommonJS.
Please consider using `import lib from '...';` alongside Typescript's --allowSyntheticDefaultImports option, or add @babel/plugin-transform-modules-commonjs to your Babel config.
`export = <value>;` is only supported when compiling modules to CommonJS.
Please consider using `export default <value>;`, or add @babel/plugin-transform-modules-commonjs to your Babel config.

tasks/coverage/typescript/tests/cases/compiler/isolatedModulesShadowGlobalTypeNotValue.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Date", "Event"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/isolatedModulesSketchyAliasLocalMerge.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["FC"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/isolatedModules_resolveJsonModule.ts
semantic error: `import lib = require(...);` is only supported when compiling modules to CommonJS.
Please consider using `import lib from '...';` alongside Typescript's --allowSyntheticDefaultImports option, or add @babel/plugin-transform-modules-commonjs to your Babel config.

tasks/coverage/typescript/tests/cases/compiler/isolatedModules_resolveJsonModule_strict_outDir_commonJs.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["j"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/jqueryInference.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["DoNothingAlias", "MyPromise", "p1", "p2"]
current  scope ScopeId(0): ["p2"]
reference Mismatch:
previous reference ReferenceId(14): Some("p1")
current  reference ReferenceId(1): None

tasks/coverage/typescript/tests/cases/compiler/jsFileClassSelfReferencedProperty.ts
semantic error: Cannot use export statement outside a module

tasks/coverage/typescript/tests/cases/compiler/jsFileCompilationRestParamJsDocFunction.ts
semantic error: Cannot use export statement outside a module

tasks/coverage/typescript/tests/cases/compiler/jsFileESModuleWithEnumTag.ts
semantic error: Cannot use export statement outside a module

tasks/coverage/typescript/tests/cases/compiler/jsdocAccessEnumType.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(1): ["A", "E"]
current  scope ScopeId(1): ["E"]

tasks/coverage/typescript/tests/cases/compiler/jsdocTypedefNoCrash.ts
semantic error: Cannot use export statement outside a module

tasks/coverage/typescript/tests/cases/compiler/jsonFileImportChecksCallCorrectlyTwice.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Foo", "data", "fn"]
current  scope ScopeId(0): ["data", "fn"]

tasks/coverage/typescript/tests/cases/compiler/jsxCallbackWithDestructuring.tsx
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Component", "MyComponent", "RouteProps", "_jsxFileName", "_reactJsxRuntime", "global"]
current  scope ScopeId(0): ["MyComponent", "_jsxFileName", "_reactJsxRuntime"]
Bindings Mismatch:
previous scope ScopeId(15): ["T"]
current  scope ScopeId(1): []

tasks/coverage/typescript/tests/cases/compiler/jsxChildrenSingleChildConfusableWithMultipleChildrenNoError.tsx
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["App", "Props", "React", "Tab", "TabLayout", "_jsxFileName"]
current  scope ScopeId(0): ["App", "React", "TabLayout", "_jsxFileName"]

tasks/coverage/typescript/tests/cases/compiler/jsxComplexSignatureHasApplicabilityError.tsx
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["ArrowRendererHandler", "ArrowRendererProps", "AutocompleteResult", "ClearRendererHandler", "ExtractValueType", "FilterOptionHandler", "FilterOptionsHandler", "FocusOptionHandler", "HandlerRendererResult", "InputRendererHandler", "IsOptionUniqueHandler", "IsValidNewOptionHandler", "LoadOptionsAsyncHandler", "LoadOptionsHandler", "LoadOptionsLegacyHandler", "MenuRendererHandler", "MenuRendererProps", "NewOptionCreatorHandler", "Omit", "OnBlurHandler", "OnChangeHandler", "OnChangeMultipleHandler", "OnChangeSingleHandler", "OnCloseHandler", "OnFocusHandler", "OnInputChangeHandler", "OnInputKeyDownHandler", "OnMenuScrollToBottomHandler", "OnNewOptionClickHandler", "OnOpenHandler", "OnValueClickHandler", "Option", "OptionComponentProps", "OptionComponentType", "OptionRendererHandler", "OptionValues", "Options", "Overwrite", "PromptTextCreatorHandler", "Props", "React", "ReactSelectProps", "ReactSingleSelectProps", "SelectValueHandler", "ShouldKeyDownEventCreateNewOptionHandler", "ValueComponentProps", "ValueComponentType", "ValueRendererHandler", "_jsxFileName", "createReactSingleSelect"]
current  scope ScopeId(0): ["React", "_jsxFileName", "createReactSingleSelect"]
Bindings Mismatch:
previous scope ScopeId(6): ["WrappedComponent", "WrappedProps"]
current  scope ScopeId(1): ["WrappedComponent"]

tasks/coverage/typescript/tests/cases/compiler/jsxContainsOnlyTriviaWhiteSpacesNotCountedAsChild.tsx
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["JSX", "NoticeList", "Props", "_jsxFileName", "_reactJsxRuntime"]
current  scope ScopeId(0): ["NoticeList", "_jsxFileName", "_reactJsxRuntime"]

tasks/coverage/typescript/tests/cases/compiler/jsxElementClassTooManyParams.tsx
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["ElemClass", "JSX", "_jsxFileName", "_reactJsxRuntime", "elem"]
current  scope ScopeId(0): ["ElemClass", "_jsxFileName", "_reactJsxRuntime", "elem"]
Bindings Mismatch:
previous scope ScopeId(9): ["T"]
current  scope ScopeId(1): []

tasks/coverage/typescript/tests/cases/compiler/jsxElementsAsIdentifierNames.tsx
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["A", "B", "JSX", "React", "_jsxFileName"]
current  scope ScopeId(0): ["A", "B", "_jsxFileName"]
reference Mismatch:
previous reference ReferenceId(1): Some("React")
current  reference ReferenceId(0): None
reference Mismatch:
previous reference ReferenceId(3): Some("React")
current  reference ReferenceId(2): None

tasks/coverage/typescript/tests/cases/compiler/jsxEmitAttributeWithPreserve.tsx
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["React", "_jsxFileName", "_reactJsxRuntime"]
current  scope ScopeId(0): ["_jsxFileName", "_reactJsxRuntime"]

tasks/coverage/typescript/tests/cases/compiler/jsxEmitWithAttributes.ts
semantic error: Semantic Collector failed after transform
Missing SymbolId: Element
Missing SymbolId: _Element
Missing ReferenceId: _Element
Missing ReferenceId: isElement
Missing ReferenceId: _Element
Missing ReferenceId: createElement
Missing ReferenceId: Element
Missing ReferenceId: Element

tasks/coverage/typescript/tests/cases/compiler/jsxEmptyExpressionNotCountedAsChild.tsx
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Props", "React", "Wrapper", "_jsxFileName", "_reactJsxRuntime", "element"]
current  scope ScopeId(0): ["Wrapper", "_jsxFileName", "_reactJsxRuntime", "element"]

tasks/coverage/typescript/tests/cases/compiler/jsxFactoryAndJsxFragmentFactory.tsx
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Frag", "_jsxFileName", "h"]
current  scope ScopeId(0): ["_jsxFileName"]

tasks/coverage/typescript/tests/cases/compiler/jsxFactoryAndJsxFragmentFactoryNull.tsx
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["_jsxFileName", "h"]
current  scope ScopeId(0): ["_jsxFileName"]

tasks/coverage/typescript/tests/cases/compiler/jsxFactoryIdentifier.ts
semantic error: Semantic Collector failed after transform
Missing SymbolId: Element
Missing SymbolId: _Element
Missing ReferenceId: _Element
Missing ReferenceId: isElement
Missing ReferenceId: _Element
Missing ReferenceId: createElement
Missing ReferenceId: Element
Missing ReferenceId: Element

tasks/coverage/typescript/tests/cases/compiler/jsxFactoryIdentifierAsParameter.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["AppComponent", "JSX", "_jsxFileName"]
current  scope ScopeId(0): ["AppComponent", "_jsxFileName"]

tasks/coverage/typescript/tests/cases/compiler/jsxFactoryQualifiedName.ts
semantic error: Semantic Collector failed after transform
Missing SymbolId: Element
Missing SymbolId: _Element
Missing ReferenceId: _Element
Missing ReferenceId: isElement
Missing ReferenceId: _Element
Missing ReferenceId: createElement
Missing ReferenceId: Element
Missing ReferenceId: Element

tasks/coverage/typescript/tests/cases/compiler/jsxFragmentFactoryNoUnusedLocals.tsx
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Counter", "CounterProps", "Fragment", "_jsxFileName", "createElement"]
current  scope ScopeId(0): ["Counter", "_jsxFileName"]

tasks/coverage/typescript/tests/cases/compiler/jsxGenericComponentWithSpreadingResultOfGenericFunction.tsx
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["_jsxFileName", "_reactJsxRuntime", "otherProps"]
current  scope ScopeId(0): ["_jsxFileName", "_reactJsxRuntime"]
reference Mismatch:
previous reference ReferenceId(13): Some("otherProps")
current  reference ReferenceId(4): None

tasks/coverage/typescript/tests/cases/compiler/jsxHasLiteralType.tsx
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["MyComponent", "Props", "React", "_jsxFileName", "m"]
current  scope ScopeId(0): ["MyComponent", "React", "_jsxFileName", "m"]
Bindings Mismatch:
previous scope ScopeId(2): ["P"]
current  scope ScopeId(1): []

tasks/coverage/typescript/tests/cases/compiler/jsxInExtendsClause.tsx
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Foo", "React", "_jsxFileName"]
current  scope ScopeId(0): ["Foo", "_jsxFileName"]
reference Mismatch:
previous reference ReferenceId(9): Some("React")
current  reference ReferenceId(2): None

tasks/coverage/typescript/tests/cases/compiler/jsxInferenceProducesLiteralAsExpected.tsx
semantic error: `import lib = require(...);` is only supported when compiling modules to CommonJS.
Please consider using `import lib from '...';` alongside Typescript's --allowSyntheticDefaultImports option, or add @babel/plugin-transform-modules-commonjs to your Babel config.

tasks/coverage/typescript/tests/cases/compiler/jsxIntrinsicElementsCompatability.tsx
semantic error: Bindings Mismatch:
previous scope ScopeId(1): ["T", "props"]
current  scope ScopeId(1): ["props"]
Bindings Mismatch:
previous scope ScopeId(2): ["T", "el"]
current  scope ScopeId(2): ["el"]

tasks/coverage/typescript/tests/cases/compiler/jsxIntrinsicElementsExtendsRecord.tsx
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["JSX", "_jsxFileName", "_reactJsxRuntime"]
current  scope ScopeId(0): ["_jsxFileName", "_reactJsxRuntime"]

tasks/coverage/typescript/tests/cases/compiler/jsxLibraryManagedAttributesUnusedGeneric.tsx
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Comp", "React", "_jsxFileName", "jsx"]
current  scope ScopeId(0): ["React", "_jsxFileName"]
reference Mismatch:
previous reference ReferenceId(6): Some("Comp")
current  reference ReferenceId(1): None

tasks/coverage/typescript/tests/cases/compiler/jsxMultilineAttributeValuesReact.tsx
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["React", "_jsxFileName", "a", "b", "c"]
current  scope ScopeId(0): ["_jsxFileName", "a", "b", "c"]
reference Mismatch:
previous reference ReferenceId(1): Some("React")
current  reference ReferenceId(0): None
reference Mismatch:
previous reference ReferenceId(3): Some("React")
current  reference ReferenceId(2): None
reference Mismatch:
previous reference ReferenceId(5): Some("React")
current  reference ReferenceId(4): None

tasks/coverage/typescript/tests/cases/compiler/jsxNamespaceImplicitImportJSXNamespaceFromPragmaPickedOverGlobalOne.tsx
semantic error: importSource cannot be set when runtime is classic.

tasks/coverage/typescript/tests/cases/compiler/jsxNamespaceReexports.tsx
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["JSX", "createElement"]
current  scope ScopeId(0): ["createElement"]

tasks/coverage/typescript/tests/cases/compiler/jsxNamespacedNameNotComparedToNonMatchingIndexSignature.tsx
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["_jsxFileName", "_reactJsxRuntime", "react", "tag"]
current  scope ScopeId(0): ["_jsxFileName", "_reactJsxRuntime", "tag"]

tasks/coverage/typescript/tests/cases/compiler/jsxPartialSpread.tsx
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["React", "Repro", "Select", "_jsxFileName", "_reactJsxRuntime"]
current  scope ScopeId(0): ["Repro", "Select", "_jsxFileName", "_reactJsxRuntime"]

tasks/coverage/typescript/tests/cases/compiler/jsxPropsAsIdentifierNames.tsx
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["JSX", "_jsxFileName", "_reactJsxRuntime"]
current  scope ScopeId(0): ["_jsxFileName", "_reactJsxRuntime"]

tasks/coverage/typescript/tests/cases/compiler/jsxSpreadFirstUnionNoErrors.tsx
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Info", "InfoProps", "React", "_jsxFileName", "a", "b", "c", "infoProps"]
current  scope ScopeId(0): ["Info", "React", "_jsxFileName", "a", "b", "c"]
reference Mismatch:
previous reference ReferenceId(7): Some("infoProps")
current  reference ReferenceId(14): None

tasks/coverage/typescript/tests/cases/compiler/keyRemappingKeyofResult.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Okay", "Oops", "Orig", "Remapped", "f", "g", "sym", "x"]
current  scope ScopeId(0): ["f", "g", "sym"]
Bindings Mismatch:
previous scope ScopeId(7): ["Okay", "Oops", "Orig", "Remapped", "T", "a", "x"]
current  scope ScopeId(1): ["a", "x"]
Bindings Mismatch:
previous scope ScopeId(14): ["DistributiveNonIndex", "NonIndex", "Okay", "Oops", "Orig", "Remapped", "T", "a", "x"]
current  scope ScopeId(2): ["a", "x"]
reference Mismatch:
previous reference ReferenceId(11): Some("x")
current  reference ReferenceId(1): None
reference Mismatch:
previous reference ReferenceId(13): Some("x")
current  reference ReferenceId(3): None

tasks/coverage/typescript/tests/cases/compiler/keyofGenericExtendingClassDoubleLayer.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["AutoModel", "Model", "ModelAttributes", "PersonModel"]
current  scope ScopeId(0): ["AutoModel", "Model", "PersonModel"]
Bindings Mismatch:
previous scope ScopeId(1): ["Attributes"]
current  scope ScopeId(1): []
Bindings Mismatch:
previous scope ScopeId(3): ["T"]
current  scope ScopeId(2): []

tasks/coverage/typescript/tests/cases/compiler/keyofObjectWithGlobalSymbolIncluded.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Q", "obj"]
current  scope ScopeId(0): ["obj"]

tasks/coverage/typescript/tests/cases/compiler/keywordInJsxIdentifier.tsx
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["React", "_jsxFileName"]
current  scope ScopeId(0): ["_jsxFileName"]
reference Mismatch:
previous reference ReferenceId(1): Some("React")
current  reference ReferenceId(0): None
reference Mismatch:
previous reference ReferenceId(3): Some("React")
current  reference ReferenceId(2): None
reference Mismatch:
previous reference ReferenceId(5): Some("React")
current  reference ReferenceId(4): None
reference Mismatch:
previous reference ReferenceId(7): Some("React")
current  reference ReferenceId(6): None

tasks/coverage/typescript/tests/cases/compiler/lambdaParameterWithTupleArgsHasCorrectAssignability.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["GenericClass", "GenericFunction", "MyTuple", "MyTupleItem", "consumeClass", "createClass"]
current  scope ScopeId(0): ["GenericClass", "consumeClass", "createClass"]
Bindings Mismatch:
previous scope ScopeId(4): ["T"]
current  scope ScopeId(1): []
Bindings Mismatch:
previous scope ScopeId(5): ["T", "f"]
current  scope ScopeId(2): ["f"]

tasks/coverage/typescript/tests/cases/compiler/largeTupleTypes.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["ExpandSmallerTuples", "GrowExp", "GrowExpRev", "Shift", "Tuple", "UnshiftTuple"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/letKeepNamesOfTopLevelItems.ts
semantic error: Semantic Collector failed after transform
Missing SymbolId: A
Missing SymbolId: _A
Missing ReferenceId: A
Missing ReferenceId: A

tasks/coverage/typescript/tests/cases/compiler/libdtsFix.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["HTMLElement"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/listFailure.ts
semantic error: Semantic Collector failed after transform
Missing SymbolId: Editor
Missing SymbolId: _Editor
Missing ReferenceId: _Editor
Missing ReferenceId: Buffer
Missing ReferenceId: _Editor
Missing ReferenceId: ListRemoveEntry
Missing ReferenceId: _Editor
Missing ReferenceId: ListMakeHead
Missing ReferenceId: _Editor
Missing ReferenceId: ListMakeEntry
Missing ReferenceId: _Editor
Missing ReferenceId: Line
Missing ReferenceId: Editor
Missing ReferenceId: Editor

tasks/coverage/typescript/tests/cases/compiler/literalWideningWithCompoundLikeAssignments.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["empty", "foo", "literalUnion", "numLiteral", "t1", "t10", "t2", "t3", "t4", "t5", "t6", "t7", "t8", "t9"]
current  scope ScopeId(0): ["empty", "foo", "t1", "t10", "t2", "t3", "t4", "t5", "t6", "t7", "t8", "t9"]
reference Mismatch:
previous reference ReferenceId(4): Some("numLiteral")
current  reference ReferenceId(4): None
reference Mismatch:
previous reference ReferenceId(8): Some("numLiteral")
current  reference ReferenceId(8): None
reference Mismatch:
previous reference ReferenceId(12): Some("numLiteral")
current  reference ReferenceId(12): None
reference Mismatch:
previous reference ReferenceId(16): Some("numLiteral")
current  reference ReferenceId(16): None
reference Mismatch:
previous reference ReferenceId(20): Some("numLiteral")
current  reference ReferenceId(20): None
reference Mismatch:
previous reference ReferenceId(24): Some("numLiteral")
current  reference ReferenceId(24): None
reference Mismatch:
previous reference ReferenceId(28): Some("numLiteral")
current  reference ReferenceId(28): None
reference Mismatch:
previous reference ReferenceId(32): Some("numLiteral")
current  reference ReferenceId(32): None
reference Mismatch:
previous reference ReferenceId(36): Some("numLiteral")
current  reference ReferenceId(36): None
reference Mismatch:
previous reference ReferenceId(40): Some("literalUnion")
current  reference ReferenceId(40): None

tasks/coverage/typescript/tests/cases/compiler/localAliasExportAssignment.ts
semantic error: `export = <value>;` is only supported when compiling modules to CommonJS.
Please consider using `export default <value>;`, or add @babel/plugin-transform-modules-commonjs to your Babel config.

tasks/coverage/typescript/tests/cases/compiler/localImportNameVsGlobalName.ts
semantic error: Semantic Collector failed after transform
Missing SymbolId: Keyboard
Missing SymbolId: _Keyboard
Missing ReferenceId: _Keyboard
Missing ReferenceId: Key
Missing ReferenceId: Keyboard
Missing ReferenceId: Keyboard
Missing SymbolId: App
Missing SymbolId: _App
Missing ReferenceId: _App
Missing ReferenceId: foo
Missing ReferenceId: App
Missing ReferenceId: App

tasks/coverage/typescript/tests/cases/compiler/localTypeParameterInferencePriority.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["ColumnSelectView1", "ColumnSelectView2", "ColumnSelectViewImp", "S", "Schema", "Table", "UnrollOnHover"]
current  scope ScopeId(0): ["ColumnSelectView1", "ColumnSelectView2", "ColumnSelectViewImp", "Table"]
Bindings Mismatch:
previous scope ScopeId(5): ["S"]
current  scope ScopeId(1): []
Bindings Mismatch:
previous scope ScopeId(6): ["C"]
current  scope ScopeId(2): []
Bindings Mismatch:
previous scope ScopeId(7): ["S"]
current  scope ScopeId(3): []

tasks/coverage/typescript/tests/cases/compiler/m7Bugs.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["A", "B", "C1", "C2", "ISomething", "s", "x", "y1", "y2", "y3"]
current  scope ScopeId(0): ["C1", "C2", "s", "x", "y1", "y2", "y3"]

tasks/coverage/typescript/tests/cases/compiler/mapGroupBy.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Employee", "basic", "byNonKey", "byRole", "chars", "employees"]
current  scope ScopeId(0): ["basic", "byNonKey", "byRole", "chars", "employees"]

tasks/coverage/typescript/tests/cases/compiler/mappedArrayTupleIntersections.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Box", "Boxify", "Hmm", "MustBeArray", "T1", "T2", "T3", "T4", "T5", "X"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/mappedToToIndexSignatureInference.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["E", "K", "V", "a", "fn", "x"]
current  scope ScopeId(0): ["E", "x"]
Bindings Mismatch:
previous scope ScopeId(3): ["A", "B", "E"]
current  scope ScopeId(1): ["E"]
reference Mismatch:
previous reference ReferenceId(2): Some("fn")
current  reference ReferenceId(0): None
reference Mismatch:
previous reference ReferenceId(3): Some("a")
current  reference ReferenceId(1): None

tasks/coverage/typescript/tests/cases/compiler/mappedTypeAndIndexSignatureRelation.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Bar", "Bar2", "Bar3", "Foo", "Identity", "Merge2", "Merge3", "Same", "T1", "T2"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/mappedTypeCircularReferenceInAccessor.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["FilteredKeys", "SerializablePartial", "User"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/mappedTypeContextualTypesApplied.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["TakeString"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/mappedTypeInferenceAliasSubstitution.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Field", "f", "g", "r1", "r2", "v"]
current  scope ScopeId(0): ["f", "g", "r1", "r2", "v"]
Bindings Mismatch:
previous scope ScopeId(3): ["A", "B", "R", "x"]
current  scope ScopeId(1): ["x"]
Bindings Mismatch:
previous scope ScopeId(5): ["A", "B", "R", "x"]
current  scope ScopeId(2): ["x"]

tasks/coverage/typescript/tests/cases/compiler/mappedTypeInferenceCircularity.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Block", "HTML", "h"]
current  scope ScopeId(0): []
reference Mismatch:
previous reference ReferenceId(4): Some("h")
current  reference ReferenceId(0): None
reference Mismatch:
previous reference ReferenceId(5): Some("h")
current  reference ReferenceId(1): None

tasks/coverage/typescript/tests/cases/compiler/mappedTypeMultiInference.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Style", "x"]
current  scope ScopeId(0): ["x"]

tasks/coverage/typescript/tests/cases/compiler/mappedTypeNestedGenericInstantiation.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Chainable", "square", "v"]
current  scope ScopeId(0): ["square", "v"]

tasks/coverage/typescript/tests/cases/compiler/mappedTypeOverArrayWithBareAnyRestCanBeUsedAsRestParam1.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Replace", "ReplaceParams1"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/mappedTypeParameterConstraint.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["MyMap", "foo"]
current  scope ScopeId(0): ["foo"]
Bindings Mismatch:
previous scope ScopeId(3): ["U", "arg"]
current  scope ScopeId(1): ["arg"]

tasks/coverage/typescript/tests/cases/compiler/mappedTypePartialConstraints.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["MyClass", "MyInterface", "MySubClass", "fn"]
current  scope ScopeId(0): ["MyClass", "MySubClass", "fn"]
Bindings Mismatch:
previous scope ScopeId(2): ["T"]
current  scope ScopeId(1): []

tasks/coverage/typescript/tests/cases/compiler/mappedTypePartialNonHomomorphicBaseConstraint.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Errors", "Model"]
current  scope ScopeId(0): ["Model"]
Bindings Mismatch:
previous scope ScopeId(3): ["D"]
current  scope ScopeId(1): []

tasks/coverage/typescript/tests/cases/compiler/mappedTypeRecursiveInference2.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["MorphTuple", "nestedTuple", "objectLiteral", "shallow", "validateDefinition", "validateMorph"]
current  scope ScopeId(0): ["nestedTuple", "objectLiteral", "shallow"]

tasks/coverage/typescript/tests/cases/compiler/mappedTypeTupleConstraintAssignability.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["AnyObject", "AnyTuple", "EnumValues", "Flags", "ISchema", "Maybe", "Values", "Writeable", "create"]
current  scope ScopeId(0): ["create"]
Bindings Mismatch:
previous scope ScopeId(16): ["T", "schemas"]
current  scope ScopeId(1): ["schemas"]

tasks/coverage/typescript/tests/cases/compiler/mappedTypeWithNameClauseAppliedToArrayType.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Mappy", "NotArray", "x"]
current  scope ScopeId(0): []
reference Mismatch:
previous reference ReferenceId(7): Some("x")
current  reference ReferenceId(1): None

tasks/coverage/typescript/tests/cases/compiler/matchingOfObjectLiteralConstraints.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(1): ["T", "U", "x", "z"]
current  scope ScopeId(1): ["x", "z"]

tasks/coverage/typescript/tests/cases/compiler/memberAccessMustUseModuleInstances.ts
semantic error: `import lib = require(...);` is only supported when compiling modules to CommonJS.
Please consider using `import lib from '...';` alongside Typescript's --allowSyntheticDefaultImports option, or add @babel/plugin-transform-modules-commonjs to your Babel config.

tasks/coverage/typescript/tests/cases/compiler/mergeMultipleInterfacesReexported.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["EventList", "p012", "t"]
current  scope ScopeId(0): ["t"]
reference Mismatch:
previous reference ReferenceId(1): Some("p012")
current  reference ReferenceId(0): None

tasks/coverage/typescript/tests/cases/compiler/mergedDeclarations1.ts
semantic error: Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript

tasks/coverage/typescript/tests/cases/compiler/mergedDeclarations4.ts
semantic error: Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript

tasks/coverage/typescript/tests/cases/compiler/mergedDeclarations5.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["A", "B"]
current  scope ScopeId(0): ["B"]

tasks/coverage/typescript/tests/cases/compiler/mergedDeclarations6.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["./a", "A", "B"]
current  scope ScopeId(0): ["A", "B"]

tasks/coverage/typescript/tests/cases/compiler/mergedEnumDeclarationCodeGen.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(1): ["E", "a", "b"]
current  scope ScopeId(1): ["E"]
Bindings Mismatch:
previous scope ScopeId(2): ["E", "c"]
current  scope ScopeId(2): ["E"]

tasks/coverage/typescript/tests/cases/compiler/mergedInstantiationAssignment.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(1): ["T"]
current  scope ScopeId(1): []
Bindings Mismatch:
previous scope ScopeId(3): ["T"]
current  scope ScopeId(3): []

tasks/coverage/typescript/tests/cases/compiler/mergedInterfaceFromMultipleFiles1.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["C", "I"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/mergedModuleDeclarationCodeGen.ts
semantic error: Semantic Collector failed after transform
Missing SymbolId: X
Missing SymbolId: _X
Missing SymbolId: Y
Missing SymbolId: _Y
Missing ReferenceId: Y
Missing ReferenceId: Y
Missing ReferenceId: _X
Missing ReferenceId: _X
Missing ReferenceId: X
Missing ReferenceId: X
Missing SymbolId: _X2
Missing SymbolId: Y
Missing SymbolId: _Y2
Missing ReferenceId: _Y2
Missing ReferenceId: B
Missing ReferenceId: Y
Missing ReferenceId: Y
Missing ReferenceId: _X2
Missing ReferenceId: _X2
Missing ReferenceId: X
Missing ReferenceId: X

tasks/coverage/typescript/tests/cases/compiler/mergedModuleDeclarationCodeGen2.ts
semantic error: Semantic Collector failed after transform
Missing SymbolId: my
Missing SymbolId: _my
Missing SymbolId: data
Missing SymbolId: _data
Missing SymbolId: foo
Missing SymbolId: _foo
Missing ReferenceId: _foo
Missing ReferenceId: buz
Missing ReferenceId: foo
Missing ReferenceId: foo
Missing ReferenceId: _data
Missing ReferenceId: _data
Missing ReferenceId: data
Missing ReferenceId: data
Missing ReferenceId: _my
Missing ReferenceId: _my
Missing ReferenceId: my
Missing ReferenceId: my
Missing SymbolId: _my2
Missing SymbolId: data
Missing SymbolId: _data2
Missing ReferenceId: data
Missing ReferenceId: data
Missing ReferenceId: _my2
Missing ReferenceId: _my2
Missing ReferenceId: my
Missing ReferenceId: my

tasks/coverage/typescript/tests/cases/compiler/mergedModuleDeclarationCodeGen3.ts
semantic error: Semantic Collector failed after transform
Missing SymbolId: my
Missing SymbolId: _my
Missing SymbolId: data
Missing SymbolId: _data
Missing ReferenceId: _data
Missing ReferenceId: buz
Missing ReferenceId: data
Missing ReferenceId: data
Missing ReferenceId: _my
Missing ReferenceId: _my
Missing ReferenceId: my
Missing ReferenceId: my
Missing SymbolId: _my2
Missing SymbolId: data
Missing SymbolId: _data2
Missing SymbolId: foo
Missing SymbolId: _foo
Missing ReferenceId: foo
Missing ReferenceId: foo
Missing ReferenceId: _data2
Missing ReferenceId: _data2
Missing ReferenceId: data
Missing ReferenceId: data
Missing ReferenceId: _my2
Missing ReferenceId: _my2
Missing ReferenceId: my
Missing ReferenceId: my

tasks/coverage/typescript/tests/cases/compiler/mergedModuleDeclarationCodeGen4.ts
semantic error: Semantic Collector failed after transform
Missing SymbolId: superContain
Missing SymbolId: _superContain
Missing SymbolId: contain
Missing SymbolId: _contain
Missing SymbolId: my
Missing SymbolId: _my
Missing SymbolId: buz
Missing SymbolId: _buz
Missing SymbolId: data
Missing SymbolId: _data
Missing ReferenceId: _data
Missing ReferenceId: foo
Missing ReferenceId: data
Missing ReferenceId: data
Missing ReferenceId: _buz
Missing ReferenceId: _buz
Missing ReferenceId: buz
Missing ReferenceId: buz
Missing ReferenceId: _my
Missing ReferenceId: _my
Missing ReferenceId: my
Missing ReferenceId: my
Missing ReferenceId: _contain
Missing ReferenceId: _contain
Missing SymbolId: _my2
Missing SymbolId: buz
Missing SymbolId: _buz2
Missing SymbolId: data
Missing SymbolId: _data2
Missing ReferenceId: _data2
Missing ReferenceId: bar
Missing ReferenceId: data
Missing ReferenceId: data
Missing ReferenceId: _buz2
Missing ReferenceId: _buz2
Missing ReferenceId: buz
Missing ReferenceId: buz
Missing ReferenceId: _my2
Missing ReferenceId: _my2
Missing ReferenceId: my
Missing ReferenceId: my
Missing ReferenceId: _contain
Missing ReferenceId: _contain
Missing ReferenceId: contain
Missing ReferenceId: contain
Missing ReferenceId: _superContain
Missing ReferenceId: _superContain
Missing ReferenceId: superContain
Missing ReferenceId: superContain

tasks/coverage/typescript/tests/cases/compiler/mergedModuleDeclarationCodeGen5.ts
semantic error: Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript
Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript
Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript
Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript

tasks/coverage/typescript/tests/cases/compiler/mergedModuleDeclarationWithSharedExportedVar.ts
semantic error: Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript

tasks/coverage/typescript/tests/cases/compiler/metadataOfClassFromAlias.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["ClassA", "SomeClass", "annotation"]
current  scope ScopeId(0): ["ClassA", "annotation"]

tasks/coverage/typescript/tests/cases/compiler/metadataOfClassFromAlias2.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["ClassA", "SomeClass", "annotation"]
current  scope ScopeId(0): ["ClassA", "annotation"]

tasks/coverage/typescript/tests/cases/compiler/metadataOfClassFromModule.ts
semantic error: Semantic Collector failed after transform
Missing SymbolId: MyModule
Missing SymbolId: _MyModule
Missing ReferenceId: _MyModule
Missing ReferenceId: inject
Missing ReferenceId: _MyModule
Missing ReferenceId: Leg
Missing ReferenceId: _MyModule
Missing ReferenceId: Person
Missing ReferenceId: MyModule
Missing ReferenceId: MyModule

tasks/coverage/typescript/tests/cases/compiler/metadataOfEventAlias.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Event"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/metadataOfUnion.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(4): ["A", "B", "C", "D", "E"]
current  scope ScopeId(4): ["E"]

tasks/coverage/typescript/tests/cases/compiler/metadataReferencedWithinFilteredUnion.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Class1", "Class2", "decorate"]
current  scope ScopeId(0): ["Class2", "decorate"]

tasks/coverage/typescript/tests/cases/compiler/methodContainingLocalFunction.ts
semantic error: Semantic Collector failed after transform
Missing SymbolId: M
Missing SymbolId: _M
Missing ReferenceId: _M
Missing ReferenceId: exhibitBug
Missing ReferenceId: M
Missing ReferenceId: M
Missing ReferenceId: E

tasks/coverage/typescript/tests/cases/compiler/missingSemicolonInModuleSpecifier.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["x"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/missingTypeArguments3.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["linq"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/mixedExports.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["A", "M", "M1"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/mixedTypeEnumComparison.ts
semantic error: Semantic Collector failed after transform
Missing ReferenceId: E2

tasks/coverage/typescript/tests/cases/compiler/mixinIntersectionIsValidbaseType.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["AMixin", "Constructor", "Initable", "Serializable"]
current  scope ScopeId(0): ["AMixin", "Serializable"]
Bindings Mismatch:
previous scope ScopeId(4): ["K", "LocalMixin", "ResultClass", "SuperClass"]
current  scope ScopeId(1): ["LocalMixin", "ResultClass", "SuperClass"]
Bindings Mismatch:
previous scope ScopeId(7): ["K", "SomeHowNotOkay", "SomeHowOkay", "SuperClass"]
current  scope ScopeId(4): ["SomeHowNotOkay", "SomeHowOkay", "SuperClass"]

tasks/coverage/typescript/tests/cases/compiler/mixinOverMappedTypeNoCrash.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["ClassInterface", "Constructor", "InstanceInterface", "cloneClass"]
current  scope ScopeId(0): ["cloneClass"]
Bindings Mismatch:
previous scope ScopeId(6): ["AnotherOriginalClass", "OriginalClass", "T"]
current  scope ScopeId(1): ["AnotherOriginalClass", "OriginalClass"]

tasks/coverage/typescript/tests/cases/compiler/mixingApparentTypeOverrides.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["A", "B", "C", "Constructor", "Tagged"]
current  scope ScopeId(0): ["A", "B", "C", "Tagged"]
Bindings Mismatch:
previous scope ScopeId(2): ["Base", "T"]
current  scope ScopeId(1): ["Base"]

tasks/coverage/typescript/tests/cases/compiler/mixingFunctionAndAmbientModule1.ts
semantic error: Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript
Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript
Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript
Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript
Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript
Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript

tasks/coverage/typescript/tests/cases/compiler/modFunctionCrash.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Q"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/modularizeLibrary_NoErrorDuplicateLibOptions1.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Baz", "console", "f", "gen", "gen2", "m", "o", "o1", "out", "p", "reg", "s", "str", "t"]
current  scope ScopeId(0): ["Baz", "f", "gen", "gen2", "m", "o", "o1", "out", "p", "reg", "s", "str", "t"]
reference Mismatch:
previous reference ReferenceId(19): Some("console")
current  reference ReferenceId(19): None

tasks/coverage/typescript/tests/cases/compiler/modularizeLibrary_NoErrorDuplicateLibOptions2.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Baz", "console", "f", "gen", "gen2", "m", "o", "o1", "out", "p", "reg", "s", "str", "t"]
current  scope ScopeId(0): ["Baz", "f", "gen", "gen2", "m", "o", "o1", "out", "p", "reg", "s", "str", "t"]
reference Mismatch:
previous reference ReferenceId(19): Some("console")
current  reference ReferenceId(19): None

tasks/coverage/typescript/tests/cases/compiler/modularizeLibrary_TargetES5UsingES6Lib.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Baz", "console", "f", "gen", "gen2", "m", "o", "o1", "out", "p", "reg", "s", "str", "t"]
current  scope ScopeId(0): ["Baz", "f", "gen", "gen2", "m", "o", "o1", "out", "p", "reg", "s", "str", "t"]
reference Mismatch:
previous reference ReferenceId(19): Some("console")
current  reference ReferenceId(19): None

tasks/coverage/typescript/tests/cases/compiler/moduleAliasAsFunctionArgument.ts
semantic error: `import lib = require(...);` is only supported when compiling modules to CommonJS.
Please consider using `import lib from '...';` alongside Typescript's --allowSyntheticDefaultImports option, or add @babel/plugin-transform-modules-commonjs to your Babel config.

tasks/coverage/typescript/tests/cases/compiler/moduleAliasInterface.ts
semantic error: Semantic Collector failed after transform
Missing SymbolId: _modes
Missing SymbolId: _modes2
Missing ReferenceId: _modes2
Missing ReferenceId: Mode
Missing ReferenceId: _modes
Missing ReferenceId: _modes
Missing SymbolId: editor
Missing SymbolId: _editor
Missing ReferenceId: editor
Missing ReferenceId: editor
Missing SymbolId: modesOuter
Missing SymbolId: editor2
Missing SymbolId: _editor2
Missing SymbolId: Foo
Missing SymbolId: _Foo
Missing ReferenceId: _Foo
Missing ReferenceId: Bar
Missing ReferenceId: Foo
Missing ReferenceId: Foo
Missing ReferenceId: editor2
Missing ReferenceId: editor2
Missing SymbolId: A1
Missing SymbolId: _A
Missing ReferenceId: _A
Missing ReferenceId: A1C1
Missing ReferenceId: A1
Missing ReferenceId: A1
Missing SymbolId: B1
Missing SymbolId: _B
Missing ReferenceId: B1
Missing ReferenceId: B1

tasks/coverage/typescript/tests/cases/compiler/moduleAndInterfaceSharingName.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["X", "z", "z2"]
current  scope ScopeId(0): ["z", "z2"]

tasks/coverage/typescript/tests/cases/compiler/moduleAndInterfaceSharingName3.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["X", "z", "z2"]
current  scope ScopeId(0): ["z", "z2"]

tasks/coverage/typescript/tests/cases/compiler/moduleAndInterfaceSharingName4.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["D3"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/moduleAugmentationDoesInterfaceMergeOfReexport.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Foo"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/moduleAugmentationDoesNamespaceEnumMergeOfReexport.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Root"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/moduleAugmentationDoesNamespaceMergeOfReexport.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Root"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/moduleAugmentationDuringSyntheticDefaultCheck.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["_moment", "moment", "moment-timezone"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/moduleAugmentationExtendAmbientModule1.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Observable", "observable"]
current  scope ScopeId(0): ["Observable"]

tasks/coverage/typescript/tests/cases/compiler/moduleAugmentationExtendFileModule1.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["./observable", "Observable"]
current  scope ScopeId(0): ["Observable"]

tasks/coverage/typescript/tests/cases/compiler/moduleAugmentationExtendFileModule2.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["./observable", "Observable"]
current  scope ScopeId(0): ["Observable"]

tasks/coverage/typescript/tests/cases/compiler/moduleAugmentationImportsAndExports4.ts
semantic error: Semantic Collector failed after transform
Missing SymbolId: I
Missing SymbolId: C

tasks/coverage/typescript/tests/cases/compiler/moduleAugmentationInAmbientModule2.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Observable", "x"]
current  scope ScopeId(0): ["x"]

tasks/coverage/typescript/tests/cases/compiler/moduleAugmentationInAmbientModule3.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Observable", "x"]
current  scope ScopeId(0): ["x"]

tasks/coverage/typescript/tests/cases/compiler/moduleAugmentationInAmbientModule4.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Observable", "x"]
current  scope ScopeId(0): ["x"]

tasks/coverage/typescript/tests/cases/compiler/moduleAugmentationNoNewNames.ts
semantic error: Missing initializer in destructuring declaration
Bindings Mismatch:
previous scope ScopeId(0): ["./observable", "Observable"]
current  scope ScopeId(0): ["Observable"]

tasks/coverage/typescript/tests/cases/compiler/moduleAugmentationOfAlias.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["I"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/moduleCodeGenTest3.ts
semantic error: Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript

tasks/coverage/typescript/tests/cases/compiler/moduleCodeGenTest5.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(7): ["A", "E1"]
current  scope ScopeId(7): ["E1"]
Bindings Mismatch:
previous scope ScopeId(8): ["B", "E2"]
current  scope ScopeId(8): ["E2"]

tasks/coverage/typescript/tests/cases/compiler/moduleCodegenTest4.ts
semantic error: Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript

tasks/coverage/typescript/tests/cases/compiler/moduleIdentifiers.ts
semantic error: Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript

tasks/coverage/typescript/tests/cases/compiler/moduleImportedForTypeArgumentPosition.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["M2C"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/moduleLocalImportNotIncorrectlyRedirected.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["ISpinButton"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/moduleMemberWithoutTypeAnnotation1.ts
semantic error: Semantic Collector failed after transform
Missing SymbolId: TypeScript
Missing SymbolId: _TypeScript
Missing SymbolId: Parser
Missing SymbolId: _Parser
Missing ReferenceId: Parser
Missing ReferenceId: Parser
Missing ReferenceId: _TypeScript
Missing ReferenceId: _TypeScript
Missing ReferenceId: TypeScript
Missing ReferenceId: TypeScript
Missing SymbolId: _TypeScript2
Missing ReferenceId: _TypeScript2
Missing ReferenceId: PositionedElement
Missing ReferenceId: _TypeScript2
Missing ReferenceId: PositionedToken
Missing ReferenceId: TypeScript
Missing ReferenceId: TypeScript
Missing SymbolId: _TypeScript3
Missing ReferenceId: _TypeScript3
Missing ReferenceId: SyntaxNode
Missing ReferenceId: TypeScript
Missing ReferenceId: TypeScript
Missing SymbolId: _TypeScript4
Missing SymbolId: Syntax
Missing SymbolId: _Syntax
Missing ReferenceId: _Syntax
Missing ReferenceId: childIndex
Missing ReferenceId: _Syntax
Missing ReferenceId: VariableWidthTokenWithTrailingTrivia
Missing ReferenceId: Syntax
Missing ReferenceId: Syntax
Missing ReferenceId: _TypeScript4
Missing ReferenceId: _TypeScript4
Missing ReferenceId: TypeScript
Missing ReferenceId: TypeScript

tasks/coverage/typescript/tests/cases/compiler/moduleMemberWithoutTypeAnnotation2.ts
semantic error: Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript

tasks/coverage/typescript/tests/cases/compiler/moduleMerge.ts
semantic error: Semantic Collector failed after transform
Missing SymbolId: A
Missing SymbolId: _A
Missing ReferenceId: A
Missing ReferenceId: A
Missing SymbolId: _A2
Missing ReferenceId: _A2
Missing ReferenceId: B
Missing ReferenceId: A
Missing ReferenceId: A

tasks/coverage/typescript/tests/cases/compiler/moduleNoEmit.ts
semantic error: Semantic Collector failed after transform
Missing SymbolId: Foo
Missing SymbolId: _Foo
Missing ReferenceId: Foo
Missing ReferenceId: Foo

tasks/coverage/typescript/tests/cases/compiler/moduleNodeImportRequireEmit.ts
semantic error: `import lib = require(...);` is only supported when compiling modules to CommonJS.
Please consider using `import lib from '...';` alongside Typescript's --allowSyntheticDefaultImports option, or add @babel/plugin-transform-modules-commonjs to your Babel config.

tasks/coverage/typescript/tests/cases/compiler/modulePreserve1.ts
semantic error: `export = <value>;` is only supported when compiling modules to CommonJS.
Please consider using `export default <value>;`, or add @babel/plugin-transform-modules-commonjs to your Babel config.

tasks/coverage/typescript/tests/cases/compiler/modulePreserve2.ts
semantic error: `import lib = require(...);` is only supported when compiling modules to CommonJS.
Please consider using `import lib from '...';` alongside Typescript's --allowSyntheticDefaultImports option, or add @babel/plugin-transform-modules-commonjs to your Babel config.

tasks/coverage/typescript/tests/cases/compiler/moduleReopenedTypeOtherBlock.ts
semantic error: Semantic Collector failed after transform
Missing SymbolId: M
Missing SymbolId: _M
Missing ReferenceId: _M
Missing ReferenceId: C1
Missing ReferenceId: M
Missing ReferenceId: M
Missing SymbolId: _M2
Missing ReferenceId: _M2
Missing ReferenceId: C2
Missing ReferenceId: M
Missing ReferenceId: M

tasks/coverage/typescript/tests/cases/compiler/moduleReopenedTypeSameBlock.ts
semantic error: Semantic Collector failed after transform
Missing SymbolId: M
Missing SymbolId: _M
Missing ReferenceId: _M
Missing ReferenceId: C1
Missing ReferenceId: M
Missing ReferenceId: M
Missing SymbolId: _M2
Missing ReferenceId: _M2
Missing ReferenceId: C2
Missing ReferenceId: M
Missing ReferenceId: M

tasks/coverage/typescript/tests/cases/compiler/moduleResolutionAsTypeReferenceDirective.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["a2"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/moduleResolutionAsTypeReferenceDirectiveAmbient.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["a2"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/moduleResolutionNoResolve.ts
semantic error: `import lib = require(...);` is only supported when compiling modules to CommonJS.
Please consider using `import lib from '...';` alongside Typescript's --allowSyntheticDefaultImports option, or add @babel/plugin-transform-modules-commonjs to your Babel config.

tasks/coverage/typescript/tests/cases/compiler/moduleResolutionPackageIdWithRelativeAndAbsolutePath.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["makeSharedOption", "t"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/moduleResolutionWithExtensions_notSupported3.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["jsx"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/moduleResolutionWithExtensions_unexpected2.ts
semantic error: Expected a semicolon or an implicit semicolon after a statement, but found none

tasks/coverage/typescript/tests/cases/compiler/moduleResolutionWithExtensions_withAmbientPresent.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["x"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/moduleResolutionWithExtensions_withPaths.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["relative", "relative2", "test", "test2"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/moduleResolutionWithRequire.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["foo", "require"]
current  scope ScopeId(0): ["foo"]
reference Mismatch:
previous reference ReferenceId(0): Some("require")
current  reference ReferenceId(0): None
reference Mismatch:
previous reference ReferenceId(1): Some("require")
current  reference ReferenceId(1): None

tasks/coverage/typescript/tests/cases/compiler/moduleResolutionWithRequireAndImport.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["a", "foo", "require"]
current  scope ScopeId(0): ["a", "foo"]
reference Mismatch:
previous reference ReferenceId(0): Some("require")
current  reference ReferenceId(0): None
reference Mismatch:
previous reference ReferenceId(1): Some("require")
current  reference ReferenceId(1): None

tasks/coverage/typescript/tests/cases/compiler/moduleResolutionWithSuffixes_empty.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["base"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/moduleResolutionWithSuffixes_notSpecified.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["base"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/moduleResolutionWithSuffixes_one.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["ios"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/moduleResolutionWithSuffixes_oneBlank.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["base"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/moduleResolutionWithSuffixes_one_dirModuleWithIndex.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["ios"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/moduleResolutionWithSuffixes_one_externalModule.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["ios"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/moduleResolutionWithSuffixes_one_externalModulePath.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["iosfoo"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/moduleResolutionWithSuffixes_one_externalModule_withPaths.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["ios", "ios2", "ios3"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/moduleResolutionWithSuffixes_one_externalTSModule.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["ios"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/moduleResolutionWithSuffixes_one_jsModule.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["ios"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/moduleResolutionWithSuffixes_threeLastIsBlank1.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["ios"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/moduleResolutionWithSuffixes_threeLastIsBlank2.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["native"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/moduleResolutionWithSuffixes_threeLastIsBlank3.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["base"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/moduleResolutionWithSymlinks.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["MyClass", "MyClass2", "x", "y"]
current  scope ScopeId(0): ["x", "y"]

tasks/coverage/typescript/tests/cases/compiler/moduleResolutionWithSymlinks_withOutDir.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["MyClass", "MyClass2", "x", "y"]
current  scope ScopeId(0): ["x", "y"]

tasks/coverage/typescript/tests/cases/compiler/moduleResolution_classicPrefersTs.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["a"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/moduleResolution_explicitNodeModulesImport.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["x"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/moduleResolution_explicitNodeModulesImport_implicitAny.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["y"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/moduleResolution_packageJson_notAtPackageRoot.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["x"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/moduleResolution_packageJson_notAtPackageRoot_fakeScopedPackage.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["x"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/moduleResolution_packageJson_scopedPackage.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["x"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/moduleResolution_packageJson_yesAtPackageRoot.ts
semantic error: Expected a semicolon or an implicit semicolon after a statement, but found none

tasks/coverage/typescript/tests/cases/compiler/moduleResolution_packageJson_yesAtPackageRoot_fakeScopedPackage.ts
semantic error: Expected a semicolon or an implicit semicolon after a statement, but found none

tasks/coverage/typescript/tests/cases/compiler/moduleResolution_packageJson_yesAtPackageRoot_mainFieldInSubDirectory.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["x"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/moduleResolution_relativeImportJsFile.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["b"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/moduleSameValueDuplicateExportedBindings2.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(1): ["Animals", "Cat", "Dog"]
current  scope ScopeId(1): ["Animals"]

tasks/coverage/typescript/tests/cases/compiler/moduleScopingBug.ts
semantic error: Semantic Collector failed after transform
Missing SymbolId: M
Missing SymbolId: _M
Missing SymbolId: X
Missing SymbolId: _X
Missing ReferenceId: X
Missing ReferenceId: X
Missing ReferenceId: M
Missing ReferenceId: M

tasks/coverage/typescript/tests/cases/compiler/moduleSharesNameWithImportDeclarationInsideIt.ts
semantic error: Semantic Collector failed after transform
Missing SymbolId: Z
Missing SymbolId: _Z
Missing SymbolId: M
Missing SymbolId: _M
Missing ReferenceId: _M
Missing ReferenceId: bar
Missing ReferenceId: M
Missing ReferenceId: M
Missing ReferenceId: _Z
Missing ReferenceId: _Z
Missing ReferenceId: Z
Missing ReferenceId: Z
Missing SymbolId: A
Missing SymbolId: _A
Missing SymbolId: M
Missing SymbolId: _M2
Missing ReferenceId: _M2
Missing ReferenceId: bar
Missing ReferenceId: M
Missing ReferenceId: M
Missing ReferenceId: _A
Missing ReferenceId: _A
Missing ReferenceId: A
Missing ReferenceId: A

tasks/coverage/typescript/tests/cases/compiler/moduleSharesNameWithImportDeclarationInsideIt2.ts
semantic error: Semantic Collector failed after transform
Missing SymbolId: Z
Missing SymbolId: _Z
Missing SymbolId: M
Missing SymbolId: _M
Missing ReferenceId: _M
Missing ReferenceId: bar
Missing ReferenceId: M
Missing ReferenceId: M
Missing ReferenceId: _Z
Missing ReferenceId: _Z
Missing ReferenceId: Z
Missing ReferenceId: Z
Missing SymbolId: A
Missing SymbolId: _A
Missing SymbolId: M
Missing SymbolId: _M2
Missing ReferenceId: _M2
Missing ReferenceId: bar
Missing ReferenceId: M
Missing ReferenceId: M
Missing ReferenceId: _A
Missing ReferenceId: _A
Missing ReferenceId: A
Missing ReferenceId: A

tasks/coverage/typescript/tests/cases/compiler/moduleSharesNameWithImportDeclarationInsideIt4.ts
semantic error: Semantic Collector failed after transform
Missing SymbolId: Z
Missing SymbolId: _Z
Missing SymbolId: M
Missing SymbolId: _M
Missing ReferenceId: _M
Missing ReferenceId: bar
Missing ReferenceId: M
Missing ReferenceId: M
Missing ReferenceId: _Z
Missing ReferenceId: _Z
Missing ReferenceId: Z
Missing ReferenceId: Z
Missing SymbolId: A
Missing SymbolId: _A
Missing SymbolId: M
Missing SymbolId: _M2
Missing ReferenceId: _M2
Missing ReferenceId: bar
Missing ReferenceId: M
Missing ReferenceId: M
Missing ReferenceId: _A
Missing ReferenceId: _A
Missing ReferenceId: A
Missing ReferenceId: A

tasks/coverage/typescript/tests/cases/compiler/moduleSharesNameWithImportDeclarationInsideIt6.ts
semantic error: Semantic Collector failed after transform
Missing SymbolId: Z
Missing SymbolId: _Z
Missing SymbolId: M
Missing SymbolId: _M
Missing ReferenceId: _M
Missing ReferenceId: bar
Missing ReferenceId: M
Missing ReferenceId: M
Missing ReferenceId: _Z
Missing ReferenceId: _Z
Missing ReferenceId: Z
Missing ReferenceId: Z
Missing SymbolId: A
Missing SymbolId: _A
Missing SymbolId: M
Missing SymbolId: _M2
Missing ReferenceId: _M2
Missing ReferenceId: bar
Missing ReferenceId: M
Missing ReferenceId: M
Missing ReferenceId: _A
Missing ReferenceId: _A
Missing ReferenceId: A
Missing ReferenceId: A

tasks/coverage/typescript/tests/cases/compiler/moduleUnassignedVariable.ts
semantic error: Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript
Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript

tasks/coverage/typescript/tests/cases/compiler/moduleVariables.ts
semantic error: Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript

tasks/coverage/typescript/tests/cases/compiler/moduleVisibilityTest1.ts
semantic error: Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript
Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript
Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript

tasks/coverage/typescript/tests/cases/compiler/moduleWithTryStatement1.ts
semantic error: Semantic Collector failed after transform
Missing SymbolId: M
Missing SymbolId: _M
Missing ReferenceId: M
Missing ReferenceId: M

tasks/coverage/typescript/tests/cases/compiler/module_augmentUninstantiatedModule.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["bar", "foo"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/module_augmentUninstantiatedModule2.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["ng"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/multiCallOverloads.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["ICallback", "f1", "f2", "load"]
current  scope ScopeId(0): ["f1", "f2", "load"]

tasks/coverage/typescript/tests/cases/compiler/multiExtendsSplitInterfaces2.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["A", "B", "I", "a", "b", "i", "i1", "i2"]
current  scope ScopeId(0): ["a", "b", "i", "i1", "i2"]

tasks/coverage/typescript/tests/cases/compiler/multiModuleClodule1.ts
semantic error: Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript

tasks/coverage/typescript/tests/cases/compiler/multiModuleFundule1.ts
semantic error: Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript

tasks/coverage/typescript/tests/cases/compiler/multiSignatureTypeInference.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["AllParams", "AllReturns", "Expected", "InferTwoOverloads", "JustOneSignature", "JustTheOtherSignature", "Overloads", "Params1", "Params2", "Params3", "Returns1", "Returns2", "Returns3", "ok1", "ok2", "ok3", "ok4", "ok5", "ok6"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/multipleInferenceContexts.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["ComponentOptionsProperties", "ConstructorOptions", "Data", "Instance", "Moon", "r2"]
current  scope ScopeId(0): ["r2"]
reference Mismatch:
previous reference ReferenceId(12): Some("Moon")
current  reference ReferenceId(0): None

tasks/coverage/typescript/tests/cases/compiler/mutrec.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["A", "B", "I1", "I2", "I3", "I4", "I5", "b", "f", "g", "i2", "i3", "i4"]
current  scope ScopeId(0): ["b", "f", "g", "i2", "i3", "i4"]

tasks/coverage/typescript/tests/cases/compiler/mutuallyRecursiveGenericBaseTypes1.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["A", "B", "b"]
current  scope ScopeId(0): ["b"]

tasks/coverage/typescript/tests/cases/compiler/mutuallyRecursiveGenericBaseTypes2.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(1): ["T"]
current  scope ScopeId(1): []
Bindings Mismatch:
previous scope ScopeId(3): ["T"]
current  scope ScopeId(3): []

tasks/coverage/typescript/tests/cases/compiler/mutuallyRecursiveInference.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(1): ["A"]
current  scope ScopeId(1): []
Bindings Mismatch:
previous scope ScopeId(2): ["RT"]
current  scope ScopeId(2): []

tasks/coverage/typescript/tests/cases/compiler/nameCollisionWithBlockScopedVariable1.ts
semantic error: Semantic Collector failed after transform
Missing SymbolId: M
Missing SymbolId: _M
Missing ReferenceId: _M
Missing ReferenceId: C
Missing ReferenceId: M
Missing ReferenceId: M
Missing SymbolId: _M2
Missing ReferenceId: M
Missing ReferenceId: M

tasks/coverage/typescript/tests/cases/compiler/namedFunctionExpressionInModule.ts
semantic error: Semantic Collector failed after transform
Missing SymbolId: Variables
Missing SymbolId: _Variables
Missing ReferenceId: Variables
Missing ReferenceId: Variables

tasks/coverage/typescript/tests/cases/compiler/namespaces1.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["X", "x", "x2"]
current  scope ScopeId(0): ["x", "x2"]

tasks/coverage/typescript/tests/cases/compiler/namespaces2.ts
semantic error: Semantic Collector failed after transform
Missing SymbolId: A
Missing SymbolId: _A
Missing SymbolId: B
Missing SymbolId: _B
Missing ReferenceId: _B
Missing ReferenceId: C
Missing ReferenceId: B
Missing ReferenceId: B
Missing ReferenceId: _A
Missing ReferenceId: _A
Missing ReferenceId: A
Missing ReferenceId: A

tasks/coverage/typescript/tests/cases/compiler/namespacesWithTypeAliasOnlyExportsMerge.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["A", "Q", "Q2", "Q3", "Q4", "try1", "try2", "try3", "try4"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/narrowByBooleanComparison.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["A", "ACTOR_TYPE", "Actor", "B", "C", "Entity", "MyUnion", "WebError", "isA", "isActor", "isFunction", "test1", "test2", "test3", "test4", "test5", "test6", "test7"]
current  scope ScopeId(0): ["ACTOR_TYPE", "WebError", "isA", "isActor", "isFunction", "test1", "test2", "test3", "test4", "test5", "test6", "test7"]

tasks/coverage/typescript/tests/cases/compiler/narrowByClauseExpressionInSwitchTrue1.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["A", "AorB", "B", "SomeType", "isA", "isB", "processInput", "test1", "test2", "x"]
current  scope ScopeId(0): ["isA", "isB", "processInput", "test1", "test2", "x"]

tasks/coverage/typescript/tests/cases/compiler/narrowByClauseExpressionInSwitchTrue2.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["f"]
current  scope ScopeId(0): []
reference Mismatch:
previous reference ReferenceId(0): Some("f")
current  reference ReferenceId(0): None
reference Mismatch:
previous reference ReferenceId(1): Some("f")
current  reference ReferenceId(1): None
reference Mismatch:
previous reference ReferenceId(2): Some("f")
current  reference ReferenceId(2): None
reference Mismatch:
previous reference ReferenceId(3): Some("f")
current  reference ReferenceId(3): None
reference Mismatch:
previous reference ReferenceId(4): Some("f")
current  reference ReferenceId(4): None
reference Mismatch:
previous reference ReferenceId(5): Some("f")
current  reference ReferenceId(5): None
reference Mismatch:
previous reference ReferenceId(6): Some("f")
current  reference ReferenceId(6): None
reference Mismatch:
previous reference ReferenceId(7): Some("f")
current  reference ReferenceId(7): None
reference Mismatch:
previous reference ReferenceId(8): Some("f")
current  reference ReferenceId(8): None
reference Mismatch:
previous reference ReferenceId(9): Some("f")
current  reference ReferenceId(9): None
reference Mismatch:
previous reference ReferenceId(10): Some("f")
current  reference ReferenceId(10): None

tasks/coverage/typescript/tests/cases/compiler/narrowByClauseExpressionInSwitchTrue4.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["f"]
current  scope ScopeId(0): []
reference Mismatch:
previous reference ReferenceId(0): Some("f")
current  reference ReferenceId(0): None
reference Mismatch:
previous reference ReferenceId(1): Some("f")
current  reference ReferenceId(1): None
reference Mismatch:
previous reference ReferenceId(2): Some("f")
current  reference ReferenceId(2): None
reference Mismatch:
previous reference ReferenceId(3): Some("f")
current  reference ReferenceId(3): None

tasks/coverage/typescript/tests/cases/compiler/narrowByClauseExpressionInSwitchTrue5.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["A", "All", "B", "C", "D", "E", "fn1ifelse", "fn1switch", "fn2ifelse", "fn2switch", "fn3switch"]
current  scope ScopeId(0): ["fn1ifelse", "fn1switch", "fn2ifelse", "fn2switch", "fn3switch"]

tasks/coverage/typescript/tests/cases/compiler/narrowByClauseExpressionInSwitchTrue9.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Foo", "IProps"]
current  scope ScopeId(0): ["Foo"]

tasks/coverage/typescript/tests/cases/compiler/narrowByInstanceof.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["A", "AA", "B", "BB", "C", "Car", "Person", "PersonMixin", "bar", "cls", "foo", "test"]
current  scope ScopeId(0): ["Car", "Person", "PersonMixin", "bar", "cls", "foo", "test"]

tasks/coverage/typescript/tests/cases/compiler/narrowByParenthesizedSwitchExpression.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Bar", "Base", "Foo", "getV", "v"]
current  scope ScopeId(0): ["getV", "v"]

tasks/coverage/typescript/tests/cases/compiler/narrowBySwitchDiscriminantUndefinedCase1.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["A", "assertUnreachable", "func", "func2"]
current  scope ScopeId(0): ["assertUnreachable", "func", "func2"]

tasks/coverage/typescript/tests/cases/compiler/narrowTypeByInstanceof.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["FileMatch", "FileMatchOrMatch", "Match", "elementA", "elementB"]
current  scope ScopeId(0): ["FileMatch", "Match", "elementA", "elementB"]

tasks/coverage/typescript/tests/cases/compiler/narrowedImports.ts
semantic error: `import lib = require(...);` is only supported when compiling modules to CommonJS.
Please consider using `import lib from '...';` alongside Typescript's --allowSyntheticDefaultImports option, or add @babel/plugin-transform-modules-commonjs to your Babel config.

tasks/coverage/typescript/tests/cases/compiler/narrowedImports_assumeInitialized.ts
semantic error: `import lib = require(...);` is only supported when compiling modules to CommonJS.
Please consider using `import lib from '...';` alongside Typescript's --allowSyntheticDefaultImports option, or add @babel/plugin-transform-modules-commonjs to your Babel config.

tasks/coverage/typescript/tests/cases/compiler/narrowingAssignmentReadonlyRespectsAssertion.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["MultiCaseFixture", "TestCase", "dataFunc", "subDataFunc", "testFunc"]
current  scope ScopeId(0): ["dataFunc", "subDataFunc", "testFunc"]
Bindings Mismatch:
previous scope ScopeId(4): ["T", "subFunc"]
current  scope ScopeId(2): ["subFunc"]

tasks/coverage/typescript/tests/cases/compiler/narrowingByDiscriminantInLoop.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["A", "B", "ConstantMemberType", "IDLMemberTypes", "IDLTypeDescription", "InterfaceType", "OperationMemberType", "f1", "f2", "foo", "insertInterface", "insertInterface2"]
current  scope ScopeId(0): ["f1", "f2", "foo", "insertInterface", "insertInterface2"]

tasks/coverage/typescript/tests/cases/compiler/narrowingByTypeofInSwitch.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Basic", "L", "R", "a1", "assertAll", "assertBoolean", "assertBooleanOrObject", "assertFunction", "assertNever", "assertNumber", "assertObject", "assertObjectOrNull", "assertString", "assertStringOrNumber", "assertSymbol", "assertUndefined", "exhaustiveChecks", "exhaustiveChecksGenerics", "fallThroughTest", "fallThroughTestWithTempalte", "keyofNarrowing", "keyofNarrowingWithTemplate", "multipleGeneric", "multipleGenericExhaustive", "multipleGenericFuse", "multipleGenericFuseWithBoth", "narrowingNarrows", "narrowingNarrows2", "switchOrdering", "switchOrderingWithDefault", "testAny", "testExtendsExplicitDefault", "testExtendsImplicitDefault", "testExtendsUnion", "testUnion", "testUnionExplicitDefault", "testUnionImplicitDefault", "testUnionWithTempalte", "unknownNarrowing"]
current  scope ScopeId(0): ["a1", "assertAll", "assertBoolean", "assertBooleanOrObject", "assertFunction", "assertNever", "assertNumber", "assertObject", "assertObjectOrNull", "assertString", "assertStringOrNumber", "assertSymbol", "assertUndefined", "exhaustiveChecks", "exhaustiveChecksGenerics", "fallThroughTest", "fallThroughTestWithTempalte", "keyofNarrowing", "keyofNarrowingWithTemplate", "multipleGeneric", "multipleGenericExhaustive", "multipleGenericFuse", "multipleGenericFuseWithBoth", "narrowingNarrows", "narrowingNarrows2", "switchOrdering", "switchOrderingWithDefault", "testAny", "testExtendsExplicitDefault", "testExtendsImplicitDefault", "testExtendsUnion", "testUnion", "testUnionExplicitDefault", "testUnionImplicitDefault", "testUnionWithTempalte", "unknownNarrowing"]
Bindings Mismatch:
previous scope ScopeId(16): ["T", "x"]
current  scope ScopeId(15): ["x"]
Bindings Mismatch:
previous scope ScopeId(25): ["T", "x"]
current  scope ScopeId(24): ["x"]
Bindings Mismatch:
previous scope ScopeId(27): ["T", "x"]
current  scope ScopeId(26): ["x"]
Bindings Mismatch:
previous scope ScopeId(33): ["T", "x"]
current  scope ScopeId(30): ["x"]
Bindings Mismatch:
previous scope ScopeId(35): ["X", "Y", "xy"]
current  scope ScopeId(32): ["xy"]
Bindings Mismatch:
previous scope ScopeId(37): ["X", "Y", "xy"]
current  scope ScopeId(34): ["xy"]
Bindings Mismatch:
previous scope ScopeId(39): ["X", "Y", "xy"]
current  scope ScopeId(36): ["xy"]
Bindings Mismatch:
previous scope ScopeId(50): ["S", "assertKeyofS", "k"]
current  scope ScopeId(47): ["assertKeyofS", "k"]
Bindings Mismatch:
previous scope ScopeId(62): ["S", "assertKeyofS", "k"]
current  scope ScopeId(58): ["assertKeyofS", "k"]
Bindings Mismatch:
previous scope ScopeId(66): ["X", "Y", "xy"]
current  scope ScopeId(61): ["xy"]

tasks/coverage/typescript/tests/cases/compiler/narrowingConstrainedTypeParameter.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Pet", "isPet", "speak"]
current  scope ScopeId(0): ["isPet", "speak"]
Bindings Mismatch:
previous scope ScopeId(3): ["TPet", "pet", "voice"]
current  scope ScopeId(2): ["pet", "voice"]

tasks/coverage/typescript/tests/cases/compiler/narrowingDestructuring.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["X", "Z", "farr", "func", "func2", "func3"]
current  scope ScopeId(0): ["farr", "func", "func2", "func3"]
Bindings Mismatch:
previous scope ScopeId(2): ["T", "value"]
current  scope ScopeId(1): ["value"]
Bindings Mismatch:
previous scope ScopeId(6): ["T", "value"]
current  scope ScopeId(4): ["value"]
Bindings Mismatch:
previous scope ScopeId(9): ["T", "t"]
current  scope ScopeId(7): ["t"]
Bindings Mismatch:
previous scope ScopeId(12): ["T", "head", "tail", "x"]
current  scope ScopeId(10): ["head", "tail", "x"]

tasks/coverage/typescript/tests/cases/compiler/narrowingIntersection.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Disjoint", "FooAndBaz", "TrivialIntersection", "test1", "test2", "want0"]
current  scope ScopeId(0): ["test1", "test2", "want0"]

tasks/coverage/typescript/tests/cases/compiler/narrowingNoInfer1.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["TaggedA", "TaggedB", "TaggedUnion", "m", "map", "something"]
current  scope ScopeId(0): ["m", "map", "something"]
Bindings Mismatch:
previous scope ScopeId(4): ["A", "B", "f", "items"]
current  scope ScopeId(1): ["f", "items"]

tasks/coverage/typescript/tests/cases/compiler/narrowingRestGenericCall.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Slugs", "call", "obj"]
current  scope ScopeId(0): ["call"]
Bindings Mismatch:
previous scope ScopeId(2): ["T", "cb", "obj"]
current  scope ScopeId(1): ["cb", "obj"]
reference Mismatch:
previous reference ReferenceId(6): Some("obj")
current  reference ReferenceId(3): None

tasks/coverage/typescript/tests/cases/compiler/narrowingTypeofDiscriminant.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["WrappedStringOr", "booleanBad", "booleanFixed", "f1", "f2", "numberOk"]
current  scope ScopeId(0): ["booleanBad", "booleanFixed", "f1", "f2", "numberOk"]

tasks/coverage/typescript/tests/cases/compiler/narrowingTypeofFunction.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["F", "Meta", "f1", "f2", "f3"]
current  scope ScopeId(0): ["f1", "f2", "f3"]
Bindings Mismatch:
previous scope ScopeId(6): ["T", "x"]
current  scope ScopeId(4): ["x"]

tasks/coverage/typescript/tests/cases/compiler/narrowingTypeofObject.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["F", "f1", "test"]
current  scope ScopeId(0): ["f1", "test"]

tasks/coverage/typescript/tests/cases/compiler/narrowingTypeofUndefined1.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["a"]
current  scope ScopeId(0): []
reference Mismatch:
previous reference ReferenceId(0): Some("a")
current  reference ReferenceId(0): None
reference Mismatch:
previous reference ReferenceId(1): Some("a")
current  reference ReferenceId(1): None
reference Mismatch:
previous reference ReferenceId(2): Some("a")
current  reference ReferenceId(2): None
reference Mismatch:
previous reference ReferenceId(3): Some("a")
current  reference ReferenceId(3): None
reference Mismatch:
previous reference ReferenceId(4): Some("a")
current  reference ReferenceId(4): None
reference Mismatch:
previous reference ReferenceId(5): Some("a")
current  reference ReferenceId(5): None

tasks/coverage/typescript/tests/cases/compiler/narrowingTypeofUndefined2.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(2): ["T", "arg"]
current  scope ScopeId(1): ["arg"]

tasks/coverage/typescript/tests/cases/compiler/narrowingUnionWithBang.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["BorkedType", "FixedType", "WorkingType", "borked", "fixed", "working"]
current  scope ScopeId(0): ["borked", "fixed", "working"]

tasks/coverage/typescript/tests/cases/compiler/nearbyIdenticalGenericLambdasAssignable.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["T", "TA", "TB", "TC", "TL", "fA", "fB", "fC"]
current  scope ScopeId(0): ["fB", "fC"]
Bindings Mismatch:
previous scope ScopeId(1): ["T"]
current  scope ScopeId(1): []
Bindings Mismatch:
previous scope ScopeId(2): ["T"]
current  scope ScopeId(2): []
reference Mismatch:
previous reference ReferenceId(12): Some("fA")
current  reference ReferenceId(1): None
reference Mismatch:
previous reference ReferenceId(18): Some("fA")
current  reference ReferenceId(7): None
reference Mismatch:
previous reference ReferenceId(24): Some("fA")
current  reference ReferenceId(13): None
reference Mismatch:
previous reference ReferenceId(30): Some("fA")
current  reference ReferenceId(19): None

tasks/coverage/typescript/tests/cases/compiler/nestedGenericConditionalTypeWithGenericImportType.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Name"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/nestedGenericSpreadInference.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(3): ["T", "x"]
current  scope ScopeId(1): ["x"]

tasks/coverage/typescript/tests/cases/compiler/nestedGenerics.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Foo", "f"]
current  scope ScopeId(0): ["f"]

tasks/coverage/typescript/tests/cases/compiler/nestedHomomorphicMappedTypesWithArrayConstraint1.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["MatchArguments", "SinonSpyCallApi"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/nestedInfinitelyExpandedRecursiveTypes.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["F", "G", "f", "g"]
current  scope ScopeId(0): ["f", "g"]

tasks/coverage/typescript/tests/cases/compiler/nestedLoopWithOnlyInnerLetCaptured.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["doSomething"]
current  scope ScopeId(0): []
reference Mismatch:
previous reference ReferenceId(1): Some("doSomething")
current  reference ReferenceId(1): None

tasks/coverage/typescript/tests/cases/compiler/nestedModulePrivateAccess.ts
semantic error: Semantic Collector failed after transform
Missing SymbolId: a
Missing SymbolId: _a
Missing SymbolId: b
Missing SymbolId: _b
Missing ReferenceId: b
Missing ReferenceId: b
Missing ReferenceId: a
Missing ReferenceId: a

tasks/coverage/typescript/tests/cases/compiler/nestedSelf.ts
semantic error: Semantic Collector failed after transform
Missing SymbolId: M
Missing SymbolId: _M
Missing ReferenceId: _M
Missing ReferenceId: C
Missing ReferenceId: M
Missing ReferenceId: M

tasks/coverage/typescript/tests/cases/compiler/nestedThisContainer.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Foo", "foo"]
current  scope ScopeId(0): ["foo"]

tasks/coverage/typescript/tests/cases/compiler/neverAsDiscriminantType.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Foo1", "Foo2", "GatewayEvents", "GatewayOpcode", "GatewayParams", "GatewayPayload", "GatewayPayloadStructure", "adaptSession", "assertMessage", "f1", "f2"]
current  scope ScopeId(0): ["GatewayOpcode", "adaptSession", "assertMessage", "f1", "f2"]
Bindings Mismatch:
previous scope ScopeId(14): ["DISPATCH", "GatewayOpcode", "HEARTBEAT", "HEARTBEAT_ACK", "HELLO", "IDENTIFY", "INVALID_SESSION", "PRESENCE_UPDATE", "RECONNECT", "REQUEST_GUILD_MEMBERS", "RESUME", "VOICE_STATE_UPDATE"]
current  scope ScopeId(5): ["GatewayOpcode"]

tasks/coverage/typescript/tests/cases/compiler/newArrays.ts
semantic error: Semantic Collector failed after transform
Missing SymbolId: M
Missing SymbolId: _M
Missing ReferenceId: M
Missing ReferenceId: M

tasks/coverage/typescript/tests/cases/compiler/newExpressionWithTypeParameterConstrainedToOuterTypeParameter.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["I", "i", "y"]
current  scope ScopeId(0): ["i", "y"]

tasks/coverage/typescript/tests/cases/compiler/newLineInTypeofInstantiation.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Example"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/noAsConstNameLookup.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["C", "Cleaner", "FeatureRunner", "Store"]
current  scope ScopeId(0): ["C", "FeatureRunner"]
Bindings Mismatch:
previous scope ScopeId(3): ["W"]
current  scope ScopeId(1): []
Bindings Mismatch:
previous scope ScopeId(7): ["T"]
current  scope ScopeId(5): []

tasks/coverage/typescript/tests/cases/compiler/noBundledEmitFromNodeModules.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["C"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/noCrashOnThisTypeUsage.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["IListenable", "ObservableValue", "notifyListeners"]
current  scope ScopeId(0): ["ObservableValue", "notifyListeners"]
Bindings Mismatch:
previous scope ScopeId(3): ["T", "change", "listenable"]
current  scope ScopeId(1): ["change", "listenable"]
Bindings Mismatch:
previous scope ScopeId(4): ["T"]
current  scope ScopeId(2): []

tasks/coverage/typescript/tests/cases/compiler/noCrashUMDMergedWithGlobalValue.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["SomeInterface", "value"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/noEmitHelpers2.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["A", "decorator"]
current  scope ScopeId(0): ["A"]
reference Mismatch:
previous reference ReferenceId(0): Some("decorator")
current  reference ReferenceId(0): None
reference Mismatch:
previous reference ReferenceId(1): Some("decorator")
current  reference ReferenceId(1): None

tasks/coverage/typescript/tests/cases/compiler/noImplicitAnyFunctionExpressionAssignment.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(1): ["T", "x"]
current  scope ScopeId(1): ["x"]
Bindings Mismatch:
previous scope ScopeId(2): ["T", "f", "x"]
current  scope ScopeId(2): ["f", "x"]

tasks/coverage/typescript/tests/cases/compiler/noIterationTypeErrorsInCFA.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["F", "doRemove"]
current  scope ScopeId(0): ["doRemove"]

tasks/coverage/typescript/tests/cases/compiler/noSubtypeReduction.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["F", "IA", "IAB"]
current  scope ScopeId(0): ["F"]

tasks/coverage/typescript/tests/cases/compiler/noUncheckedIndexAccess.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(1): ["Bacon", "Meat", "Sausage"]
current  scope ScopeId(1): ["Meat"]
Bindings Mismatch:
previous scope ScopeId(2): ["A", "a", "b", "c"]
current  scope ScopeId(2): ["A"]
Bindings Mismatch:
previous scope ScopeId(3): ["B", "x", "y", "z"]
current  scope ScopeId(3): ["B"]

tasks/coverage/typescript/tests/cases/compiler/noUsedBeforeDefinedErrorInTypeContext.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["IThing", "bar", "baz", "foo", "qwe"]
current  scope ScopeId(0): ["bar", "baz", "foo", "qwe"]

tasks/coverage/typescript/tests/cases/compiler/nodeResolution1.ts
semantic error: `import lib = require(...);` is only supported when compiling modules to CommonJS.
Please consider using `import lib from '...';` alongside Typescript's --allowSyntheticDefaultImports option, or add @babel/plugin-transform-modules-commonjs to your Babel config.

tasks/coverage/typescript/tests/cases/compiler/nodeResolution2.ts
semantic error: `import lib = require(...);` is only supported when compiling modules to CommonJS.
Please consider using `import lib from '...';` alongside Typescript's --allowSyntheticDefaultImports option, or add @babel/plugin-transform-modules-commonjs to your Babel config.

tasks/coverage/typescript/tests/cases/compiler/nodeResolution3.ts
semantic error: `import lib = require(...);` is only supported when compiling modules to CommonJS.
Please consider using `import lib from '...';` alongside Typescript's --allowSyntheticDefaultImports option, or add @babel/plugin-transform-modules-commonjs to your Babel config.

tasks/coverage/typescript/tests/cases/compiler/nodeResolution4.ts
semantic error: `import lib = require(...);` is only supported when compiling modules to CommonJS.
Please consider using `import lib from '...';` alongside Typescript's --allowSyntheticDefaultImports option, or add @babel/plugin-transform-modules-commonjs to your Babel config.

tasks/coverage/typescript/tests/cases/compiler/nodeResolution5.ts
semantic error: `import lib = require(...);` is only supported when compiling modules to CommonJS.
Please consider using `import lib from '...';` alongside Typescript's --allowSyntheticDefaultImports option, or add @babel/plugin-transform-modules-commonjs to your Babel config.

tasks/coverage/typescript/tests/cases/compiler/nodeResolution6.ts
semantic error: `import lib = require(...);` is only supported when compiling modules to CommonJS.
Please consider using `import lib from '...';` alongside Typescript's --allowSyntheticDefaultImports option, or add @babel/plugin-transform-modules-commonjs to your Babel config.

tasks/coverage/typescript/tests/cases/compiler/nodeResolution7.ts
semantic error: `import lib = require(...);` is only supported when compiling modules to CommonJS.
Please consider using `import lib from '...';` alongside Typescript's --allowSyntheticDefaultImports option, or add @babel/plugin-transform-modules-commonjs to your Babel config.

tasks/coverage/typescript/tests/cases/compiler/nodeResolution8.ts
semantic error: `import lib = require(...);` is only supported when compiling modules to CommonJS.
Please consider using `import lib from '...';` alongside Typescript's --allowSyntheticDefaultImports option, or add @babel/plugin-transform-modules-commonjs to your Babel config.

tasks/coverage/typescript/tests/cases/compiler/nonConflictingRecursiveBaseTypeMembers.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["A", "B", "C"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/nonContextuallyTypedLogicalOr.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Contextual", "Ellement", "c", "e"]
current  scope ScopeId(0): ["c", "e"]

tasks/coverage/typescript/tests/cases/compiler/nonGenericClassExtendingGenericClassWithAny.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(1): ["T"]
current  scope ScopeId(1): []

tasks/coverage/typescript/tests/cases/compiler/nonInferrableTypePropagation1.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Box", "Op", "Thing", "result1", "result2", "thing"]
current  scope ScopeId(0): ["result1", "result2"]
reference Mismatch:
previous reference ReferenceId(34): Some("thing")
current  reference ReferenceId(1): None
reference Mismatch:
previous reference ReferenceId(42): Some("thing")
current  reference ReferenceId(9): None

tasks/coverage/typescript/tests/cases/compiler/nonInferrableTypePropagation2.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["A", "B", "Either", "Left", "Predicate", "Refinement", "Right", "es", "filter", "x"]
current  scope ScopeId(0): ["x"]
reference Mismatch:
previous reference ReferenceId(42): Some("es")
current  reference ReferenceId(1): None
reference Mismatch:
previous reference ReferenceId(43): Some("filter")
current  reference ReferenceId(2): None

tasks/coverage/typescript/tests/cases/compiler/nonInferrableTypePropagation3.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Callback", "make", "usersOverAge"]
current  scope ScopeId(0): ["make", "usersOverAge"]

tasks/coverage/typescript/tests/cases/compiler/nonNullMappedType.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(1): ["A", "p0", "p1", "v"]
current  scope ScopeId(1): ["p0", "p1", "v"]

tasks/coverage/typescript/tests/cases/compiler/nonNullParameterExtendingStringAssignableToString.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(2): ["T", "U", "one", "three", "two"]
current  scope ScopeId(1): ["one", "three", "two"]

tasks/coverage/typescript/tests/cases/compiler/nonNullReferenceMatching.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Component", "ComponentProps", "ElementRef", "ThumbProps"]
current  scope ScopeId(0): ["Component"]

tasks/coverage/typescript/tests/cases/compiler/nonNullableAndObjectIntersections.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["NonNullableNew", "NonNullableOld", "T0", "T1", "T2", "T3", "T4", "T6", "TestNew", "TestOld"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/nonNullableReduction.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Transform1", "Transform2", "f1", "f2", "test"]
current  scope ScopeId(0): ["f1", "f2", "test"]
Bindings Mismatch:
previous scope ScopeId(5): ["T", "f1", "f2"]
current  scope ScopeId(1): ["f1", "f2"]
Bindings Mismatch:
previous scope ScopeId(6): ["T", "x", "z"]
current  scope ScopeId(2): ["x", "z"]
Bindings Mismatch:
previous scope ScopeId(8): ["T", "U", "x", "z"]
current  scope ScopeId(3): ["x", "z"]

tasks/coverage/typescript/tests/cases/compiler/nonNullableReductionNonStrict.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Transform1", "Transform2", "f1", "f2", "test"]
current  scope ScopeId(0): ["f1", "f2", "test"]
Bindings Mismatch:
previous scope ScopeId(5): ["T", "f1", "f2"]
current  scope ScopeId(1): ["f1", "f2"]
Bindings Mismatch:
previous scope ScopeId(6): ["T", "x", "z"]
current  scope ScopeId(2): ["x", "z"]
Bindings Mismatch:
previous scope ScopeId(8): ["T", "U", "x", "z"]
current  scope ScopeId(3): ["x", "z"]

tasks/coverage/typescript/tests/cases/compiler/nonNullableWithNullableGenericIndexedAccessArg.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Ordering", "Query", "QueryHandler", "StateNodesConfig", "StateSchema"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/nondistributiveConditionalTypeInfer.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["A", "E", "R", "Sync", "_A", "_E", "_R"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/nongenericConditionalNotPartiallyComputed.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["A"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/nongenericPartialInstantiationsRelatedInBothDirections.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Foo", "ObjectContaining", "cafoo", "cfoo"]
current  scope ScopeId(0): []
reference Mismatch:
previous reference ReferenceId(7): Some("cfoo")
current  reference ReferenceId(0): None
reference Mismatch:
previous reference ReferenceId(8): Some("cafoo")
current  reference ReferenceId(1): None
reference Mismatch:
previous reference ReferenceId(9): Some("cafoo")
current  reference ReferenceId(2): None
reference Mismatch:
previous reference ReferenceId(10): Some("cfoo")
current  reference ReferenceId(3): None

tasks/coverage/typescript/tests/cases/compiler/nounusedTypeParameterConstraint.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["IEventSourcedEntity"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/numberAssignableToEnumInsideUnion.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(1): ["A", "B", "E"]
current  scope ScopeId(1): ["E"]

tasks/coverage/typescript/tests/cases/compiler/objectAssignLikeNonUnionResult.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Explode", "ExtractRawComponent", "Interface", "data1", "defaultValue", "e1", "t1"]
current  scope ScopeId(0): ["data1", "defaultValue"]

tasks/coverage/typescript/tests/cases/compiler/objectCreate.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["a", "e", "n", "o", "t", "u", "union"]
current  scope ScopeId(0): ["a", "e", "n", "o", "t", "u"]
reference Mismatch:
previous reference ReferenceId(3): Some("union")
current  reference ReferenceId(3): None
reference Mismatch:
previous reference ReferenceId(9): Some("union")
current  reference ReferenceId(9): None

tasks/coverage/typescript/tests/cases/compiler/objectCreate2.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["a", "e", "n", "o", "t", "u", "union"]
current  scope ScopeId(0): ["a", "e", "n", "o", "t", "u"]
reference Mismatch:
previous reference ReferenceId(3): Some("union")
current  reference ReferenceId(3): None
reference Mismatch:
previous reference ReferenceId(9): Some("union")
current  reference ReferenceId(9): None

tasks/coverage/typescript/tests/cases/compiler/objectIndexer.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Callback", "Emitter", "IMap"]
current  scope ScopeId(0): ["Emitter"]

tasks/coverage/typescript/tests/cases/compiler/objectInstantiationFromUnionSpread.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Fail", "Item", "Success", "f1", "f2"]
current  scope ScopeId(0): ["f1", "f2"]
Bindings Mismatch:
previous scope ScopeId(7): ["T", "a"]
current  scope ScopeId(4): ["a"]

tasks/coverage/typescript/tests/cases/compiler/objectLiteralArraySpecialization.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["MyArrayWrapper", "thing"]
current  scope ScopeId(0): ["thing"]

tasks/coverage/typescript/tests/cases/compiler/objectLiteralEnumPropertyNames.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Nums", "Strs", "TestNums", "TestStrs", "a", "an", "b", "bn", "m", "n", "um", "un", "ux", "uz", "x", "y", "z"]
current  scope ScopeId(0): ["Nums", "Strs", "a", "an", "b", "bn", "m", "n", "um", "un", "ux", "uz", "x", "y", "z"]
Bindings Mismatch:
previous scope ScopeId(1): ["A", "B", "Strs"]
current  scope ScopeId(1): ["Strs"]
Bindings Mismatch:
previous scope ScopeId(4): ["A", "B", "Nums"]
current  scope ScopeId(2): ["Nums"]

tasks/coverage/typescript/tests/cases/compiler/objectLiteralIndexerNoImplicitAny.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["I", "x"]
current  scope ScopeId(0): ["x"]

tasks/coverage/typescript/tests/cases/compiler/objectLiteralIndexers.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["A", "B", "a", "b", "c", "o1"]
current  scope ScopeId(0): ["a", "b", "c", "o1"]

tasks/coverage/typescript/tests/cases/compiler/objectMembersOnTypes.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["AAA", "I", "c", "i", "x"]
current  scope ScopeId(0): ["AAA", "c", "i", "x"]

tasks/coverage/typescript/tests/cases/compiler/objectRestBindingContextualInference.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["ImageHolder", "SetupImageRefs", "SetupImages", "TestInterface", "prepare", "rest", "test"]
current  scope ScopeId(0): ["prepare", "rest"]
reference Mismatch:
previous reference ReferenceId(14): Some("test")
current  reference ReferenceId(1): None

tasks/coverage/typescript/tests/cases/compiler/observableInferenceCanBeMade.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["ObservableInput", "ObservedValueOf", "Subscribable", "asObservable"]
current  scope ScopeId(0): ["asObservable"]

tasks/coverage/typescript/tests/cases/compiler/optionalAccessorsInInterface1.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["MyPropertyDescriptor", "MyPropertyDescriptor2"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/optionalChainWithInstantiationExpression2.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["A", "a", "b"]
current  scope ScopeId(0): []
reference Mismatch:
previous reference ReferenceId(2): Some("a")
current  reference ReferenceId(0): None
reference Mismatch:
previous reference ReferenceId(4): Some("a")
current  reference ReferenceId(1): None

tasks/coverage/typescript/tests/cases/compiler/optionalParameterRetainsNull.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Bar", "a"]
current  scope ScopeId(0): ["a"]
Bindings Mismatch:
previous scope ScopeId(2): ["K", "a", "b"]
current  scope ScopeId(1): ["a", "b"]

tasks/coverage/typescript/tests/cases/compiler/optionalTupleElementsAndUndefined.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Foo", "Test", "UnNullify", "v"]
current  scope ScopeId(0): ["v"]

tasks/coverage/typescript/tests/cases/compiler/overloadBindingAcrossDeclarationBoundaries.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["A", "Opt1", "Opt2", "Opt3", "Opt4", "a", "a1"]
current  scope ScopeId(0): ["a", "a1"]

tasks/coverage/typescript/tests/cases/compiler/overloadBindingAcrossDeclarationBoundaries2.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["A", "Opt1", "Opt2", "Opt3", "Opt4"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/overloadCrash.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["I1", "I2", "I3", "i3"]
current  scope ScopeId(0): ["i3"]

tasks/coverage/typescript/tests/cases/compiler/overloadEquivalenceWithStatics.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(1): ["T"]
current  scope ScopeId(1): []
Bindings Mismatch:
previous scope ScopeId(4): ["S", "v"]
current  scope ScopeId(2): ["v"]

tasks/coverage/typescript/tests/cases/compiler/overloadGenericFunctionWithRestArgs.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(1): ["V"]
current  scope ScopeId(1): []
Bindings Mismatch:
previous scope ScopeId(2): ["U"]
current  scope ScopeId(2): []
Bindings Mismatch:
previous scope ScopeId(4): ["T", "v_args"]
current  scope ScopeId(3): ["v_args"]

tasks/coverage/typescript/tests/cases/compiler/overloadOnConstConstraintChecks1.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Base", "D", "Derived1", "Derived2", "Derived3", "MyDoc"]
current  scope ScopeId(0): ["Base", "D", "Derived1", "Derived2", "Derived3"]

tasks/coverage/typescript/tests/cases/compiler/overloadOnConstInBaseWithBadImplementationInDerived.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["C", "I"]
current  scope ScopeId(0): ["C"]

tasks/coverage/typescript/tests/cases/compiler/overloadOnConstInObjectLiteralImplementingAnInterface.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["I", "i2"]
current  scope ScopeId(0): ["i2"]

tasks/coverage/typescript/tests/cases/compiler/overloadOnConstInheritance1.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Base", "Deriver"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/overloadOnConstInheritance3.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Base", "Deriver"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/overloadOnConstInheritance4.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["C", "I"]
current  scope ScopeId(0): ["C"]

tasks/coverage/typescript/tests/cases/compiler/overloadOnGenericArity.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Test"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/overloadOnGenericClassAndNonGenericClass.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(4): ["T"]
current  scope ScopeId(4): []

tasks/coverage/typescript/tests/cases/compiler/overloadResolutionOverNonCTLambdas.ts
semantic error: Semantic Collector failed after transform
Missing SymbolId: Bugs
Missing SymbolId: _Bugs
Missing ReferenceId: Bugs
Missing ReferenceId: Bugs

tasks/coverage/typescript/tests/cases/compiler/overloadResolutionOverNonCTObjectLit.ts
semantic error: Semantic Collector failed after transform
Missing SymbolId: Bugs
Missing SymbolId: _Bugs
Missing ReferenceId: Bugs
Missing ReferenceId: Bugs

tasks/coverage/typescript/tests/cases/compiler/overloadRet.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["I"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/overloadReturnTypes.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Accessor", "IFace", "attr"]
current  scope ScopeId(0): ["Accessor", "attr"]

tasks/coverage/typescript/tests/cases/compiler/overloadedConstructorFixesInferencesAppropriately.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["AsyncLoader", "AsyncLoaderProps", "Box", "ErrorResult", "load"]
current  scope ScopeId(0): ["AsyncLoader", "load"]
Bindings Mismatch:
previous scope ScopeId(4): ["TResult"]
current  scope ScopeId(1): []

tasks/coverage/typescript/tests/cases/compiler/overloadedStaticMethodSpecialization.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(1): ["T"]
current  scope ScopeId(1): []
Bindings Mismatch:
previous scope ScopeId(4): ["S", "v"]
current  scope ScopeId(2): ["v"]

tasks/coverage/typescript/tests/cases/compiler/overrideBaseIntersectionMethod.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Constructor", "Foo", "Point", "WithLocation"]
current  scope ScopeId(0): ["Foo", "Point", "WithLocation"]
Bindings Mismatch:
previous scope ScopeId(2): ["Base", "T"]
current  scope ScopeId(1): ["Base"]

tasks/coverage/typescript/tests/cases/compiler/parameterReferenceInInitializer1.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["C", "Y", "fn"]
current  scope ScopeId(0): ["C", "fn"]
Bindings Mismatch:
previous scope ScopeId(1): ["a", "set", "y"]
current  scope ScopeId(1): ["set", "y"]

tasks/coverage/typescript/tests/cases/compiler/parseArrowFunctionWithFunctionReturnType.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(1): ["T"]
current  scope ScopeId(1): []

tasks/coverage/typescript/tests/cases/compiler/parseEntityNameWithReservedWord.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(1): ["Bool", "false"]
current  scope ScopeId(1): ["Bool"]

tasks/coverage/typescript/tests/cases/compiler/parseGenericArrowRatherThanLeftShift.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Bar", "T", "a", "b", "foo"]
current  scope ScopeId(0): ["b", "foo"]
Bindings Mismatch:
previous scope ScopeId(2): ["T", "_x"]
current  scope ScopeId(1): ["_x"]

tasks/coverage/typescript/tests/cases/compiler/parseJsxExtends1.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Foo", "React", "_jsxFileName"]
current  scope ScopeId(0): ["Foo", "_jsxFileName"]
reference Mismatch:
previous reference ReferenceId(1): Some("React")
current  reference ReferenceId(0): None

tasks/coverage/typescript/tests/cases/compiler/parseShortform.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["I"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/partialOfLargeAPIIsAbleToBeWorkedWith.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["MyAPI", "PartialNull", "keys", "obj", "obj2"]
current  scope ScopeId(0): ["obj", "obj2"]
reference Mismatch:
previous reference ReferenceId(3): Some("keys")
current  reference ReferenceId(0): None
reference Mismatch:
previous reference ReferenceId(11): Some("keys")
current  reference ReferenceId(3): None

tasks/coverage/typescript/tests/cases/compiler/partialTypeNarrowedToByTypeGuard.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Obj", "PartialUser", "User", "getUserName", "isUser"]
current  scope ScopeId(0): ["getUserName", "isUser"]

tasks/coverage/typescript/tests/cases/compiler/partiallyDiscriminantedUnions.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["A1", "A2", "AB", "B", "Circle", "Shape", "Shapes", "Square", "ab", "fail", "isShape"]
current  scope ScopeId(0): ["Circle", "Square", "ab", "fail", "isShape"]

tasks/coverage/typescript/tests/cases/compiler/pathMappingBasedModuleResolution8_classic.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["x"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/pathMappingBasedModuleResolution8_node.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["x"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/pathMappingBasedModuleResolution_rootImport_aliasWithRoot.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["bar", "foo"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/pathMappingBasedModuleResolution_rootImport_aliasWithRoot_differentRootTypes.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["bar1", "bar2", "bar3", "bar4", "bar5", "bar6", "bar7", "bar8", "bar9", "foo1", "foo2", "foo3", "foo4", "foo5", "foo6", "foo7", "foo8", "foo9"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/pathMappingBasedModuleResolution_rootImport_aliasWithRoot_multipleAliases.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["bar", "foo"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/pathMappingBasedModuleResolution_rootImport_aliasWithRoot_realRootFile.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["bar", "foo"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/pathMappingBasedModuleResolution_rootImport_noAliasWithRoot.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["bar", "foo"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/pathMappingBasedModuleResolution_rootImport_noAliasWithRoot_realRootFile.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["bar", "foo"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/pathMappingBasedModuleResolution_withExtension.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["bar", "foo"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/pathMappingBasedModuleResolution_withExtensionInName.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["x", "y"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/pathMappingBasedModuleResolution_withExtension_MapedToNodeModules.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["foobar"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/pathMappingInheritedBaseUrl.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["p1"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/pathMappingWithoutBaseUrl1.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["p1"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/pathMappingWithoutBaseUrl2.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["p1"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/performanceComparisonOfStructurallyIdenticalInterfacesWithGenericSignatures.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["A", "B", "InterfaceA", "InterfaceB", "ThenArg"]
current  scope ScopeId(0): ["A", "B"]
Bindings Mismatch:
previous scope ScopeId(31): ["T"]
current  scope ScopeId(1): []
Bindings Mismatch:
previous scope ScopeId(33): ["D", "callback"]
current  scope ScopeId(3): ["callback"]
Bindings Mismatch:
previous scope ScopeId(34): ["R"]
current  scope ScopeId(4): []
Bindings Mismatch:
previous scope ScopeId(35): ["R"]
current  scope ScopeId(5): []
Bindings Mismatch:
previous scope ScopeId(36): ["R"]
current  scope ScopeId(6): []
Bindings Mismatch:
previous scope ScopeId(37): ["R"]
current  scope ScopeId(7): []
Bindings Mismatch:
previous scope ScopeId(38): ["R"]
current  scope ScopeId(8): []
Bindings Mismatch:
previous scope ScopeId(39): ["R"]
current  scope ScopeId(9): []
Bindings Mismatch:
previous scope ScopeId(40): ["R"]
current  scope ScopeId(10): []
Bindings Mismatch:
previous scope ScopeId(41): ["R"]
current  scope ScopeId(11): []
Bindings Mismatch:
previous scope ScopeId(42): ["R"]
current  scope ScopeId(12): []
Bindings Mismatch:
previous scope ScopeId(43): ["R"]
current  scope ScopeId(13): []
Bindings Mismatch:
previous scope ScopeId(44): ["R"]
current  scope ScopeId(14): []
Bindings Mismatch:
previous scope ScopeId(45): ["T"]
current  scope ScopeId(15): []

tasks/coverage/typescript/tests/cases/compiler/preserveConstEnums.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(1): ["E", "Value", "Value2"]
current  scope ScopeId(1): ["E"]

tasks/coverage/typescript/tests/cases/compiler/prespecializedGenericMembers1.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Cat", "CatBag", "IKitty", "cat", "catBag", "catThing"]
current  scope ScopeId(0): ["Cat", "CatBag", "cat", "catBag", "catThing"]
Bindings Mismatch:
previous scope ScopeId(2): ["CatType"]
current  scope ScopeId(1): []

tasks/coverage/typescript/tests/cases/compiler/primitiveTypeAsmoduleName.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["string"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/privacyClass.ts
semantic error: Semantic Collector failed after transform
Missing SymbolId: m1
Missing SymbolId: _m
Missing ReferenceId: _m
Missing ReferenceId: m1_c_public
Missing ReferenceId: _m
Missing ReferenceId: m1_C3_public
Missing ReferenceId: _m
Missing ReferenceId: m1_C4_public
Missing ReferenceId: _m
Missing ReferenceId: m1_C7_public
Missing ReferenceId: _m
Missing ReferenceId: m1_C8_public
Missing ReferenceId: _m
Missing ReferenceId: m1_C11_public
Missing ReferenceId: _m
Missing ReferenceId: m1_C12_public
Missing ReferenceId: m1
Missing ReferenceId: m1
Missing SymbolId: m2
Missing SymbolId: _m2
Missing ReferenceId: _m2
Missing ReferenceId: m2_c_public
Missing ReferenceId: _m2
Missing ReferenceId: m2_C3_public
Missing ReferenceId: _m2
Missing ReferenceId: m2_C4_public
Missing ReferenceId: _m2
Missing ReferenceId: m2_C7_public
Missing ReferenceId: _m2
Missing ReferenceId: m2_C8_public
Missing ReferenceId: _m2
Missing ReferenceId: m2_C11_public
Missing ReferenceId: _m2
Missing ReferenceId: m2_C12_public
Missing ReferenceId: m2
Missing ReferenceId: m2

tasks/coverage/typescript/tests/cases/compiler/privacyFunc.ts
semantic error: Semantic Collector failed after transform
Missing SymbolId: m1
Missing SymbolId: _m
Missing ReferenceId: _m
Missing ReferenceId: C1_public
Missing ReferenceId: _m
Missing ReferenceId: C3_public
Missing ReferenceId: _m
Missing ReferenceId: C5_public
Missing ReferenceId: _m
Missing ReferenceId: C7_public
Missing ReferenceId: _m
Missing ReferenceId: f2_public
Missing ReferenceId: _m
Missing ReferenceId: f4_public
Missing ReferenceId: _m
Missing ReferenceId: f6_public
Missing ReferenceId: _m
Missing ReferenceId: f8_public
Missing ReferenceId: _m
Missing ReferenceId: f10_public
Missing ReferenceId: _m
Missing ReferenceId: f12_public
Missing ReferenceId: m1
Missing ReferenceId: m1

tasks/coverage/typescript/tests/cases/compiler/privacyGetter.ts
semantic error: Semantic Collector failed after transform
Missing SymbolId: m1
Missing SymbolId: _m
Missing ReferenceId: _m
Missing ReferenceId: C1_public
Missing ReferenceId: _m
Missing ReferenceId: C3_public
Missing ReferenceId: m1
Missing ReferenceId: m1
Missing SymbolId: m2
Missing SymbolId: _m2
Missing ReferenceId: _m2
Missing ReferenceId: m2_C1_public
Missing ReferenceId: _m2
Missing ReferenceId: m2_C3_public
Missing ReferenceId: m2
Missing ReferenceId: m2

tasks/coverage/typescript/tests/cases/compiler/privacyGloClass.ts
semantic error: Semantic Collector failed after transform
Missing SymbolId: m1
Missing SymbolId: _m
Missing ReferenceId: _m
Missing ReferenceId: m1_c_public
Missing ReferenceId: _m
Missing ReferenceId: m1_C3_public
Missing ReferenceId: _m
Missing ReferenceId: m1_C4_public
Missing ReferenceId: _m
Missing ReferenceId: m1_C7_public
Missing ReferenceId: _m
Missing ReferenceId: m1_C8_public
Missing ReferenceId: _m
Missing ReferenceId: m1_C11_public
Missing ReferenceId: _m
Missing ReferenceId: m1_C12_public
Missing ReferenceId: m1
Missing ReferenceId: m1

tasks/coverage/typescript/tests/cases/compiler/privacyGloFunc.ts
semantic error: Semantic Collector failed after transform
Missing SymbolId: m1
Missing SymbolId: _m
Missing ReferenceId: _m
Missing ReferenceId: C1_public
Missing ReferenceId: _m
Missing ReferenceId: C3_public
Missing ReferenceId: _m
Missing ReferenceId: C5_public
Missing ReferenceId: _m
Missing ReferenceId: C7_public
Missing ReferenceId: _m
Missing ReferenceId: f2_public
Missing ReferenceId: _m
Missing ReferenceId: f4_public
Missing ReferenceId: _m
Missing ReferenceId: f6_public
Missing ReferenceId: _m
Missing ReferenceId: f8_public
Missing ReferenceId: _m
Missing ReferenceId: f10_public
Missing ReferenceId: _m
Missing ReferenceId: f12_public
Missing ReferenceId: m1
Missing ReferenceId: m1
Missing SymbolId: m2
Missing SymbolId: _m2
Missing ReferenceId: _m2
Missing ReferenceId: m2_C1_public
Missing ReferenceId: _m2
Missing ReferenceId: m2_C3_public
Missing ReferenceId: _m2
Missing ReferenceId: m2_C5_public
Missing ReferenceId: _m2
Missing ReferenceId: m2_C7_public
Missing ReferenceId: _m2
Missing ReferenceId: f2_public
Missing ReferenceId: _m2
Missing ReferenceId: f4_public
Missing ReferenceId: _m2
Missing ReferenceId: f6_public
Missing ReferenceId: _m2
Missing ReferenceId: f8_public
Missing ReferenceId: _m2
Missing ReferenceId: f10_public
Missing ReferenceId: _m2
Missing ReferenceId: f12_public
Missing ReferenceId: m2
Missing ReferenceId: m2

tasks/coverage/typescript/tests/cases/compiler/privacyGloGetter.ts
semantic error: Semantic Collector failed after transform
Missing SymbolId: m1
Missing SymbolId: _m
Missing ReferenceId: _m
Missing ReferenceId: C1_public
Missing ReferenceId: _m
Missing ReferenceId: C3_public
Missing ReferenceId: m1
Missing ReferenceId: m1

tasks/coverage/typescript/tests/cases/compiler/privacyGloInterface.ts
semantic error: Semantic Collector failed after transform
Missing SymbolId: m1
Missing SymbolId: _m
Missing ReferenceId: _m
Missing ReferenceId: C1_public
Missing ReferenceId: m1
Missing ReferenceId: m1

tasks/coverage/typescript/tests/cases/compiler/privacyGloVar.ts
semantic error: Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript
Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript
Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript
Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript
Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript
Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript

tasks/coverage/typescript/tests/cases/compiler/privacyInterface.ts
semantic error: Semantic Collector failed after transform
Missing SymbolId: m1
Missing SymbolId: _m
Missing ReferenceId: _m
Missing ReferenceId: C1_public
Missing ReferenceId: m1
Missing ReferenceId: m1
Missing SymbolId: m2
Missing SymbolId: _m2
Missing ReferenceId: _m2
Missing ReferenceId: C1_public
Missing ReferenceId: m2
Missing ReferenceId: m2

tasks/coverage/typescript/tests/cases/compiler/privacyTypeParameterOfFunction.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["privateClass", "privateClassWithWithPrivateTypeParameters", "privateClassWithWithPublicTypeParameters", "privateClassWithWithPublicTypeParametersWithoutExtends", "privateFunctionWithPrivateTypeParameters", "privateFunctionWithPublicTypeParameters", "privateFunctionWithPublicTypeParametersWithoutExtends", "privateInterfaceWithPrivateTypeParameters", "privateInterfaceWithPublicTypeParameters", "privateInterfaceWithPublicTypeParametersWithoutExtends", "publicClass", "publicClassWithWithPrivateTypeParameters", "publicClassWithWithPublicTypeParameters", "publicClassWithWithPublicTypeParametersWithoutExtends", "publicFunctionWithPrivateTypeParameters", "publicFunctionWithPublicTypeParameters", "publicFunctionWithPublicTypeParametersWithoutExtends", "publicInterfaceWithPrivateTypeParameters", "publicInterfaceWithPublicTypeParameters", "publicInterfaceWithPublicTypeParametersWithoutExtends"]
current  scope ScopeId(0): ["privateClass", "privateClassWithWithPrivateTypeParameters", "privateClassWithWithPublicTypeParameters", "privateClassWithWithPublicTypeParametersWithoutExtends", "privateFunctionWithPrivateTypeParameters", "privateFunctionWithPublicTypeParameters", "privateFunctionWithPublicTypeParametersWithoutExtends", "publicClass", "publicClassWithWithPrivateTypeParameters", "publicClassWithWithPublicTypeParameters", "publicClassWithWithPublicTypeParametersWithoutExtends", "publicFunctionWithPrivateTypeParameters", "publicFunctionWithPublicTypeParameters", "publicFunctionWithPublicTypeParametersWithoutExtends"]
Bindings Mismatch:
previous scope ScopeId(16): ["T"]
current  scope ScopeId(4): []
Bindings Mismatch:
previous scope ScopeId(17): ["T"]
current  scope ScopeId(5): []
Bindings Mismatch:
previous scope ScopeId(18): ["T"]
current  scope ScopeId(6): []
Bindings Mismatch:
previous scope ScopeId(19): ["T"]
current  scope ScopeId(7): []
Bindings Mismatch:
previous scope ScopeId(21): ["T"]
current  scope ScopeId(9): []
Bindings Mismatch:
previous scope ScopeId(22): ["T"]
current  scope ScopeId(10): []
Bindings Mismatch:
previous scope ScopeId(23): ["T"]
current  scope ScopeId(11): []
Bindings Mismatch:
previous scope ScopeId(24): ["T"]
current  scope ScopeId(12): []
Bindings Mismatch:
previous scope ScopeId(26): ["T"]
current  scope ScopeId(14): []
Bindings Mismatch:
previous scope ScopeId(27): ["T"]
current  scope ScopeId(15): []
Bindings Mismatch:
previous scope ScopeId(28): ["T"]
current  scope ScopeId(16): []
Bindings Mismatch:
previous scope ScopeId(29): ["T"]
current  scope ScopeId(17): []
Bindings Mismatch:
previous scope ScopeId(31): ["T"]
current  scope ScopeId(19): []
Bindings Mismatch:
previous scope ScopeId(32): ["T"]
current  scope ScopeId(20): []
Bindings Mismatch:
previous scope ScopeId(33): ["T"]
current  scope ScopeId(21): []
Bindings Mismatch:
previous scope ScopeId(34): ["T"]
current  scope ScopeId(22): []
Bindings Mismatch:
previous scope ScopeId(35): ["T"]
current  scope ScopeId(23): []
Bindings Mismatch:
previous scope ScopeId(36): ["T"]
current  scope ScopeId(24): []
Bindings Mismatch:
previous scope ScopeId(37): ["T"]
current  scope ScopeId(25): []
Bindings Mismatch:
previous scope ScopeId(38): ["T"]
current  scope ScopeId(26): []
Bindings Mismatch:
previous scope ScopeId(46): ["T"]
current  scope ScopeId(28): []
Bindings Mismatch:
previous scope ScopeId(47): ["T"]
current  scope ScopeId(29): []
Bindings Mismatch:
previous scope ScopeId(48): ["T"]
current  scope ScopeId(30): []
Bindings Mismatch:
previous scope ScopeId(49): ["T"]
current  scope ScopeId(31): []
Bindings Mismatch:
previous scope ScopeId(51): ["T"]
current  scope ScopeId(33): []
Bindings Mismatch:
previous scope ScopeId(52): ["T"]
current  scope ScopeId(34): []
Bindings Mismatch:
previous scope ScopeId(53): ["T"]
current  scope ScopeId(35): []
Bindings Mismatch:
previous scope ScopeId(54): ["T"]
current  scope ScopeId(36): []
Bindings Mismatch:
previous scope ScopeId(55): ["T"]
current  scope ScopeId(37): []
Bindings Mismatch:
previous scope ScopeId(56): ["T"]
current  scope ScopeId(38): []

tasks/coverage/typescript/tests/cases/compiler/privacyTypeParametersOfClass.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(3): ["T"]
current  scope ScopeId(3): []
Bindings Mismatch:
previous scope ScopeId(5): ["T"]
current  scope ScopeId(5): []
Bindings Mismatch:
previous scope ScopeId(7): ["T"]
current  scope ScopeId(7): []
Bindings Mismatch:
previous scope ScopeId(9): ["T"]
current  scope ScopeId(9): []
Bindings Mismatch:
previous scope ScopeId(11): ["T"]
current  scope ScopeId(11): []
Bindings Mismatch:
previous scope ScopeId(13): ["T"]
current  scope ScopeId(13): []

tasks/coverage/typescript/tests/cases/compiler/privacyTypeParametersOfInterface.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["privateClass", "privateClassT", "privateInterfaceWithPrivateTypeParameters", "privateInterfaceWithPublicTypeParameters", "privateInterfaceWithPublicTypeParametersWithoutExtends", "publicClass", "publicClassT", "publicInterfaceWithPrivateTypeParameters", "publicInterfaceWithPublicTypeParameters", "publicInterfaceWithPublicTypeParametersWithoutExtends"]
current  scope ScopeId(0): ["privateClass", "privateClassT", "publicClass", "publicClassT"]
Bindings Mismatch:
previous scope ScopeId(3): ["T"]
current  scope ScopeId(3): []
Bindings Mismatch:
previous scope ScopeId(4): ["T"]
current  scope ScopeId(4): []

tasks/coverage/typescript/tests/cases/compiler/privacyVar.ts
semantic error: Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript
Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript
Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript
Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript
Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript
Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript
Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript
Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript
Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript
Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript
Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript
Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript

tasks/coverage/typescript/tests/cases/compiler/privateInstanceVisibility.ts
semantic error: Semantic Collector failed after transform
Missing SymbolId: Test
Missing SymbolId: _Test
Missing ReferenceId: _Test
Missing ReferenceId: Example
Missing ReferenceId: Test
Missing ReferenceId: Test

tasks/coverage/typescript/tests/cases/compiler/privatePropertyInUnion.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["ISyncableObject", "SyncableObject", "SyncableRef", "Type", "__ValueDescriptorType"]
current  scope ScopeId(0): ["SyncableObject"]

tasks/coverage/typescript/tests/cases/compiler/privatePropertyUsingObjectType.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["FilterManager", "IFilterProvider"]
current  scope ScopeId(0): ["FilterManager"]

tasks/coverage/typescript/tests/cases/compiler/promiseChaining.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(1): ["T"]
current  scope ScopeId(1): []
Bindings Mismatch:
previous scope ScopeId(3): ["S", "cb", "result", "z"]
current  scope ScopeId(3): ["cb", "result", "z"]

tasks/coverage/typescript/tests/cases/compiler/promiseDefinitionTest.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(1): ["T"]
current  scope ScopeId(1): []

tasks/coverage/typescript/tests/cases/compiler/promiseTest.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Promise", "p", "p2", "x"]
current  scope ScopeId(0): ["p", "p2", "x"]

tasks/coverage/typescript/tests/cases/compiler/promiseType.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["A", "B", "C", "D", "E", "F", "G", "H", "I", "p", "p00", "p01", "p10", "p11", "p12", "p13", "p14", "p15", "p16", "p17", "p18", "p19", "p20", "p21", "p22", "p23", "p24", "p25", "p26", "p27", "p28", "p29", "p30", "p31", "p32", "p33", "p34", "p35", "p36", "p37", "p38", "p39", "p40", "p41", "p42", "p43", "p44", "p45", "p46", "p47", "p48", "p49", "p50", "p51", "p52", "p53", "p54", "p55", "p56", "p57", "p58", "p59", "p60", "p61", "p62", "p63", "p64", "p65", "p66", "p67", "p68", "p69", "p70", "p71", "p72", "p73", "p74", "p75", "p76", "p77", "p78", "p79", "p80", "p81", "p82", "p83", "p84", "p85", "p86", "p87", "p88", "p89", "p90", "p91", "p92", "p93", "p94", "p95", "p96", "p97", "p98", "p99", "pa0", "pa1", "pa2", "pa3", "pa4", "pa5", "pa6", "pa7", "pa8", "pa9", "pb0", "pb1", "pb2", "pb3", "pb4", "pb5", "pb6", "pb7", "pb8", "pb9", "pc0", "pc1", "pc2", "pc3", "pc4", "pc5", "pc6", "pc7", "pc8", "pc9", "x"]
current  scope ScopeId(0): ["A", "B", "C", "D", "E", "F", "G", "H", "I", "p00", "p01", "p10", "p11", "p12", "p13", "p14", "p15", "p16", "p17", "p18", "p19", "p20", "p21", "p22", "p23", "p24", "p25", "p26", "p27", "p28", "p29", "p30", "p31", "p32", "p33", "p34", "p35", "p36", "p37", "p38", "p39", "p40", "p41", "p42", "p43", "p44", "p45", "p46", "p47", "p48", "p49", "p50", "p51", "p52", "p53", "p54", "p55", "p56", "p57", "p58", "p59", "p60", "p61", "p62", "p63", "p64", "p65", "p66", "p67", "p68", "p69", "p70", "p71", "p72", "p73", "p74", "p75", "p76", "p77", "p78", "p79", "p80", "p81", "p82", "p83", "p84", "p85", "p86", "p87", "p88", "p89", "p90", "p91", "p92", "p93", "p94", "p95", "p96", "p97", "p98", "p99", "pa0", "pa1", "pa2", "pa3", "pa4", "pa5", "pa6", "pa7", "pa8", "pa9", "pb0", "pb1", "pb2", "pb3", "pb4", "pb5", "pb6", "pb7", "pb8", "pb9", "pc0", "pc1", "pc2", "pc3", "pc4", "pc5", "pc6", "pc7", "pc8", "pc9"]
reference Mismatch:
previous reference ReferenceId(1): Some("p")
current  reference ReferenceId(0): None
reference Mismatch:
previous reference ReferenceId(3): Some("p")
current  reference ReferenceId(2): None
reference Mismatch:
previous reference ReferenceId(4): Some("p")
current  reference ReferenceId(3): None
reference Mismatch:
previous reference ReferenceId(5): Some("p")
current  reference ReferenceId(4): None
reference Mismatch:
previous reference ReferenceId(6): Some("p")
current  reference ReferenceId(5): None
reference Mismatch:
previous reference ReferenceId(8): Some("p")
current  reference ReferenceId(7): None
reference Mismatch:
previous reference ReferenceId(11): Some("p")
current  reference ReferenceId(10): None
reference Mismatch:
previous reference ReferenceId(13): Some("p")
current  reference ReferenceId(12): None
reference Mismatch:
previous reference ReferenceId(16): Some("p")
current  reference ReferenceId(15): None
reference Mismatch:
previous reference ReferenceId(20): Some("p")
current  reference ReferenceId(19): None
reference Mismatch:
previous reference ReferenceId(21): Some("p")
current  reference ReferenceId(20): None
reference Mismatch:
previous reference ReferenceId(22): Some("p")
current  reference ReferenceId(21): None
reference Mismatch:
previous reference ReferenceId(24): Some("p")
current  reference ReferenceId(23): None
reference Mismatch:
previous reference ReferenceId(25): Some("p")
current  reference ReferenceId(24): None
reference Mismatch:
previous reference ReferenceId(26): Some("p")
current  reference ReferenceId(25): None
reference Mismatch:
previous reference ReferenceId(27): Some("x")
current  reference ReferenceId(26): None
reference Mismatch:
previous reference ReferenceId(28): Some("p")
current  reference ReferenceId(27): None
reference Mismatch:
previous reference ReferenceId(30): Some("p")
current  reference ReferenceId(29): None
reference Mismatch:
previous reference ReferenceId(31): Some("p")
current  reference ReferenceId(30): None
reference Mismatch:
previous reference ReferenceId(32): Some("p")
current  reference ReferenceId(31): None
reference Mismatch:
previous reference ReferenceId(33): Some("p")
current  reference ReferenceId(32): None
reference Mismatch:
previous reference ReferenceId(35): Some("p")
current  reference ReferenceId(34): None
reference Mismatch:
previous reference ReferenceId(37): Some("p")
current  reference ReferenceId(36): None
reference Mismatch:
previous reference ReferenceId(39): Some("p")
current  reference ReferenceId(38): None
reference Mismatch:
previous reference ReferenceId(40): Some("p")
current  reference ReferenceId(39): None
reference Mismatch:
previous reference ReferenceId(41): Some("p")
current  reference ReferenceId(40): None
reference Mismatch:
previous reference ReferenceId(42): Some("x")
current  reference ReferenceId(41): None
reference Mismatch:
previous reference ReferenceId(43): Some("p")
current  reference ReferenceId(42): None
reference Mismatch:
previous reference ReferenceId(45): Some("p")
current  reference ReferenceId(44): None
reference Mismatch:
previous reference ReferenceId(46): Some("p")
current  reference ReferenceId(45): None
reference Mismatch:
previous reference ReferenceId(47): Some("p")
current  reference ReferenceId(46): None
reference Mismatch:
previous reference ReferenceId(48): Some("p")
current  reference ReferenceId(47): None
reference Mismatch:
previous reference ReferenceId(50): Some("p")
current  reference ReferenceId(49): None
reference Mismatch:
previous reference ReferenceId(52): Some("p")
current  reference ReferenceId(51): None
reference Mismatch:
previous reference ReferenceId(55): Some("p")
current  reference ReferenceId(54): None
reference Mismatch:
previous reference ReferenceId(57): Some("p")
current  reference ReferenceId(56): None
reference Mismatch:
previous reference ReferenceId(59): Some("p")
current  reference ReferenceId(58): None
reference Mismatch:
previous reference ReferenceId(61): Some("x")
current  reference ReferenceId(60): None
reference Mismatch:
previous reference ReferenceId(62): Some("p")
current  reference ReferenceId(61): None
reference Mismatch:
previous reference ReferenceId(65): Some("p")
current  reference ReferenceId(64): None
reference Mismatch:
previous reference ReferenceId(67): Some("p")
current  reference ReferenceId(66): None
reference Mismatch:
previous reference ReferenceId(69): Some("p")
current  reference ReferenceId(68): None
reference Mismatch:
previous reference ReferenceId(71): Some("p")
current  reference ReferenceId(70): None
reference Mismatch:
previous reference ReferenceId(74): Some("p")
current  reference ReferenceId(73): None
reference Mismatch:
previous reference ReferenceId(77): Some("p")
current  reference ReferenceId(76): None
reference Mismatch:
previous reference ReferenceId(79): Some("p")
current  reference ReferenceId(78): None
reference Mismatch:
previous reference ReferenceId(80): Some("p")
current  reference ReferenceId(79): None
reference Mismatch:
previous reference ReferenceId(81): Some("p")
current  reference ReferenceId(80): None
reference Mismatch:
previous reference ReferenceId(82): Some("x")
current  reference ReferenceId(81): None
reference Mismatch:
previous reference ReferenceId(83): Some("p")
current  reference ReferenceId(82): None
reference Mismatch:
previous reference ReferenceId(85): Some("p")
current  reference ReferenceId(84): None
reference Mismatch:
previous reference ReferenceId(86): Some("p")
current  reference ReferenceId(85): None
reference Mismatch:
previous reference ReferenceId(87): Some("p")
current  reference ReferenceId(86): None
reference Mismatch:
previous reference ReferenceId(88): Some("p")
current  reference ReferenceId(87): None
reference Mismatch:
previous reference ReferenceId(90): Some("p")
current  reference ReferenceId(89): None
reference Mismatch:
previous reference ReferenceId(92): Some("p")
current  reference ReferenceId(91): None
reference Mismatch:
previous reference ReferenceId(94): Some("p")
current  reference ReferenceId(93): None
reference Mismatch:
previous reference ReferenceId(95): Some("p")
current  reference ReferenceId(94): None
reference Mismatch:
previous reference ReferenceId(96): Some("p")
current  reference ReferenceId(95): None
reference Mismatch:
previous reference ReferenceId(97): Some("x")
current  reference ReferenceId(96): None
reference Mismatch:
previous reference ReferenceId(98): Some("p")
current  reference ReferenceId(97): None
reference Mismatch:
previous reference ReferenceId(100): Some("p")
current  reference ReferenceId(99): None
reference Mismatch:
previous reference ReferenceId(101): Some("p")
current  reference ReferenceId(100): None
reference Mismatch:
previous reference ReferenceId(102): Some("p")
current  reference ReferenceId(101): None
reference Mismatch:
previous reference ReferenceId(103): Some("p")
current  reference ReferenceId(102): None
reference Mismatch:
previous reference ReferenceId(105): Some("p")
current  reference ReferenceId(104): None
reference Mismatch:
previous reference ReferenceId(107): Some("p")
current  reference ReferenceId(106): None
reference Mismatch:
previous reference ReferenceId(108): Some("x")
current  reference ReferenceId(107): None
reference Mismatch:
previous reference ReferenceId(110): Some("p")
current  reference ReferenceId(109): None
reference Mismatch:
previous reference ReferenceId(111): Some("x")
current  reference ReferenceId(110): None
reference Mismatch:
previous reference ReferenceId(112): Some("p")
current  reference ReferenceId(111): None
reference Mismatch:
previous reference ReferenceId(113): Some("x")
current  reference ReferenceId(112): None
reference Mismatch:
previous reference ReferenceId(114): Some("p")
current  reference ReferenceId(113): None
reference Mismatch:
previous reference ReferenceId(115): Some("x")
current  reference ReferenceId(114): None
reference Mismatch:
previous reference ReferenceId(116): Some("x")
current  reference ReferenceId(115): None
reference Mismatch:
previous reference ReferenceId(117): Some("p")
current  reference ReferenceId(116): None
reference Mismatch:
previous reference ReferenceId(118): Some("x")
current  reference ReferenceId(117): None
reference Mismatch:
previous reference ReferenceId(120): Some("p")
current  reference ReferenceId(119): None
reference Mismatch:
previous reference ReferenceId(121): Some("x")
current  reference ReferenceId(120): None
reference Mismatch:
previous reference ReferenceId(122): Some("p")
current  reference ReferenceId(121): None
reference Mismatch:
previous reference ReferenceId(123): Some("x")
current  reference ReferenceId(122): None
reference Mismatch:
previous reference ReferenceId(124): Some("p")
current  reference ReferenceId(123): None
reference Mismatch:
previous reference ReferenceId(125): Some("x")
current  reference ReferenceId(124): None
reference Mismatch:
previous reference ReferenceId(126): Some("p")
current  reference ReferenceId(125): None
reference Mismatch:
previous reference ReferenceId(127): Some("x")
current  reference ReferenceId(126): None
reference Mismatch:
previous reference ReferenceId(129): Some("p")
current  reference ReferenceId(128): None
reference Mismatch:
previous reference ReferenceId(130): Some("x")
current  reference ReferenceId(129): None
reference Mismatch:
previous reference ReferenceId(132): Some("p")
current  reference ReferenceId(131): None
reference Mismatch:
previous reference ReferenceId(135): Some("p")
current  reference ReferenceId(134): None
reference Mismatch:
previous reference ReferenceId(137): Some("p")
current  reference ReferenceId(136): None
reference Mismatch:
previous reference ReferenceId(139): Some("p")
current  reference ReferenceId(138): None
reference Mismatch:
previous reference ReferenceId(141): Some("x")
current  reference ReferenceId(140): None
reference Mismatch:
previous reference ReferenceId(142): Some("p")
current  reference ReferenceId(141): None
reference Mismatch:
previous reference ReferenceId(145): Some("p")
current  reference ReferenceId(144): None
reference Mismatch:
previous reference ReferenceId(147): Some("p")
current  reference ReferenceId(146): None
reference Mismatch:
previous reference ReferenceId(149): Some("p")
current  reference ReferenceId(148): None
reference Mismatch:
previous reference ReferenceId(151): Some("p")
current  reference ReferenceId(150): None
reference Mismatch:
previous reference ReferenceId(154): Some("p")
current  reference ReferenceId(153): None
reference Mismatch:
previous reference ReferenceId(157): Some("p")
current  reference ReferenceId(156): None
reference Mismatch:
previous reference ReferenceId(159): Some("p")
current  reference ReferenceId(158): None
reference Mismatch:
previous reference ReferenceId(160): Some("p")
current  reference ReferenceId(159): None
reference Mismatch:
previous reference ReferenceId(161): Some("p")
current  reference ReferenceId(160): None
reference Mismatch:
previous reference ReferenceId(162): Some("x")
current  reference ReferenceId(161): None
reference Mismatch:
previous reference ReferenceId(163): Some("p")
current  reference ReferenceId(162): None
reference Mismatch:
previous reference ReferenceId(165): Some("p")
current  reference ReferenceId(164): None
reference Mismatch:
previous reference ReferenceId(166): Some("p")
current  reference ReferenceId(165): None
reference Mismatch:
previous reference ReferenceId(167): Some("p")
current  reference ReferenceId(166): None
reference Mismatch:
previous reference ReferenceId(168): Some("p")
current  reference ReferenceId(167): None
reference Mismatch:
previous reference ReferenceId(170): Some("p")
current  reference ReferenceId(169): None
reference Mismatch:
previous reference ReferenceId(172): Some("p")
current  reference ReferenceId(171): None
reference Mismatch:
previous reference ReferenceId(174): Some("p")
current  reference ReferenceId(173): None
reference Mismatch:
previous reference ReferenceId(175): Some("p")
current  reference ReferenceId(174): None
reference Mismatch:
previous reference ReferenceId(176): Some("p")
current  reference ReferenceId(175): None
reference Mismatch:
previous reference ReferenceId(177): Some("x")
current  reference ReferenceId(176): None
reference Mismatch:
previous reference ReferenceId(178): Some("p")
current  reference ReferenceId(177): None
reference Mismatch:
previous reference ReferenceId(180): Some("p")
current  reference ReferenceId(179): None
reference Mismatch:
previous reference ReferenceId(181): Some("p")
current  reference ReferenceId(180): None
reference Mismatch:
previous reference ReferenceId(182): Some("p")
current  reference ReferenceId(181): None
reference Mismatch:
previous reference ReferenceId(183): Some("p")
current  reference ReferenceId(182): None
reference Mismatch:
previous reference ReferenceId(185): Some("p")
current  reference ReferenceId(184): None
reference Mismatch:
previous reference ReferenceId(187): Some("p")
current  reference ReferenceId(186): None
reference Mismatch:
previous reference ReferenceId(189): Some("p")
current  reference ReferenceId(188): None
reference Mismatch:
previous reference ReferenceId(190): Some("p")
current  reference ReferenceId(189): None
reference Mismatch:
previous reference ReferenceId(191): Some("p")
current  reference ReferenceId(190): None
reference Mismatch:
previous reference ReferenceId(192): Some("x")
current  reference ReferenceId(191): None
reference Mismatch:
previous reference ReferenceId(193): Some("p")
current  reference ReferenceId(192): None
reference Mismatch:
previous reference ReferenceId(195): Some("p")
current  reference ReferenceId(194): None
reference Mismatch:
previous reference ReferenceId(196): Some("p")
current  reference ReferenceId(195): None
reference Mismatch:
previous reference ReferenceId(197): Some("p")
current  reference ReferenceId(196): None
reference Mismatch:
previous reference ReferenceId(198): Some("p")
current  reference ReferenceId(197): None
reference Mismatch:
previous reference ReferenceId(200): Some("p")
current  reference ReferenceId(199): None
reference Mismatch:
previous reference ReferenceId(202): Some("p")
current  reference ReferenceId(201): None
reference Mismatch:
previous reference ReferenceId(205): Some("p")
current  reference ReferenceId(204): None
reference Mismatch:
previous reference ReferenceId(207): Some("p")
current  reference ReferenceId(206): None
reference Mismatch:
previous reference ReferenceId(209): Some("p")
current  reference ReferenceId(208): None
reference Mismatch:
previous reference ReferenceId(211): Some("x")
current  reference ReferenceId(210): None
reference Mismatch:
previous reference ReferenceId(212): Some("p")
current  reference ReferenceId(211): None
reference Mismatch:
previous reference ReferenceId(215): Some("p")
current  reference ReferenceId(214): None
reference Mismatch:
previous reference ReferenceId(217): Some("p")
current  reference ReferenceId(216): None
reference Mismatch:
previous reference ReferenceId(219): Some("p")
current  reference ReferenceId(218): None
reference Mismatch:
previous reference ReferenceId(221): Some("p")
current  reference ReferenceId(220): None
reference Mismatch:
previous reference ReferenceId(224): Some("p")
current  reference ReferenceId(223): None
reference Mismatch:
previous reference ReferenceId(227): Some("p")
current  reference ReferenceId(226): None
reference Mismatch:
previous reference ReferenceId(230): Some("p")
current  reference ReferenceId(229): None
reference Mismatch:
previous reference ReferenceId(232): Some("p")
current  reference ReferenceId(231): None
reference Mismatch:
previous reference ReferenceId(234): Some("p")
current  reference ReferenceId(233): None
reference Mismatch:
previous reference ReferenceId(236): Some("x")
current  reference ReferenceId(235): None
reference Mismatch:
previous reference ReferenceId(237): Some("p")
current  reference ReferenceId(236): None
reference Mismatch:
previous reference ReferenceId(240): Some("p")
current  reference ReferenceId(239): None
reference Mismatch:
previous reference ReferenceId(242): Some("p")
current  reference ReferenceId(241): None
reference Mismatch:
previous reference ReferenceId(244): Some("p")
current  reference ReferenceId(243): None
reference Mismatch:
previous reference ReferenceId(246): Some("p")
current  reference ReferenceId(245): None
reference Mismatch:
previous reference ReferenceId(249): Some("p")
current  reference ReferenceId(248): None

tasks/coverage/typescript/tests/cases/compiler/promiseTypeInference.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["$$x", "IPromise"]
current  scope ScopeId(0): ["$$x"]

tasks/coverage/typescript/tests/cases/compiler/promiseTypeStrictNull.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["A", "B", "C", "D", "E", "F", "G", "H", "I", "p", "p00", "p01", "p10", "p11", "p12", "p13", "p14", "p15", "p16", "p17", "p18", "p19", "p20", "p21", "p22", "p23", "p24", "p25", "p26", "p27", "p28", "p29", "p30", "p31", "p32", "p33", "p34", "p35", "p36", "p37", "p38", "p39", "p40", "p41", "p42", "p43", "p44", "p45", "p46", "p47", "p48", "p49", "p50", "p51", "p52", "p53", "p54", "p55", "p56", "p57", "p58", "p59", "p60", "p61", "p62", "p63", "p64", "p65", "p66", "p67", "p68", "p69", "p70", "p71", "p72", "p73", "p74", "p75", "p76", "p77", "p78", "p79", "p80", "p81", "p82", "p83", "p84", "p85", "p86", "p87", "p88", "p89", "p90", "p91", "p92", "p93", "p94", "p95", "p96", "p97", "p98", "p99", "pa0", "pa1", "pa2", "pa3", "pa4", "pa5", "pa6", "pa7", "pa8", "pa9", "pb0", "pb1", "pb2", "pb3", "pb4", "pb5", "pb6", "pb7", "pb8", "pb9", "pc0", "pc1", "pc2", "pc3", "pc4", "pc5", "pc6", "pc7", "pc8", "pc9", "x"]
current  scope ScopeId(0): ["A", "B", "C", "D", "E", "F", "G", "H", "I", "p00", "p01", "p10", "p11", "p12", "p13", "p14", "p15", "p16", "p17", "p18", "p19", "p20", "p21", "p22", "p23", "p24", "p25", "p26", "p27", "p28", "p29", "p30", "p31", "p32", "p33", "p34", "p35", "p36", "p37", "p38", "p39", "p40", "p41", "p42", "p43", "p44", "p45", "p46", "p47", "p48", "p49", "p50", "p51", "p52", "p53", "p54", "p55", "p56", "p57", "p58", "p59", "p60", "p61", "p62", "p63", "p64", "p65", "p66", "p67", "p68", "p69", "p70", "p71", "p72", "p73", "p74", "p75", "p76", "p77", "p78", "p79", "p80", "p81", "p82", "p83", "p84", "p85", "p86", "p87", "p88", "p89", "p90", "p91", "p92", "p93", "p94", "p95", "p96", "p97", "p98", "p99", "pa0", "pa1", "pa2", "pa3", "pa4", "pa5", "pa6", "pa7", "pa8", "pa9", "pb0", "pb1", "pb2", "pb3", "pb4", "pb5", "pb6", "pb7", "pb8", "pb9", "pc0", "pc1", "pc2", "pc3", "pc4", "pc5", "pc6", "pc7", "pc8", "pc9"]
reference Mismatch:
previous reference ReferenceId(1): Some("p")
current  reference ReferenceId(0): None
reference Mismatch:
previous reference ReferenceId(3): Some("p")
current  reference ReferenceId(2): None
reference Mismatch:
previous reference ReferenceId(4): Some("p")
current  reference ReferenceId(3): None
reference Mismatch:
previous reference ReferenceId(5): Some("p")
current  reference ReferenceId(4): None
reference Mismatch:
previous reference ReferenceId(6): Some("p")
current  reference ReferenceId(5): None
reference Mismatch:
previous reference ReferenceId(8): Some("p")
current  reference ReferenceId(7): None
reference Mismatch:
previous reference ReferenceId(11): Some("p")
current  reference ReferenceId(10): None
reference Mismatch:
previous reference ReferenceId(13): Some("p")
current  reference ReferenceId(12): None
reference Mismatch:
previous reference ReferenceId(16): Some("p")
current  reference ReferenceId(15): None
reference Mismatch:
previous reference ReferenceId(20): Some("p")
current  reference ReferenceId(19): None
reference Mismatch:
previous reference ReferenceId(21): Some("p")
current  reference ReferenceId(20): None
reference Mismatch:
previous reference ReferenceId(22): Some("p")
current  reference ReferenceId(21): None
reference Mismatch:
previous reference ReferenceId(24): Some("p")
current  reference ReferenceId(23): None
reference Mismatch:
previous reference ReferenceId(25): Some("p")
current  reference ReferenceId(24): None
reference Mismatch:
previous reference ReferenceId(26): Some("p")
current  reference ReferenceId(25): None
reference Mismatch:
previous reference ReferenceId(27): Some("x")
current  reference ReferenceId(26): None
reference Mismatch:
previous reference ReferenceId(28): Some("p")
current  reference ReferenceId(27): None
reference Mismatch:
previous reference ReferenceId(30): Some("p")
current  reference ReferenceId(29): None
reference Mismatch:
previous reference ReferenceId(31): Some("p")
current  reference ReferenceId(30): None
reference Mismatch:
previous reference ReferenceId(32): Some("p")
current  reference ReferenceId(31): None
reference Mismatch:
previous reference ReferenceId(33): Some("p")
current  reference ReferenceId(32): None
reference Mismatch:
previous reference ReferenceId(35): Some("p")
current  reference ReferenceId(34): None
reference Mismatch:
previous reference ReferenceId(37): Some("p")
current  reference ReferenceId(36): None
reference Mismatch:
previous reference ReferenceId(39): Some("p")
current  reference ReferenceId(38): None
reference Mismatch:
previous reference ReferenceId(40): Some("p")
current  reference ReferenceId(39): None
reference Mismatch:
previous reference ReferenceId(41): Some("p")
current  reference ReferenceId(40): None
reference Mismatch:
previous reference ReferenceId(42): Some("x")
current  reference ReferenceId(41): None
reference Mismatch:
previous reference ReferenceId(43): Some("p")
current  reference ReferenceId(42): None
reference Mismatch:
previous reference ReferenceId(45): Some("p")
current  reference ReferenceId(44): None
reference Mismatch:
previous reference ReferenceId(46): Some("p")
current  reference ReferenceId(45): None
reference Mismatch:
previous reference ReferenceId(47): Some("p")
current  reference ReferenceId(46): None
reference Mismatch:
previous reference ReferenceId(48): Some("p")
current  reference ReferenceId(47): None
reference Mismatch:
previous reference ReferenceId(50): Some("p")
current  reference ReferenceId(49): None
reference Mismatch:
previous reference ReferenceId(52): Some("p")
current  reference ReferenceId(51): None
reference Mismatch:
previous reference ReferenceId(55): Some("p")
current  reference ReferenceId(54): None
reference Mismatch:
previous reference ReferenceId(57): Some("p")
current  reference ReferenceId(56): None
reference Mismatch:
previous reference ReferenceId(59): Some("p")
current  reference ReferenceId(58): None
reference Mismatch:
previous reference ReferenceId(61): Some("x")
current  reference ReferenceId(60): None
reference Mismatch:
previous reference ReferenceId(62): Some("p")
current  reference ReferenceId(61): None
reference Mismatch:
previous reference ReferenceId(65): Some("p")
current  reference ReferenceId(64): None
reference Mismatch:
previous reference ReferenceId(67): Some("p")
current  reference ReferenceId(66): None
reference Mismatch:
previous reference ReferenceId(69): Some("p")
current  reference ReferenceId(68): None
reference Mismatch:
previous reference ReferenceId(71): Some("p")
current  reference ReferenceId(70): None
reference Mismatch:
previous reference ReferenceId(74): Some("p")
current  reference ReferenceId(73): None
reference Mismatch:
previous reference ReferenceId(77): Some("p")
current  reference ReferenceId(76): None
reference Mismatch:
previous reference ReferenceId(79): Some("p")
current  reference ReferenceId(78): None
reference Mismatch:
previous reference ReferenceId(80): Some("p")
current  reference ReferenceId(79): None
reference Mismatch:
previous reference ReferenceId(81): Some("p")
current  reference ReferenceId(80): None
reference Mismatch:
previous reference ReferenceId(82): Some("x")
current  reference ReferenceId(81): None
reference Mismatch:
previous reference ReferenceId(83): Some("p")
current  reference ReferenceId(82): None
reference Mismatch:
previous reference ReferenceId(85): Some("p")
current  reference ReferenceId(84): None
reference Mismatch:
previous reference ReferenceId(86): Some("p")
current  reference ReferenceId(85): None
reference Mismatch:
previous reference ReferenceId(87): Some("p")
current  reference ReferenceId(86): None
reference Mismatch:
previous reference ReferenceId(88): Some("p")
current  reference ReferenceId(87): None
reference Mismatch:
previous reference ReferenceId(90): Some("p")
current  reference ReferenceId(89): None
reference Mismatch:
previous reference ReferenceId(92): Some("p")
current  reference ReferenceId(91): None
reference Mismatch:
previous reference ReferenceId(94): Some("p")
current  reference ReferenceId(93): None
reference Mismatch:
previous reference ReferenceId(95): Some("p")
current  reference ReferenceId(94): None
reference Mismatch:
previous reference ReferenceId(96): Some("p")
current  reference ReferenceId(95): None
reference Mismatch:
previous reference ReferenceId(97): Some("x")
current  reference ReferenceId(96): None
reference Mismatch:
previous reference ReferenceId(98): Some("p")
current  reference ReferenceId(97): None
reference Mismatch:
previous reference ReferenceId(100): Some("p")
current  reference ReferenceId(99): None
reference Mismatch:
previous reference ReferenceId(101): Some("p")
current  reference ReferenceId(100): None
reference Mismatch:
previous reference ReferenceId(102): Some("p")
current  reference ReferenceId(101): None
reference Mismatch:
previous reference ReferenceId(103): Some("p")
current  reference ReferenceId(102): None
reference Mismatch:
previous reference ReferenceId(105): Some("p")
current  reference ReferenceId(104): None
reference Mismatch:
previous reference ReferenceId(107): Some("p")
current  reference ReferenceId(106): None
reference Mismatch:
previous reference ReferenceId(108): Some("x")
current  reference ReferenceId(107): None
reference Mismatch:
previous reference ReferenceId(110): Some("p")
current  reference ReferenceId(109): None
reference Mismatch:
previous reference ReferenceId(111): Some("x")
current  reference ReferenceId(110): None
reference Mismatch:
previous reference ReferenceId(112): Some("p")
current  reference ReferenceId(111): None
reference Mismatch:
previous reference ReferenceId(113): Some("x")
current  reference ReferenceId(112): None
reference Mismatch:
previous reference ReferenceId(114): Some("p")
current  reference ReferenceId(113): None
reference Mismatch:
previous reference ReferenceId(115): Some("x")
current  reference ReferenceId(114): None
reference Mismatch:
previous reference ReferenceId(116): Some("x")
current  reference ReferenceId(115): None
reference Mismatch:
previous reference ReferenceId(117): Some("p")
current  reference ReferenceId(116): None
reference Mismatch:
previous reference ReferenceId(118): Some("x")
current  reference ReferenceId(117): None
reference Mismatch:
previous reference ReferenceId(120): Some("p")
current  reference ReferenceId(119): None
reference Mismatch:
previous reference ReferenceId(121): Some("x")
current  reference ReferenceId(120): None
reference Mismatch:
previous reference ReferenceId(122): Some("p")
current  reference ReferenceId(121): None
reference Mismatch:
previous reference ReferenceId(123): Some("x")
current  reference ReferenceId(122): None
reference Mismatch:
previous reference ReferenceId(124): Some("p")
current  reference ReferenceId(123): None
reference Mismatch:
previous reference ReferenceId(125): Some("x")
current  reference ReferenceId(124): None
reference Mismatch:
previous reference ReferenceId(126): Some("p")
current  reference ReferenceId(125): None
reference Mismatch:
previous reference ReferenceId(127): Some("x")
current  reference ReferenceId(126): None
reference Mismatch:
previous reference ReferenceId(129): Some("p")
current  reference ReferenceId(128): None
reference Mismatch:
previous reference ReferenceId(130): Some("x")
current  reference ReferenceId(129): None
reference Mismatch:
previous reference ReferenceId(132): Some("p")
current  reference ReferenceId(131): None
reference Mismatch:
previous reference ReferenceId(135): Some("p")
current  reference ReferenceId(134): None
reference Mismatch:
previous reference ReferenceId(137): Some("p")
current  reference ReferenceId(136): None
reference Mismatch:
previous reference ReferenceId(139): Some("p")
current  reference ReferenceId(138): None
reference Mismatch:
previous reference ReferenceId(141): Some("x")
current  reference ReferenceId(140): None
reference Mismatch:
previous reference ReferenceId(142): Some("p")
current  reference ReferenceId(141): None
reference Mismatch:
previous reference ReferenceId(145): Some("p")
current  reference ReferenceId(144): None
reference Mismatch:
previous reference ReferenceId(147): Some("p")
current  reference ReferenceId(146): None
reference Mismatch:
previous reference ReferenceId(149): Some("p")
current  reference ReferenceId(148): None
reference Mismatch:
previous reference ReferenceId(151): Some("p")
current  reference ReferenceId(150): None
reference Mismatch:
previous reference ReferenceId(154): Some("p")
current  reference ReferenceId(153): None
reference Mismatch:
previous reference ReferenceId(157): Some("p")
current  reference ReferenceId(156): None
reference Mismatch:
previous reference ReferenceId(159): Some("p")
current  reference ReferenceId(158): None
reference Mismatch:
previous reference ReferenceId(160): Some("p")
current  reference ReferenceId(159): None
reference Mismatch:
previous reference ReferenceId(161): Some("p")
current  reference ReferenceId(160): None
reference Mismatch:
previous reference ReferenceId(162): Some("x")
current  reference ReferenceId(161): None
reference Mismatch:
previous reference ReferenceId(163): Some("p")
current  reference ReferenceId(162): None
reference Mismatch:
previous reference ReferenceId(165): Some("p")
current  reference ReferenceId(164): None
reference Mismatch:
previous reference ReferenceId(166): Some("p")
current  reference ReferenceId(165): None
reference Mismatch:
previous reference ReferenceId(167): Some("p")
current  reference ReferenceId(166): None
reference Mismatch:
previous reference ReferenceId(168): Some("p")
current  reference ReferenceId(167): None
reference Mismatch:
previous reference ReferenceId(170): Some("p")
current  reference ReferenceId(169): None
reference Mismatch:
previous reference ReferenceId(172): Some("p")
current  reference ReferenceId(171): None
reference Mismatch:
previous reference ReferenceId(174): Some("p")
current  reference ReferenceId(173): None
reference Mismatch:
previous reference ReferenceId(175): Some("p")
current  reference ReferenceId(174): None
reference Mismatch:
previous reference ReferenceId(176): Some("p")
current  reference ReferenceId(175): None
reference Mismatch:
previous reference ReferenceId(177): Some("x")
current  reference ReferenceId(176): None
reference Mismatch:
previous reference ReferenceId(178): Some("p")
current  reference ReferenceId(177): None
reference Mismatch:
previous reference ReferenceId(180): Some("p")
current  reference ReferenceId(179): None
reference Mismatch:
previous reference ReferenceId(181): Some("p")
current  reference ReferenceId(180): None
reference Mismatch:
previous reference ReferenceId(182): Some("p")
current  reference ReferenceId(181): None
reference Mismatch:
previous reference ReferenceId(183): Some("p")
current  reference ReferenceId(182): None
reference Mismatch:
previous reference ReferenceId(185): Some("p")
current  reference ReferenceId(184): None
reference Mismatch:
previous reference ReferenceId(187): Some("p")
current  reference ReferenceId(186): None
reference Mismatch:
previous reference ReferenceId(189): Some("p")
current  reference ReferenceId(188): None
reference Mismatch:
previous reference ReferenceId(190): Some("p")
current  reference ReferenceId(189): None
reference Mismatch:
previous reference ReferenceId(191): Some("p")
current  reference ReferenceId(190): None
reference Mismatch:
previous reference ReferenceId(192): Some("x")
current  reference ReferenceId(191): None
reference Mismatch:
previous reference ReferenceId(193): Some("p")
current  reference ReferenceId(192): None
reference Mismatch:
previous reference ReferenceId(195): Some("p")
current  reference ReferenceId(194): None
reference Mismatch:
previous reference ReferenceId(196): Some("p")
current  reference ReferenceId(195): None
reference Mismatch:
previous reference ReferenceId(197): Some("p")
current  reference ReferenceId(196): None
reference Mismatch:
previous reference ReferenceId(198): Some("p")
current  reference ReferenceId(197): None
reference Mismatch:
previous reference ReferenceId(200): Some("p")
current  reference ReferenceId(199): None
reference Mismatch:
previous reference ReferenceId(202): Some("p")
current  reference ReferenceId(201): None
reference Mismatch:
previous reference ReferenceId(205): Some("p")
current  reference ReferenceId(204): None
reference Mismatch:
previous reference ReferenceId(207): Some("p")
current  reference ReferenceId(206): None
reference Mismatch:
previous reference ReferenceId(209): Some("p")
current  reference ReferenceId(208): None
reference Mismatch:
previous reference ReferenceId(211): Some("x")
current  reference ReferenceId(210): None
reference Mismatch:
previous reference ReferenceId(212): Some("p")
current  reference ReferenceId(211): None
reference Mismatch:
previous reference ReferenceId(215): Some("p")
current  reference ReferenceId(214): None
reference Mismatch:
previous reference ReferenceId(217): Some("p")
current  reference ReferenceId(216): None
reference Mismatch:
previous reference ReferenceId(219): Some("p")
current  reference ReferenceId(218): None
reference Mismatch:
previous reference ReferenceId(221): Some("p")
current  reference ReferenceId(220): None
reference Mismatch:
previous reference ReferenceId(224): Some("p")
current  reference ReferenceId(223): None
reference Mismatch:
previous reference ReferenceId(227): Some("p")
current  reference ReferenceId(226): None
reference Mismatch:
previous reference ReferenceId(230): Some("p")
current  reference ReferenceId(229): None
reference Mismatch:
previous reference ReferenceId(232): Some("p")
current  reference ReferenceId(231): None
reference Mismatch:
previous reference ReferenceId(234): Some("p")
current  reference ReferenceId(233): None
reference Mismatch:
previous reference ReferenceId(236): Some("x")
current  reference ReferenceId(235): None
reference Mismatch:
previous reference ReferenceId(237): Some("p")
current  reference ReferenceId(236): None
reference Mismatch:
previous reference ReferenceId(240): Some("p")
current  reference ReferenceId(239): None
reference Mismatch:
previous reference ReferenceId(242): Some("p")
current  reference ReferenceId(241): None
reference Mismatch:
previous reference ReferenceId(244): Some("p")
current  reference ReferenceId(243): None
reference Mismatch:
previous reference ReferenceId(246): Some("p")
current  reference ReferenceId(245): None
reference Mismatch:
previous reference ReferenceId(249): Some("p")
current  reference ReferenceId(248): None

tasks/coverage/typescript/tests/cases/compiler/promiseVoidErrorCallback.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["T1", "T2", "T3", "f1", "f2", "x3"]
current  scope ScopeId(0): ["f1", "f2", "x3"]

tasks/coverage/typescript/tests/cases/compiler/promiseWithResolvers.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["T", "promise", "reject", "resolve"]
current  scope ScopeId(0): ["promise", "reject", "resolve"]

tasks/coverage/typescript/tests/cases/compiler/promises.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Promise"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/propTypeValidatorInference.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["ExtractPropsMatch", "ExtractedProps", "ExtractedPropsWithoutAnnotation", "PropTypes", "PropTypesMap", "Props", "arrayOfTypes", "innerProps", "propTypes", "propTypesWithoutAnnotation", "x"]
current  scope ScopeId(0): ["PropTypes", "arrayOfTypes", "innerProps", "propTypes", "propTypesWithoutAnnotation", "x"]

tasks/coverage/typescript/tests/cases/compiler/propagationOfPromiseInitialization.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["IPromise", "foo"]
current  scope ScopeId(0): ["foo"]

tasks/coverage/typescript/tests/cases/compiler/propertyNamesWithStringLiteral.ts
semantic error: Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript

tasks/coverage/typescript/tests/cases/compiler/prototypeInstantiatedWithBaseConstraint.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(1): ["T"]
current  scope ScopeId(1): []

tasks/coverage/typescript/tests/cases/compiler/prototypeOnConstructorFunctions.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["I1", "i"]
current  scope ScopeId(0): ["i"]

tasks/coverage/typescript/tests/cases/compiler/qualifiedName_ImportDeclarations-entity-names-referencing-a-var.ts
semantic error: Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript

tasks/coverage/typescript/tests/cases/compiler/ramdaToolsNoInfinite.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Curry", "R", "Tools"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/ramdaToolsNoInfinite2.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Any/Cast", "Any/Compute", "Any/Extends", "Any/Implements", "Any/Key", "Any/Kind", "Any/Type", "Any/_Internal", "Any/x", "Boolean/Boolean", "Boolean/Not", "Function/Curry", "Function/Function", "Function/Parameters", "Function/Return", "Iteration/Format", "Iteration/Iteration", "Iteration/IterationOf", "Iteration/Key", "Iteration/Next", "Iteration/Pos", "Iteration/Prev", "Iteration/_Internal", "List/Append", "List/Concat", "List/Drop", "List/Keys", "List/Length", "List/List", "List/NonNullable", "List/ObjectOf", "List/Prepend", "List/Reverse", "List/Tail", "List/_Internal", "Number/Number", "Number/NumberOf", "Number/_Internal", "Object/At", "Object/Keys", "Object/ListOf", "Object/Merge", "Object/NonNullable", "Object/Omit", "Object/Overwrite", "Object/Pick", "Object/_Internal", "Union/Exclude", "Union/Has", "Union/Keys", "Union/NonNullable", "Union/Union"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/reactHOCSpreadprops.tsx
semantic error: `import lib = require(...);` is only supported when compiling modules to CommonJS.
Please consider using `import lib from '...';` alongside Typescript's --allowSyntheticDefaultImports option, or add @babel/plugin-transform-modules-commonjs to your Babel config.

tasks/coverage/typescript/tests/cases/compiler/reactNamespaceImportPresevation.tsx
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["_jsx", "_jsxFileName", "foo", "myReactLib"]
current  scope ScopeId(0): ["_jsx", "_jsxFileName"]

tasks/coverage/typescript/tests/cases/compiler/reactNamespaceJSXEmit.tsx
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Bar", "_Bar", "_jsxFileName", "foo", "myReactLib", "x"]
current  scope ScopeId(0): ["_jsxFileName"]
reference Mismatch:
previous reference ReferenceId(10): Some("Bar")
current  reference ReferenceId(3): None
reference Mismatch:
previous reference ReferenceId(1): Some("x")
current  reference ReferenceId(4): None
reference Mismatch:
previous reference ReferenceId(15): Some("Bar")
current  reference ReferenceId(9): None
reference Mismatch:
previous reference ReferenceId(3): Some("x")
current  reference ReferenceId(10): None
reference Mismatch:
previous reference ReferenceId(18): Some("Bar")
current  reference ReferenceId(13): None
reference Mismatch:
previous reference ReferenceId(5): Some("x")
current  reference ReferenceId(14): None
reference Mismatch:
previous reference ReferenceId(21): Some("_Bar")
current  reference ReferenceId(17): None
reference Mismatch:
previous reference ReferenceId(6): Some("x")
current  reference ReferenceId(18): None

tasks/coverage/typescript/tests/cases/compiler/reactReadonlyHOCAssignabilityReal.tsx
semantic error: Bindings Mismatch:
previous scope ScopeId(1): ["Inner", "P"]
current  scope ScopeId(1): ["Inner"]

tasks/coverage/typescript/tests/cases/compiler/reactSFCAndFunctionResolvable.tsx
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Checkbox", "OtherRadio", "Radio", "RandomComponent", "React", "_jsxFileName", "condition1", "condition2", "condition3"]
current  scope ScopeId(0): ["RandomComponent", "React", "_jsxFileName"]
reference Mismatch:
previous reference ReferenceId(4): Some("condition1")
current  reference ReferenceId(0): None
reference Mismatch:
previous reference ReferenceId(5): Some("Radio")
current  reference ReferenceId(1): None
reference Mismatch:
previous reference ReferenceId(6): Some("Checkbox")
current  reference ReferenceId(2): None
reference Mismatch:
previous reference ReferenceId(7): Some("condition2")
current  reference ReferenceId(3): None
reference Mismatch:
previous reference ReferenceId(8): Some("OtherRadio")
current  reference ReferenceId(4): None
reference Mismatch:
previous reference ReferenceId(9): Some("Checkbox")
current  reference ReferenceId(5): None
reference Mismatch:
previous reference ReferenceId(10): Some("condition1")
current  reference ReferenceId(6): None

tasks/coverage/typescript/tests/cases/compiler/reactTagNameComponentWithPropsNoOOM.tsx
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["React", "Tag", "_jsxFileName", "children", "classes", "rest"]
current  scope ScopeId(0): ["React", "_jsxFileName", "children", "classes", "rest"]
reference Mismatch:
previous reference ReferenceId(7): Some("Tag")
current  reference ReferenceId(1): None

tasks/coverage/typescript/tests/cases/compiler/reactTagNameComponentWithPropsNoOOM2.tsx
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["React", "Tag", "_jsxFileName", "children", "classes", "rest"]
current  scope ScopeId(0): ["React", "_jsxFileName", "children", "classes", "rest"]
reference Mismatch:
previous reference ReferenceId(9): Some("Tag")
current  reference ReferenceId(1): None

tasks/coverage/typescript/tests/cases/compiler/reboundBaseClassSymbol.ts
semantic error: Semantic Collector failed after transform
Missing SymbolId: Foo
Missing SymbolId: _Foo
Missing ReferenceId: Foo
Missing ReferenceId: Foo

tasks/coverage/typescript/tests/cases/compiler/rectype.ts
semantic error: Semantic Collector failed after transform
Missing SymbolId: M
Missing SymbolId: _M
Missing ReferenceId: _M
Missing ReferenceId: f
Missing ReferenceId: M
Missing ReferenceId: M

tasks/coverage/typescript/tests/cases/compiler/recursiveArrayNotCircular.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Action", "ActionType", "ReducerAction", "assertNever", "reducer"]
current  scope ScopeId(0): ["ActionType", "assertNever", "reducer"]
Bindings Mismatch:
previous scope ScopeId(3): ["ActionType", "Bar", "Batch", "Baz", "Foo"]
current  scope ScopeId(1): ["ActionType"]

tasks/coverage/typescript/tests/cases/compiler/recursiveClassInstantiationsWithDefaultConstructors.ts
semantic error: Semantic Collector failed after transform
Missing SymbolId: TypeScript2
Missing SymbolId: _TypeScript
Missing ReferenceId: _TypeScript
Missing ReferenceId: MemberName
Missing ReferenceId: _TypeScript
Missing ReferenceId: MemberNameArray
Missing ReferenceId: TypeScript2
Missing ReferenceId: TypeScript2

tasks/coverage/typescript/tests/cases/compiler/recursiveCloduleReference.ts
semantic error: Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript

tasks/coverage/typescript/tests/cases/compiler/recursiveConditionalCrash1.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["C1", "C2"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/recursiveConditionalCrash2.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["CanBeExpanded", "Expand__", "UseQueryOptions"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/recursiveConditionalCrash3.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["AllKeys", "Base", "CanBeExpanded", "Expand", "ExpandResult", "Expand_", "Expand__", "Join", "KeysCanBeExpanded", "KeysCanBeExpanded_", "PrefixWith", "Role", "SplitAC", "SplitWithAllPossibleCombinations", "UseQueryOptions", "UseQueryOptions2", "UseQueryOptions3", "UseQueryOptions4", "User", "X", "t", "y1", "y2"]
current  scope ScopeId(0): ["t", "y1", "y2"]

tasks/coverage/typescript/tests/cases/compiler/recursiveConditionalEvaluationNonInfinite.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Test", "a", "b", "x", "y"]
current  scope ScopeId(0): ["b", "y"]
reference Mismatch:
previous reference ReferenceId(5): Some("x")
current  reference ReferenceId(0): None
reference Mismatch:
previous reference ReferenceId(7): Some("a")
current  reference ReferenceId(1): None

tasks/coverage/typescript/tests/cases/compiler/recursiveConditionalTypes2.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["ClassSpec", "Converted", "DefaultsDeep", "MaybeMergePrivateSpecs", "MaybeMergePrivateSuperSpec", "MergePrivateSpecs", "MergePrivateSuperSpec", "SimplifyPrivateSpec", "UnionToIntersection", "_Array", "z"]
current  scope ScopeId(0): ["z"]

tasks/coverage/typescript/tests/cases/compiler/recursiveExcessPropertyChecks.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["ITreeItem", "NodeWithId", "getMaxId", "nodes"]
current  scope ScopeId(0): ["getMaxId", "nodes"]

tasks/coverage/typescript/tests/cases/compiler/recursiveExportAssignmentAndFindAliasedType7.ts
semantic error: `import lib = require(...);` is only supported when compiling modules to CommonJS.
Please consider using `import lib from '...';` alongside Typescript's --allowSyntheticDefaultImports option, or add @babel/plugin-transform-modules-commonjs to your Babel config.
`export = <value>;` is only supported when compiling modules to CommonJS.
Please consider using `export default <value>;`, or add @babel/plugin-transform-modules-commonjs to your Babel config.

tasks/coverage/typescript/tests/cases/compiler/recursiveGenericMethodCall.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Generate", "Generator"]
current  scope ScopeId(0): ["Generate"]
Bindings Mismatch:
previous scope ScopeId(2): ["T", "func"]
current  scope ScopeId(1): ["func"]

tasks/coverage/typescript/tests/cases/compiler/recursiveGenericSignatureInstantiation.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(1): ["T", "x"]
current  scope ScopeId(1): ["x"]

tasks/coverage/typescript/tests/cases/compiler/recursiveGenericTypeHierarchy.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["A", "B"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/recursiveGenericUnionType1.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Test1", "Test2", "s1", "s2", "x"]
current  scope ScopeId(0): ["s1", "s2", "x"]

tasks/coverage/typescript/tests/cases/compiler/recursiveGenericUnionType2.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Test1", "Test2", "s1", "s2", "x"]
current  scope ScopeId(0): ["s1", "s2", "x"]

tasks/coverage/typescript/tests/cases/compiler/recursiveIdenticalAssignment.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["A", "B", "a", "b"]
current  scope ScopeId(0): ["a", "b"]

tasks/coverage/typescript/tests/cases/compiler/recursiveIdenticalOverloadResolution.ts
semantic error: Semantic Collector failed after transform
Missing SymbolId: M
Missing SymbolId: _M
Missing ReferenceId: M
Missing ReferenceId: M

tasks/coverage/typescript/tests/cases/compiler/recursiveInheritance2.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["A", "B", "C", "a", "b", "c", "x", "y", "z"]
current  scope ScopeId(0): ["x", "y", "z"]
reference Mismatch:
previous reference ReferenceId(2): Some("a")
current  reference ReferenceId(0): None
reference Mismatch:
previous reference ReferenceId(5): Some("b")
current  reference ReferenceId(1): None
reference Mismatch:
previous reference ReferenceId(8): Some("c")
current  reference ReferenceId(2): None

tasks/coverage/typescript/tests/cases/compiler/recursiveMods.ts
semantic error: Semantic Collector failed after transform
Missing SymbolId: Foo
Missing SymbolId: _Foo
Missing ReferenceId: _Foo
Missing ReferenceId: C
Missing ReferenceId: Foo
Missing ReferenceId: Foo
Missing SymbolId: _Foo2
Missing ReferenceId: Foo
Missing ReferenceId: Foo

tasks/coverage/typescript/tests/cases/compiler/recursiveResolveDeclaredMembers.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["D", "F"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/recursiveReverseMappedType.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Recur", "a", "join"]
current  scope ScopeId(0): ["a", "join"]
Bindings Mismatch:
previous scope ScopeId(4): ["T", "l"]
current  scope ScopeId(1): ["l"]
Bindings Mismatch:
previous scope ScopeId(5): ["T", "l", "x"]
current  scope ScopeId(2): ["l", "x"]

tasks/coverage/typescript/tests/cases/compiler/recursiveSpecializationOfExtendedTypeWithError.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["HTMLSelectElement"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/recursiveSpecializationOfSignatures.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(1): ["A", "B"]
current  scope ScopeId(1): []

tasks/coverage/typescript/tests/cases/compiler/recursiveTupleTypes1.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Tree1", "Tree2", "tree1", "tree2"]
current  scope ScopeId(0): ["tree1", "tree2"]

tasks/coverage/typescript/tests/cases/compiler/recursiveTupleTypes2.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Tree1", "Tree2", "tree1", "tree2"]
current  scope ScopeId(0): ["tree1", "tree2"]

tasks/coverage/typescript/tests/cases/compiler/recursiveTypeAliasWithSpreadConditionalReturnNotCircular.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Option", "UnzipOption", "UnzipOptionArray1", "UnzipOptionArray2", "UnzipOptionArray3", "opt1", "opt2", "opt3", "zipped1", "zipped2", "zipped3"]
current  scope ScopeId(0): ["zipped1", "zipped2", "zipped3"]
reference Mismatch:
previous reference ReferenceId(43): Some("opt1")
current  reference ReferenceId(0): None
reference Mismatch:
previous reference ReferenceId(44): Some("opt2")
current  reference ReferenceId(1): None
reference Mismatch:
previous reference ReferenceId(45): Some("opt3")
current  reference ReferenceId(2): None
reference Mismatch:
previous reference ReferenceId(46): Some("opt1")
current  reference ReferenceId(3): None
reference Mismatch:
previous reference ReferenceId(47): Some("opt2")
current  reference ReferenceId(4): None
reference Mismatch:
previous reference ReferenceId(48): Some("opt3")
current  reference ReferenceId(5): None
reference Mismatch:
previous reference ReferenceId(49): Some("opt1")
current  reference ReferenceId(6): None
reference Mismatch:
previous reference ReferenceId(50): Some("opt2")
current  reference ReferenceId(7): None
reference Mismatch:
previous reference ReferenceId(51): Some("opt3")
current  reference ReferenceId(8): None

tasks/coverage/typescript/tests/cases/compiler/recursiveTypeComparison.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Observable", "Property", "p", "stuck"]
current  scope ScopeId(0): ["p", "stuck"]

tasks/coverage/typescript/tests/cases/compiler/recursiveTypeIdentity.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["A", "B", "C"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/recursiveTypeParameterReferenceError1.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["C2", "Foo", "Foo2", "X", "f", "f2", "r", "r2"]
current  scope ScopeId(0): ["C2", "X", "f", "f2", "r", "r2"]
Bindings Mismatch:
previous scope ScopeId(1): ["T"]
current  scope ScopeId(1): []
Bindings Mismatch:
previous scope ScopeId(3): ["T"]
current  scope ScopeId(2): []

tasks/coverage/typescript/tests/cases/compiler/recursiveTypeParameterReferenceError2.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["List", "List2"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/recursiveTypes1.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Customer", "Entity", "Person"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/recursiveUnionTypeInference.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Foo", "bar"]
current  scope ScopeId(0): ["bar"]
Bindings Mismatch:
previous scope ScopeId(2): ["T", "x"]
current  scope ScopeId(1): ["x"]

tasks/coverage/typescript/tests/cases/compiler/recursivelySpecializedConstructorDeclaration.ts
semantic error: Semantic Collector failed after transform
Missing SymbolId: MsPortal
Missing SymbolId: _MsPortal
Missing SymbolId: Controls
Missing SymbolId: _Controls
Missing SymbolId: Base
Missing SymbolId: _Base
Missing SymbolId: ItemList
Missing SymbolId: _ItemList
Missing ReferenceId: _ItemList
Missing ReferenceId: ItemValue
Missing ReferenceId: _ItemList
Missing ReferenceId: ViewModel
Missing ReferenceId: ItemList
Missing ReferenceId: ItemList
Missing ReferenceId: _Base
Missing ReferenceId: _Base
Missing ReferenceId: Base
Missing ReferenceId: Base
Missing ReferenceId: _Controls
Missing ReferenceId: _Controls
Missing ReferenceId: Controls
Missing ReferenceId: Controls
Missing ReferenceId: _MsPortal
Missing ReferenceId: _MsPortal
Missing ReferenceId: MsPortal
Missing ReferenceId: MsPortal

tasks/coverage/typescript/tests/cases/compiler/reducibleIndexedAccessTypes.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["AnyOneof", "AnyOneofKind", "GetPayload", "MappedPayload2", "Payload", "PayloadA", "PayloadB", "PayloadC", "PayloadStructure", "Type", "payloads2"]
current  scope ScopeId(0): ["Type", "payloads2"]
Bindings Mismatch:
previous scope ScopeId(1): ["A", "B", "C", "Type"]
current  scope ScopeId(1): ["Type"]

tasks/coverage/typescript/tests/cases/compiler/reexportMissingDefault8.ts
semantic error: `export = <value>;` is only supported when compiling modules to CommonJS.
Please consider using `export default <value>;`, or add @babel/plugin-transform-modules-commonjs to your Babel config.

tasks/coverage/typescript/tests/cases/compiler/reexportNameAliasedAndHoisted.ts
semantic error: Semantic Collector failed after transform
Missing SymbolId: Sizing
Missing SymbolId: _Sizing
Missing ReferenceId: _Sizing
Missing ReferenceId: Sizing
Missing ReferenceId: Sizing

tasks/coverage/typescript/tests/cases/compiler/relatedViaDiscriminatedTypeNoError.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["A", "B", "DiscriminatedUnion", "Model"]
current  scope ScopeId(0): ["A", "B", "Model"]
Bindings Mismatch:
previous scope ScopeId(4): ["T"]
current  scope ScopeId(3): []

tasks/coverage/typescript/tests/cases/compiler/relatedViaDiscriminatedTypeNoError2.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["AObjOrBObj", "AOrBObj", "Generic", "T", "x", "y"]
current  scope ScopeId(0): []
reference Mismatch:
previous reference ReferenceId(6): Some("x")
current  reference ReferenceId(0): None
reference Mismatch:
previous reference ReferenceId(7): Some("y")
current  reference ReferenceId(1): None
reference Mismatch:
previous reference ReferenceId(8): Some("y")
current  reference ReferenceId(2): None
reference Mismatch:
previous reference ReferenceId(9): Some("x")
current  reference ReferenceId(3): None

tasks/coverage/typescript/tests/cases/compiler/reorderProperties.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["A", "B", "C", "D", "c", "d"]
current  scope ScopeId(0): ["c", "d"]

tasks/coverage/typescript/tests/cases/compiler/requireEmitSemicolon.ts
semantic error: Semantic Collector failed after transform
Missing SymbolId: Models
Missing SymbolId: _Models
Missing ReferenceId: _Models
Missing ReferenceId: Person
Missing ReferenceId: Models
Missing ReferenceId: Models

tasks/coverage/typescript/tests/cases/compiler/requireOfJsonFile.ts
semantic error: `import lib = require(...);` is only supported when compiling modules to CommonJS.
Please consider using `import lib from '...';` alongside Typescript's --allowSyntheticDefaultImports option, or add @babel/plugin-transform-modules-commonjs to your Babel config.
`import lib = require(...);` is only supported when compiling modules to CommonJS.
Please consider using `import lib from '...';` alongside Typescript's --allowSyntheticDefaultImports option, or add @babel/plugin-transform-modules-commonjs to your Babel config.

tasks/coverage/typescript/tests/cases/compiler/requireOfJsonFileNonRelative.ts
semantic error: `import lib = require(...);` is only supported when compiling modules to CommonJS.
Please consider using `import lib from '...';` alongside Typescript's --allowSyntheticDefaultImports option, or add @babel/plugin-transform-modules-commonjs to your Babel config.
`import lib = require(...);` is only supported when compiling modules to CommonJS.
Please consider using `import lib from '...';` alongside Typescript's --allowSyntheticDefaultImports option, or add @babel/plugin-transform-modules-commonjs to your Babel config.

tasks/coverage/typescript/tests/cases/compiler/requireOfJsonFileNonRelativeWithoutExtensionResolvesToTs.ts
semantic error: `import lib = require(...);` is only supported when compiling modules to CommonJS.
Please consider using `import lib from '...';` alongside Typescript's --allowSyntheticDefaultImports option, or add @babel/plugin-transform-modules-commonjs to your Babel config.

tasks/coverage/typescript/tests/cases/compiler/requireOfJsonFileWithAlwaysStrictWithoutErrors.ts
semantic error: `import lib = require(...);` is only supported when compiling modules to CommonJS.
Please consider using `import lib from '...';` alongside Typescript's --allowSyntheticDefaultImports option, or add @babel/plugin-transform-modules-commonjs to your Babel config.
`import lib = require(...);` is only supported when compiling modules to CommonJS.
Please consider using `import lib from '...';` alongside Typescript's --allowSyntheticDefaultImports option, or add @babel/plugin-transform-modules-commonjs to your Babel config.

tasks/coverage/typescript/tests/cases/compiler/requireOfJsonFileWithEmptyObject.ts
semantic error: `import lib = require(...);` is only supported when compiling modules to CommonJS.
Please consider using `import lib from '...';` alongside Typescript's --allowSyntheticDefaultImports option, or add @babel/plugin-transform-modules-commonjs to your Babel config.
`import lib = require(...);` is only supported when compiling modules to CommonJS.
Please consider using `import lib from '...';` alongside Typescript's --allowSyntheticDefaultImports option, or add @babel/plugin-transform-modules-commonjs to your Babel config.

tasks/coverage/typescript/tests/cases/compiler/requireOfJsonFileWithModuleEmitUndefined.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["b"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/requireOfJsonFileWithModuleNodeResolutionEmitAmd.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["b"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/requireOfJsonFileWithModuleNodeResolutionEmitAmdOutFile.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["b"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/requireOfJsonFileWithModuleNodeResolutionEmitEs2015.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["b"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/requireOfJsonFileWithModuleNodeResolutionEmitEsNext.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["b"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/requireOfJsonFileWithModuleNodeResolutionEmitUndefined.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["b"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/requireOfJsonFileWithSourceMap.ts
semantic error: `import lib = require(...);` is only supported when compiling modules to CommonJS.
Please consider using `import lib from '...';` alongside Typescript's --allowSyntheticDefaultImports option, or add @babel/plugin-transform-modules-commonjs to your Babel config.
`import lib = require(...);` is only supported when compiling modules to CommonJS.
Please consider using `import lib from '...';` alongside Typescript's --allowSyntheticDefaultImports option, or add @babel/plugin-transform-modules-commonjs to your Babel config.

tasks/coverage/typescript/tests/cases/compiler/requireOfJsonFileWithTraillingComma.ts
semantic error: `import lib = require(...);` is only supported when compiling modules to CommonJS.
Please consider using `import lib from '...';` alongside Typescript's --allowSyntheticDefaultImports option, or add @babel/plugin-transform-modules-commonjs to your Babel config.
`import lib = require(...);` is only supported when compiling modules to CommonJS.
Please consider using `import lib from '...';` alongside Typescript's --allowSyntheticDefaultImports option, or add @babel/plugin-transform-modules-commonjs to your Babel config.

tasks/coverage/typescript/tests/cases/compiler/requireOfJsonFileWithoutAllowJs.ts
semantic error: `import lib = require(...);` is only supported when compiling modules to CommonJS.
Please consider using `import lib from '...';` alongside Typescript's --allowSyntheticDefaultImports option, or add @babel/plugin-transform-modules-commonjs to your Babel config.
`import lib = require(...);` is only supported when compiling modules to CommonJS.
Please consider using `import lib from '...';` alongside Typescript's --allowSyntheticDefaultImports option, or add @babel/plugin-transform-modules-commonjs to your Babel config.

tasks/coverage/typescript/tests/cases/compiler/requireOfJsonFileWithoutEsModuleInterop.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["test"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/requireOfJsonFileWithoutExtensionResolvesToTs.ts
semantic error: `import lib = require(...);` is only supported when compiling modules to CommonJS.
Please consider using `import lib from '...';` alongside Typescript's --allowSyntheticDefaultImports option, or add @babel/plugin-transform-modules-commonjs to your Babel config.
`import lib = require(...);` is only supported when compiling modules to CommonJS.
Please consider using `import lib from '...';` alongside Typescript's --allowSyntheticDefaultImports option, or add @babel/plugin-transform-modules-commonjs to your Babel config.

tasks/coverage/typescript/tests/cases/compiler/requireOfJsonFileWithoutOutDir.ts
semantic error: `import lib = require(...);` is only supported when compiling modules to CommonJS.
Please consider using `import lib from '...';` alongside Typescript's --allowSyntheticDefaultImports option, or add @babel/plugin-transform-modules-commonjs to your Babel config.
`import lib = require(...);` is only supported when compiling modules to CommonJS.
Please consider using `import lib from '...';` alongside Typescript's --allowSyntheticDefaultImports option, or add @babel/plugin-transform-modules-commonjs to your Babel config.

tasks/coverage/typescript/tests/cases/compiler/requireOfJsonFile_PathMapping.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["foobar"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/reservedNameOnModuleImport.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["test"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/resolutionCandidateFromPackageJsonField2.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["a", "b"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/resolveModuleNameWithSameLetDeclarationName2.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["punycode"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/restParamUsingMappedTypeOverUnionConstraint.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["HomomorphicMappedType"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/restParameterTypeInstantiation.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["TestGeneric", "removeF", "result"]
current  scope ScopeId(0): ["removeF", "result"]
Bindings Mismatch:
previous scope ScopeId(2): ["TX", "f", "rest"]
current  scope ScopeId(1): ["f", "rest"]

tasks/coverage/typescript/tests/cases/compiler/restTypeRetainsMappyness.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Foo", "test"]
current  scope ScopeId(0): ["test"]
Bindings Mismatch:
previous scope ScopeId(3): ["T", "arr", "fn"]
current  scope ScopeId(1): ["arr", "fn"]

tasks/coverage/typescript/tests/cases/compiler/restUnion2.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["nullUnion", "rest2", "rest3", "undefinedUnion"]
current  scope ScopeId(0): ["rest2", "rest3"]
reference Mismatch:
previous reference ReferenceId(0): Some("undefinedUnion")
current  reference ReferenceId(0): None
reference Mismatch:
previous reference ReferenceId(1): Some("nullUnion")
current  reference ReferenceId(1): None

tasks/coverage/typescript/tests/cases/compiler/returnInfiniteIntersection.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(2): ["T", "subkey"]
current  scope ScopeId(2): ["subkey"]

tasks/coverage/typescript/tests/cases/compiler/returnTypeInferenceNotTooBroad.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Opts", "Signs", "Wrapper", "y", "yone", "yun"]
current  scope ScopeId(0): ["y", "yone", "yun"]

tasks/coverage/typescript/tests/cases/compiler/returnTypeParameterWithModules.ts
semantic error: Semantic Collector failed after transform
Missing SymbolId: M1
Missing SymbolId: _M
Missing ReferenceId: _M
Missing ReferenceId: reduce
Missing ReferenceId: M1
Missing ReferenceId: M1
Missing SymbolId: M2
Missing SymbolId: _M2
Missing ReferenceId: _M2
Missing ReferenceId: compose
Missing ReferenceId: _M2
Missing ReferenceId: compose2
Missing ReferenceId: M2
Missing ReferenceId: M2

tasks/coverage/typescript/tests/cases/compiler/returnTypePredicateIsInstantiateInContextOfTarget.tsx
semantic error: Bindings Mismatch:
previous scope ScopeId(1): ["T"]
current  scope ScopeId(1): []
Bindings Mismatch:
previous scope ScopeId(2): ["T", "obj"]
current  scope ScopeId(2): ["obj"]

tasks/coverage/typescript/tests/cases/compiler/reuseInnerModuleMember.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["M"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/reverseInferenceInContextualInstantiation.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(1): ["T", "a", "b"]
current  scope ScopeId(1): ["a", "b"]

tasks/coverage/typescript/tests/cases/compiler/reverseMappedTupleContext.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["CompilerOptions", "Definition", "KeepLiteralStrings", "Schema", "created1", "created2", "result1", "result2", "result4"]
current  scope ScopeId(0): ["created1", "created2", "result1", "result2", "result4"]

tasks/coverage/typescript/tests/cases/compiler/reverseMappedTypeAssignableToIndex.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["InferFromMapped", "Inferred", "LiteralType", "Mapped", "MappedLiteralType", "Test1"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/reverseMappedTypeContextualTypesPerElementOfTupleConstraint.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Tuple"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/reverseMappedTypeRecursiveInference.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Bar", "Foo", "bar", "test"]
current  scope ScopeId(0): ["bar", "test"]
Bindings Mismatch:
previous scope ScopeId(6): ["V", "value"]
current  scope ScopeId(1): ["value"]

tasks/coverage/typescript/tests/cases/compiler/reverseMappedUnionInference.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["AnyExtractor", "Extractor", "Identifier", "StringLiteral", "identifierExtractor", "myUnion", "stringExtractor"]
current  scope ScopeId(0): ["identifierExtractor", "myUnion", "stringExtractor"]

tasks/coverage/typescript/tests/cases/compiler/reversedRecusiveTypeInstantiation.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["A", "a"]
current  scope ScopeId(0): ["a"]

tasks/coverage/typescript/tests/cases/compiler/selfInLambdas.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["MouseEvent", "Window", "X", "o", "window"]
current  scope ScopeId(0): ["X", "o"]
reference Mismatch:
previous reference ReferenceId(2): Some("window")
current  reference ReferenceId(0): None

tasks/coverage/typescript/tests/cases/compiler/selfReferencingTypeReferenceInference.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Box", "InferRecursive", "Recursive", "t1", "t2", "t3"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/separate1-2.ts
semantic error: Semantic Collector failed after transform
Missing SymbolId: X
Missing SymbolId: _X
Missing ReferenceId: _X
Missing ReferenceId: f
Missing ReferenceId: X
Missing ReferenceId: X

tasks/coverage/typescript/tests/cases/compiler/sigantureIsSubTypeIfTheyAreIdentical.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["CacheService", "ICache"]
current  scope ScopeId(0): ["CacheService"]
Bindings Mismatch:
previous scope ScopeId(4): ["T", "key"]
current  scope ScopeId(2): ["key"]

tasks/coverage/typescript/tests/cases/compiler/signatureInstantiationWithRecursiveConstraints.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(2): ["T", "arg"]
current  scope ScopeId(2): ["arg"]
Bindings Mismatch:
previous scope ScopeId(4): ["T", "arg"]
current  scope ScopeId(4): ["arg"]

tasks/coverage/typescript/tests/cases/compiler/simpleRecursionWithBaseCase2.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["foo1", "foo2", "ps", "rec1", "rec2", "rec3", "rec4", "rec5", "rec6"]
current  scope ScopeId(0): ["foo1", "foo2", "rec1", "rec2", "rec3", "rec4", "rec5", "rec6"]
reference Mismatch:
previous reference ReferenceId(12): Some("ps")
current  reference ReferenceId(11): None
reference Mismatch:
previous reference ReferenceId(15): Some("ps")
current  reference ReferenceId(14): None

tasks/coverage/typescript/tests/cases/compiler/simplifyingConditionalWithInteriorConditionalIsRelated.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["ConditionalOrUndefined", "ConditionalType", "JustConditional", "JustGeneric", "f", "genericOrUndefined"]
current  scope ScopeId(0): ["ConditionalOrUndefined", "JustConditional", "JustGeneric", "f", "genericOrUndefined"]
Bindings Mismatch:
previous scope ScopeId(3): ["T"]
current  scope ScopeId(1): []
Bindings Mismatch:
previous scope ScopeId(4): ["T"]
current  scope ScopeId(2): []
Bindings Mismatch:
previous scope ScopeId(5): ["T"]
current  scope ScopeId(3): []
Bindings Mismatch:
previous scope ScopeId(6): ["T"]
current  scope ScopeId(4): []
Bindings Mismatch:
previous scope ScopeId(7): ["A", "One", "T", "x"]
current  scope ScopeId(5): ["x"]

tasks/coverage/typescript/tests/cases/compiler/singletonLabeledTuple.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Alias", "AliasOptional", "AliasRest", "AliasedRest", "Labeled", "Literal", "LiteralRest", "Normal", "NormalRest"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/sliceResultCast.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["x"]
current  scope ScopeId(0): []
reference Mismatch:
previous reference ReferenceId(0): Some("x")
current  reference ReferenceId(0): None

tasks/coverage/typescript/tests/cases/compiler/sourceMap-Comments.ts
semantic error: Semantic Collector failed after transform
Missing SymbolId: sas
Missing SymbolId: _sas
Missing SymbolId: tools
Missing SymbolId: _tools
Missing ReferenceId: _tools
Missing ReferenceId: Test
Missing ReferenceId: tools
Missing ReferenceId: tools
Missing ReferenceId: _sas
Missing ReferenceId: _sas
Missing ReferenceId: sas
Missing ReferenceId: sas

tasks/coverage/typescript/tests/cases/compiler/sourceMap-FileWithComments.ts
semantic error: Semantic Collector failed after transform
Missing SymbolId: Shapes
Missing SymbolId: _Shapes
Missing ReferenceId: _Shapes
Missing ReferenceId: Point
Missing ReferenceId: _Shapes
Missing ReferenceId: foo
Missing ReferenceId: Shapes
Missing ReferenceId: Shapes

tasks/coverage/typescript/tests/cases/compiler/sourceMap-InterfacePrecedingVariableDeclaration1.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["I", "x"]
current  scope ScopeId(0): ["x"]

tasks/coverage/typescript/tests/cases/compiler/sourceMap-StringLiteralWithNewLine.ts
semantic error: Semantic Collector failed after transform
Missing SymbolId: Foo
Missing SymbolId: _Foo
Missing ReferenceId: Foo
Missing ReferenceId: Foo

tasks/coverage/typescript/tests/cases/compiler/sourceMapForFunctionInInternalModuleWithCommentPrecedingStatement01.ts
semantic error: Semantic Collector failed after transform
Missing SymbolId: Q
Missing SymbolId: _Q
Missing ReferenceId: Q
Missing ReferenceId: Q

tasks/coverage/typescript/tests/cases/compiler/sourceMapValidationClasses.ts
semantic error: Semantic Collector failed after transform
Missing SymbolId: Foo
Missing SymbolId: _Foo
Missing SymbolId: Bar
Missing SymbolId: _Bar
Missing ReferenceId: Bar
Missing ReferenceId: Bar
Missing ReferenceId: _Foo
Missing ReferenceId: _Foo
Missing ReferenceId: Foo
Missing ReferenceId: Foo

tasks/coverage/typescript/tests/cases/compiler/sourceMapValidationDecorators.ts
semantic error: Unexpected token

tasks/coverage/typescript/tests/cases/compiler/sourceMapValidationDestructuringForArrayBindingPattern.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["MultiSkilledRobot", "Robot", "console", "getMultiRobot", "getRobot", "multiRobotA", "multiRobotB", "robotA"]
current  scope ScopeId(0): ["getMultiRobot", "getRobot", "multiRobotA", "multiRobotB", "robotA"]
reference Mismatch:
previous reference ReferenceId(8): Some("console")
current  reference ReferenceId(5): None
reference Mismatch:
previous reference ReferenceId(13): Some("console")
current  reference ReferenceId(10): None
reference Mismatch:
previous reference ReferenceId(17): Some("console")
current  reference ReferenceId(14): None
reference Mismatch:
previous reference ReferenceId(22): Some("console")
current  reference ReferenceId(19): None
reference Mismatch:
previous reference ReferenceId(27): Some("console")
current  reference ReferenceId(24): None
reference Mismatch:
previous reference ReferenceId(31): Some("console")
current  reference ReferenceId(28): None
reference Mismatch:
previous reference ReferenceId(36): Some("console")
current  reference ReferenceId(33): None
reference Mismatch:
previous reference ReferenceId(41): Some("console")
current  reference ReferenceId(38): None
reference Mismatch:
previous reference ReferenceId(45): Some("console")
current  reference ReferenceId(42): None
reference Mismatch:
previous reference ReferenceId(50): Some("console")
current  reference ReferenceId(47): None
reference Mismatch:
previous reference ReferenceId(55): Some("console")
current  reference ReferenceId(52): None
reference Mismatch:
previous reference ReferenceId(59): Some("console")
current  reference ReferenceId(56): None
reference Mismatch:
previous reference ReferenceId(64): Some("console")
current  reference ReferenceId(61): None
reference Mismatch:
previous reference ReferenceId(69): Some("console")
current  reference ReferenceId(66): None
reference Mismatch:
previous reference ReferenceId(73): Some("console")
current  reference ReferenceId(70): None
reference Mismatch:
previous reference ReferenceId(78): Some("console")
current  reference ReferenceId(75): None
reference Mismatch:
previous reference ReferenceId(83): Some("console")
current  reference ReferenceId(80): None
reference Mismatch:
previous reference ReferenceId(87): Some("console")
current  reference ReferenceId(84): None
reference Mismatch:
previous reference ReferenceId(92): Some("console")
current  reference ReferenceId(89): None
reference Mismatch:
previous reference ReferenceId(97): Some("console")
current  reference ReferenceId(94): None
reference Mismatch:
previous reference ReferenceId(101): Some("console")
current  reference ReferenceId(98): None
reference Mismatch:
previous reference ReferenceId(106): Some("console")
current  reference ReferenceId(103): None
reference Mismatch:
previous reference ReferenceId(111): Some("console")
current  reference ReferenceId(108): None
reference Mismatch:
previous reference ReferenceId(115): Some("console")
current  reference ReferenceId(112): None

tasks/coverage/typescript/tests/cases/compiler/sourceMapValidationDestructuringForArrayBindingPattern2.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["MultiSkilledRobot", "Robot", "console", "getMultiRobot", "getRobot", "i", "multiRobotA", "multiRobotAInfo", "multiRobotB", "nameA", "nameA2", "nameB", "nameMA", "numberA2", "numberA3", "numberB", "primarySkillA", "robotA", "robotAInfo", "secondarySkillA", "skillA2"]
current  scope ScopeId(0): ["getMultiRobot", "getRobot", "i", "multiRobotA", "multiRobotAInfo", "multiRobotB", "nameA", "nameA2", "nameB", "nameMA", "numberA2", "numberA3", "numberB", "primarySkillA", "robotA", "robotAInfo", "secondarySkillA", "skillA2"]
reference Mismatch:
previous reference ReferenceId(10): Some("console")
current  reference ReferenceId(7): None
reference Mismatch:
previous reference ReferenceId(17): Some("console")
current  reference ReferenceId(14): None
reference Mismatch:
previous reference ReferenceId(23): Some("console")
current  reference ReferenceId(20): None
reference Mismatch:
previous reference ReferenceId(31): Some("console")
current  reference ReferenceId(28): None
reference Mismatch:
previous reference ReferenceId(39): Some("console")
current  reference ReferenceId(36): None
reference Mismatch:
previous reference ReferenceId(46): Some("console")
current  reference ReferenceId(43): None
reference Mismatch:
previous reference ReferenceId(53): Some("console")
current  reference ReferenceId(50): None
reference Mismatch:
previous reference ReferenceId(60): Some("console")
current  reference ReferenceId(57): None
reference Mismatch:
previous reference ReferenceId(66): Some("console")
current  reference ReferenceId(63): None
reference Mismatch:
previous reference ReferenceId(73): Some("console")
current  reference ReferenceId(70): None
reference Mismatch:
previous reference ReferenceId(80): Some("console")
current  reference ReferenceId(77): None
reference Mismatch:
previous reference ReferenceId(86): Some("console")
current  reference ReferenceId(83): None
reference Mismatch:
previous reference ReferenceId(95): Some("console")
current  reference ReferenceId(92): None
reference Mismatch:
previous reference ReferenceId(104): Some("console")
current  reference ReferenceId(101): None
reference Mismatch:
previous reference ReferenceId(112): Some("console")
current  reference ReferenceId(109): None
reference Mismatch:
previous reference ReferenceId(121): Some("console")
current  reference ReferenceId(118): None
reference Mismatch:
previous reference ReferenceId(130): Some("console")
current  reference ReferenceId(127): None
reference Mismatch:
previous reference ReferenceId(138): Some("console")
current  reference ReferenceId(135): None
reference Mismatch:
previous reference ReferenceId(146): Some("console")
current  reference ReferenceId(143): None
reference Mismatch:
previous reference ReferenceId(154): Some("console")
current  reference ReferenceId(151): None
reference Mismatch:
previous reference ReferenceId(162): Some("console")
current  reference ReferenceId(158): None
reference Mismatch:
previous reference ReferenceId(169): Some("console")
current  reference ReferenceId(165): None
reference Mismatch:
previous reference ReferenceId(176): Some("console")
current  reference ReferenceId(172): None
reference Mismatch:
previous reference ReferenceId(183): Some("console")
current  reference ReferenceId(178): None

tasks/coverage/typescript/tests/cases/compiler/sourceMapValidationDestructuringForArrayBindingPatternDefaultValues.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["MultiSkilledRobot", "Robot", "console", "getMultiRobot", "getRobot", "multiRobotA", "multiRobotB", "robotA"]
current  scope ScopeId(0): ["getMultiRobot", "getRobot", "multiRobotA", "multiRobotB", "robotA"]
reference Mismatch:
previous reference ReferenceId(8): Some("console")
current  reference ReferenceId(5): None
reference Mismatch:
previous reference ReferenceId(13): Some("console")
current  reference ReferenceId(10): None
reference Mismatch:
previous reference ReferenceId(17): Some("console")
current  reference ReferenceId(14): None
reference Mismatch:
previous reference ReferenceId(22): Some("console")
current  reference ReferenceId(19): None
reference Mismatch:
previous reference ReferenceId(27): Some("console")
current  reference ReferenceId(24): None
reference Mismatch:
previous reference ReferenceId(31): Some("console")
current  reference ReferenceId(28): None
reference Mismatch:
previous reference ReferenceId(36): Some("console")
current  reference ReferenceId(33): None
reference Mismatch:
previous reference ReferenceId(41): Some("console")
current  reference ReferenceId(38): None
reference Mismatch:
previous reference ReferenceId(45): Some("console")
current  reference ReferenceId(42): None
reference Mismatch:
previous reference ReferenceId(50): Some("console")
current  reference ReferenceId(47): None
reference Mismatch:
previous reference ReferenceId(55): Some("console")
current  reference ReferenceId(52): None
reference Mismatch:
previous reference ReferenceId(59): Some("console")
current  reference ReferenceId(56): None
reference Mismatch:
previous reference ReferenceId(64): Some("console")
current  reference ReferenceId(61): None
reference Mismatch:
previous reference ReferenceId(69): Some("console")
current  reference ReferenceId(66): None
reference Mismatch:
previous reference ReferenceId(73): Some("console")
current  reference ReferenceId(70): None
reference Mismatch:
previous reference ReferenceId(78): Some("console")
current  reference ReferenceId(75): None
reference Mismatch:
previous reference ReferenceId(83): Some("console")
current  reference ReferenceId(80): None
reference Mismatch:
previous reference ReferenceId(87): Some("console")
current  reference ReferenceId(84): None
reference Mismatch:
previous reference ReferenceId(92): Some("console")
current  reference ReferenceId(89): None
reference Mismatch:
previous reference ReferenceId(97): Some("console")
current  reference ReferenceId(94): None
reference Mismatch:
previous reference ReferenceId(101): Some("console")
current  reference ReferenceId(98): None

tasks/coverage/typescript/tests/cases/compiler/sourceMapValidationDestructuringForArrayBindingPatternDefaultValues2.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["MultiSkilledRobot", "Robot", "console", "getMultiRobot", "getRobot", "i", "multiRobotA", "multiRobotAInfo", "multiRobotB", "nameA", "nameA2", "nameB", "nameMA", "numberA2", "numberA3", "numberB", "primarySkillA", "robotA", "robotAInfo", "secondarySkillA", "skillA2"]
current  scope ScopeId(0): ["getMultiRobot", "getRobot", "i", "multiRobotA", "multiRobotAInfo", "multiRobotB", "nameA", "nameA2", "nameB", "nameMA", "numberA2", "numberA3", "numberB", "primarySkillA", "robotA", "robotAInfo", "secondarySkillA", "skillA2"]
reference Mismatch:
previous reference ReferenceId(10): Some("console")
current  reference ReferenceId(7): None
reference Mismatch:
previous reference ReferenceId(17): Some("console")
current  reference ReferenceId(14): None
reference Mismatch:
previous reference ReferenceId(23): Some("console")
current  reference ReferenceId(20): None
reference Mismatch:
previous reference ReferenceId(31): Some("console")
current  reference ReferenceId(28): None
reference Mismatch:
previous reference ReferenceId(39): Some("console")
current  reference ReferenceId(36): None
reference Mismatch:
previous reference ReferenceId(46): Some("console")
current  reference ReferenceId(43): None
reference Mismatch:
previous reference ReferenceId(53): Some("console")
current  reference ReferenceId(50): None
reference Mismatch:
previous reference ReferenceId(60): Some("console")
current  reference ReferenceId(57): None
reference Mismatch:
previous reference ReferenceId(66): Some("console")
current  reference ReferenceId(63): None
reference Mismatch:
previous reference ReferenceId(73): Some("console")
current  reference ReferenceId(70): None
reference Mismatch:
previous reference ReferenceId(80): Some("console")
current  reference ReferenceId(77): None
reference Mismatch:
previous reference ReferenceId(86): Some("console")
current  reference ReferenceId(83): None
reference Mismatch:
previous reference ReferenceId(95): Some("console")
current  reference ReferenceId(92): None
reference Mismatch:
previous reference ReferenceId(104): Some("console")
current  reference ReferenceId(101): None
reference Mismatch:
previous reference ReferenceId(112): Some("console")
current  reference ReferenceId(109): None
reference Mismatch:
previous reference ReferenceId(117): Some("console")
current  reference ReferenceId(114): None
reference Mismatch:
previous reference ReferenceId(126): Some("console")
current  reference ReferenceId(123): None
reference Mismatch:
previous reference ReferenceId(134): Some("console")
current  reference ReferenceId(131): None
reference Mismatch:
previous reference ReferenceId(142): Some("console")
current  reference ReferenceId(139): None
reference Mismatch:
previous reference ReferenceId(150): Some("console")
current  reference ReferenceId(147): None
reference Mismatch:
previous reference ReferenceId(158): Some("console")
current  reference ReferenceId(154): None

tasks/coverage/typescript/tests/cases/compiler/sourceMapValidationDestructuringForObjectBindingPattern.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["MultiRobot", "Robot", "console", "getMultiRobot", "getRobot", "multiRobot", "robot"]
current  scope ScopeId(0): ["getMultiRobot", "getRobot", "multiRobot", "robot"]
reference Mismatch:
previous reference ReferenceId(7): Some("console")
current  reference ReferenceId(5): None
reference Mismatch:
previous reference ReferenceId(12): Some("console")
current  reference ReferenceId(10): None
reference Mismatch:
previous reference ReferenceId(17): Some("console")
current  reference ReferenceId(14): None
reference Mismatch:
previous reference ReferenceId(22): Some("console")
current  reference ReferenceId(19): None
reference Mismatch:
previous reference ReferenceId(27): Some("console")
current  reference ReferenceId(24): None
reference Mismatch:
previous reference ReferenceId(32): Some("console")
current  reference ReferenceId(28): None
reference Mismatch:
previous reference ReferenceId(37): Some("console")
current  reference ReferenceId(33): None
reference Mismatch:
previous reference ReferenceId(42): Some("console")
current  reference ReferenceId(38): None
reference Mismatch:
previous reference ReferenceId(47): Some("console")
current  reference ReferenceId(42): None
reference Mismatch:
previous reference ReferenceId(52): Some("console")
current  reference ReferenceId(47): None
reference Mismatch:
previous reference ReferenceId(57): Some("console")
current  reference ReferenceId(52): None
reference Mismatch:
previous reference ReferenceId(62): Some("console")
current  reference ReferenceId(56): None

tasks/coverage/typescript/tests/cases/compiler/sourceMapValidationDestructuringForObjectBindingPattern2.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["MultiRobot", "Robot", "console", "getMultiRobot", "getRobot", "i", "multiRobot", "name", "nameA", "primary", "primaryA", "robot", "secondary", "secondaryA", "skill", "skillA"]
current  scope ScopeId(0): ["getMultiRobot", "getRobot", "i", "multiRobot", "name", "nameA", "primary", "primaryA", "robot", "secondary", "secondaryA", "skill", "skillA"]
reference Mismatch:
previous reference ReferenceId(9): Some("console")
current  reference ReferenceId(7): None
reference Mismatch:
previous reference ReferenceId(16): Some("console")
current  reference ReferenceId(14): None
reference Mismatch:
previous reference ReferenceId(23): Some("console")
current  reference ReferenceId(20): None
reference Mismatch:
previous reference ReferenceId(31): Some("console")
current  reference ReferenceId(28): None
reference Mismatch:
previous reference ReferenceId(39): Some("console")
current  reference ReferenceId(36): None
reference Mismatch:
previous reference ReferenceId(47): Some("console")
current  reference ReferenceId(43): None
reference Mismatch:
previous reference ReferenceId(54): Some("console")
current  reference ReferenceId(50): None
reference Mismatch:
previous reference ReferenceId(61): Some("console")
current  reference ReferenceId(57): None
reference Mismatch:
previous reference ReferenceId(68): Some("console")
current  reference ReferenceId(63): None
reference Mismatch:
previous reference ReferenceId(76): Some("console")
current  reference ReferenceId(71): None
reference Mismatch:
previous reference ReferenceId(84): Some("console")
current  reference ReferenceId(79): None
reference Mismatch:
previous reference ReferenceId(92): Some("console")
current  reference ReferenceId(86): None
reference Mismatch:
previous reference ReferenceId(100): Some("console")
current  reference ReferenceId(94): None
reference Mismatch:
previous reference ReferenceId(108): Some("console")
current  reference ReferenceId(102): None
reference Mismatch:
previous reference ReferenceId(116): Some("console")
current  reference ReferenceId(109): None
reference Mismatch:
previous reference ReferenceId(125): Some("console")
current  reference ReferenceId(118): None
reference Mismatch:
previous reference ReferenceId(134): Some("console")
current  reference ReferenceId(127): None
reference Mismatch:
previous reference ReferenceId(143): Some("console")
current  reference ReferenceId(135): None
reference Mismatch:
previous reference ReferenceId(151): Some("console")
current  reference ReferenceId(143): None
reference Mismatch:
previous reference ReferenceId(159): Some("console")
current  reference ReferenceId(151): None
reference Mismatch:
previous reference ReferenceId(167): Some("console")
current  reference ReferenceId(158): None
reference Mismatch:
previous reference ReferenceId(176): Some("console")
current  reference ReferenceId(167): None
reference Mismatch:
previous reference ReferenceId(185): Some("console")
current  reference ReferenceId(176): None
reference Mismatch:
previous reference ReferenceId(194): Some("console")
current  reference ReferenceId(184): None

tasks/coverage/typescript/tests/cases/compiler/sourceMapValidationDestructuringForObjectBindingPatternDefaultValues.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["MultiRobot", "Robot", "console", "getMultiRobot", "getRobot", "multiRobot", "robot"]
current  scope ScopeId(0): ["getMultiRobot", "getRobot", "multiRobot", "robot"]
reference Mismatch:
previous reference ReferenceId(7): Some("console")
current  reference ReferenceId(5): None
reference Mismatch:
previous reference ReferenceId(12): Some("console")
current  reference ReferenceId(10): None
reference Mismatch:
previous reference ReferenceId(17): Some("console")
current  reference ReferenceId(14): None
reference Mismatch:
previous reference ReferenceId(22): Some("console")
current  reference ReferenceId(19): None
reference Mismatch:
previous reference ReferenceId(27): Some("console")
current  reference ReferenceId(24): None
reference Mismatch:
previous reference ReferenceId(32): Some("console")
current  reference ReferenceId(28): None
reference Mismatch:
previous reference ReferenceId(37): Some("console")
current  reference ReferenceId(33): None
reference Mismatch:
previous reference ReferenceId(42): Some("console")
current  reference ReferenceId(38): None
reference Mismatch:
previous reference ReferenceId(47): Some("console")
current  reference ReferenceId(42): None
reference Mismatch:
previous reference ReferenceId(52): Some("console")
current  reference ReferenceId(47): None
reference Mismatch:
previous reference ReferenceId(57): Some("console")
current  reference ReferenceId(52): None
reference Mismatch:
previous reference ReferenceId(62): Some("console")
current  reference ReferenceId(56): None

tasks/coverage/typescript/tests/cases/compiler/sourceMapValidationDestructuringForObjectBindingPatternDefaultValues2.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["MultiRobot", "Robot", "console", "getMultiRobot", "getRobot", "i", "multiRobot", "name", "nameA", "primary", "primaryA", "robot", "secondary", "secondaryA", "skill", "skillA"]
current  scope ScopeId(0): ["getMultiRobot", "getRobot", "i", "multiRobot", "name", "nameA", "primary", "primaryA", "robot", "secondary", "secondaryA", "skill", "skillA"]
reference Mismatch:
previous reference ReferenceId(9): Some("console")
current  reference ReferenceId(7): None
reference Mismatch:
previous reference ReferenceId(16): Some("console")
current  reference ReferenceId(14): None
reference Mismatch:
previous reference ReferenceId(23): Some("console")
current  reference ReferenceId(20): None
reference Mismatch:
previous reference ReferenceId(31): Some("console")
current  reference ReferenceId(28): None
reference Mismatch:
previous reference ReferenceId(39): Some("console")
current  reference ReferenceId(36): None
reference Mismatch:
previous reference ReferenceId(47): Some("console")
current  reference ReferenceId(43): None
reference Mismatch:
previous reference ReferenceId(54): Some("console")
current  reference ReferenceId(50): None
reference Mismatch:
previous reference ReferenceId(61): Some("console")
current  reference ReferenceId(57): None
reference Mismatch:
previous reference ReferenceId(68): Some("console")
current  reference ReferenceId(63): None
reference Mismatch:
previous reference ReferenceId(76): Some("console")
current  reference ReferenceId(71): None
reference Mismatch:
previous reference ReferenceId(84): Some("console")
current  reference ReferenceId(79): None
reference Mismatch:
previous reference ReferenceId(92): Some("console")
current  reference ReferenceId(86): None
reference Mismatch:
previous reference ReferenceId(100): Some("console")
current  reference ReferenceId(94): None
reference Mismatch:
previous reference ReferenceId(108): Some("console")
current  reference ReferenceId(102): None
reference Mismatch:
previous reference ReferenceId(116): Some("console")
current  reference ReferenceId(109): None
reference Mismatch:
previous reference ReferenceId(125): Some("console")
current  reference ReferenceId(118): None
reference Mismatch:
previous reference ReferenceId(134): Some("console")
current  reference ReferenceId(127): None
reference Mismatch:
previous reference ReferenceId(143): Some("console")
current  reference ReferenceId(135): None
reference Mismatch:
previous reference ReferenceId(151): Some("console")
current  reference ReferenceId(143): None
reference Mismatch:
previous reference ReferenceId(159): Some("console")
current  reference ReferenceId(151): None
reference Mismatch:
previous reference ReferenceId(167): Some("console")
current  reference ReferenceId(158): None
reference Mismatch:
previous reference ReferenceId(176): Some("console")
current  reference ReferenceId(167): None
reference Mismatch:
previous reference ReferenceId(185): Some("console")
current  reference ReferenceId(176): None
reference Mismatch:
previous reference ReferenceId(194): Some("console")
current  reference ReferenceId(184): None

tasks/coverage/typescript/tests/cases/compiler/sourceMapValidationDestructuringForOfArrayBindingPattern.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["MultiSkilledRobot", "Robot", "console", "getMultiRobots", "getRobots", "multiRobotA", "multiRobotB", "multiRobots", "robotA", "robotB", "robots"]
current  scope ScopeId(0): ["getMultiRobots", "getRobots", "multiRobotA", "multiRobotB", "multiRobots", "robotA", "robotB", "robots"]
reference Mismatch:
previous reference ReferenceId(11): Some("console")
current  reference ReferenceId(7): None
reference Mismatch:
previous reference ReferenceId(14): Some("console")
current  reference ReferenceId(10): None
reference Mismatch:
previous reference ReferenceId(18): Some("console")
current  reference ReferenceId(14): None
reference Mismatch:
previous reference ReferenceId(21): Some("console")
current  reference ReferenceId(17): None
reference Mismatch:
previous reference ReferenceId(24): Some("console")
current  reference ReferenceId(20): None
reference Mismatch:
previous reference ReferenceId(28): Some("console")
current  reference ReferenceId(24): None
reference Mismatch:
previous reference ReferenceId(31): Some("console")
current  reference ReferenceId(27): None
reference Mismatch:
previous reference ReferenceId(34): Some("console")
current  reference ReferenceId(30): None
reference Mismatch:
previous reference ReferenceId(38): Some("console")
current  reference ReferenceId(34): None
reference Mismatch:
previous reference ReferenceId(41): Some("console")
current  reference ReferenceId(37): None
reference Mismatch:
previous reference ReferenceId(44): Some("console")
current  reference ReferenceId(40): None
reference Mismatch:
previous reference ReferenceId(48): Some("console")
current  reference ReferenceId(44): None
reference Mismatch:
previous reference ReferenceId(51): Some("console")
current  reference ReferenceId(47): None
reference Mismatch:
previous reference ReferenceId(54): Some("console")
current  reference ReferenceId(50): None
reference Mismatch:
previous reference ReferenceId(58): Some("console")
current  reference ReferenceId(54): None
reference Mismatch:
previous reference ReferenceId(61): Some("console")
current  reference ReferenceId(57): None
reference Mismatch:
previous reference ReferenceId(64): Some("console")
current  reference ReferenceId(60): None
reference Mismatch:
previous reference ReferenceId(68): Some("console")
current  reference ReferenceId(64): None
reference Mismatch:
previous reference ReferenceId(71): Some("console")
current  reference ReferenceId(67): None
reference Mismatch:
previous reference ReferenceId(74): Some("console")
current  reference ReferenceId(70): None
reference Mismatch:
previous reference ReferenceId(78): Some("console")
current  reference ReferenceId(74): None
reference Mismatch:
previous reference ReferenceId(81): Some("console")
current  reference ReferenceId(77): None
reference Mismatch:
previous reference ReferenceId(84): Some("console")
current  reference ReferenceId(80): None
reference Mismatch:
previous reference ReferenceId(88): Some("console")
current  reference ReferenceId(84): None

tasks/coverage/typescript/tests/cases/compiler/sourceMapValidationDestructuringForOfArrayBindingPattern2.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["MultiSkilledRobot", "Robot", "console", "getMultiRobots", "getRobots", "multiRobotA", "multiRobotAInfo", "multiRobotB", "multiRobots", "nameA", "nameA2", "nameB", "nameMA", "numberA2", "numberA3", "numberB", "primarySkillA", "robotA", "robotAInfo", "robotB", "robots", "secondarySkillA", "skillA2"]
current  scope ScopeId(0): ["getMultiRobots", "getRobots", "multiRobotA", "multiRobotAInfo", "multiRobotB", "multiRobots", "nameA", "nameA2", "nameB", "nameMA", "numberA2", "numberA3", "numberB", "primarySkillA", "robotA", "robotAInfo", "robotB", "robots", "secondarySkillA", "skillA2"]
reference Mismatch:
previous reference ReferenceId(12): Some("console")
current  reference ReferenceId(8): None
reference Mismatch:
previous reference ReferenceId(16): Some("console")
current  reference ReferenceId(12): None
reference Mismatch:
previous reference ReferenceId(21): Some("console")
current  reference ReferenceId(17): None
reference Mismatch:
previous reference ReferenceId(26): Some("console")
current  reference ReferenceId(22): None
reference Mismatch:
previous reference ReferenceId(31): Some("console")
current  reference ReferenceId(27): None
reference Mismatch:
previous reference ReferenceId(37): Some("console")
current  reference ReferenceId(33): None
reference Mismatch:
previous reference ReferenceId(41): Some("console")
current  reference ReferenceId(37): None
reference Mismatch:
previous reference ReferenceId(45): Some("console")
current  reference ReferenceId(41): None
reference Mismatch:
previous reference ReferenceId(50): Some("console")
current  reference ReferenceId(46): None
reference Mismatch:
previous reference ReferenceId(54): Some("console")
current  reference ReferenceId(50): None
reference Mismatch:
previous reference ReferenceId(58): Some("console")
current  reference ReferenceId(54): None
reference Mismatch:
previous reference ReferenceId(63): Some("console")
current  reference ReferenceId(59): None
reference Mismatch:
previous reference ReferenceId(69): Some("console")
current  reference ReferenceId(65): None
reference Mismatch:
previous reference ReferenceId(75): Some("console")
current  reference ReferenceId(71): None
reference Mismatch:
previous reference ReferenceId(82): Some("console")
current  reference ReferenceId(78): None
reference Mismatch:
previous reference ReferenceId(88): Some("console")
current  reference ReferenceId(84): None
reference Mismatch:
previous reference ReferenceId(94): Some("console")
current  reference ReferenceId(90): None
reference Mismatch:
previous reference ReferenceId(101): Some("console")
current  reference ReferenceId(97): None
reference Mismatch:
previous reference ReferenceId(106): Some("console")
current  reference ReferenceId(102): None
reference Mismatch:
previous reference ReferenceId(111): Some("console")
current  reference ReferenceId(107): None
reference Mismatch:
previous reference ReferenceId(117): Some("console")
current  reference ReferenceId(113): None
reference Mismatch:
previous reference ReferenceId(121): Some("console")
current  reference ReferenceId(117): None
reference Mismatch:
previous reference ReferenceId(125): Some("console")
current  reference ReferenceId(121): None
reference Mismatch:
previous reference ReferenceId(130): Some("console")
current  reference ReferenceId(126): None

tasks/coverage/typescript/tests/cases/compiler/sourceMapValidationDestructuringForOfArrayBindingPatternDefaultValues.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["MultiSkilledRobot", "Robot", "console", "getMultiRobots", "getRobots", "multiRobotA", "multiRobotB", "multiRobots", "robotA", "robotB", "robots"]
current  scope ScopeId(0): ["getMultiRobots", "getRobots", "multiRobotA", "multiRobotB", "multiRobots", "robotA", "robotB", "robots"]
reference Mismatch:
previous reference ReferenceId(11): Some("console")
current  reference ReferenceId(7): None
reference Mismatch:
previous reference ReferenceId(14): Some("console")
current  reference ReferenceId(10): None
reference Mismatch:
previous reference ReferenceId(18): Some("console")
current  reference ReferenceId(14): None
reference Mismatch:
previous reference ReferenceId(21): Some("console")
current  reference ReferenceId(17): None
reference Mismatch:
previous reference ReferenceId(24): Some("console")
current  reference ReferenceId(20): None
reference Mismatch:
previous reference ReferenceId(28): Some("console")
current  reference ReferenceId(24): None
reference Mismatch:
previous reference ReferenceId(31): Some("console")
current  reference ReferenceId(27): None
reference Mismatch:
previous reference ReferenceId(34): Some("console")
current  reference ReferenceId(30): None
reference Mismatch:
previous reference ReferenceId(38): Some("console")
current  reference ReferenceId(34): None
reference Mismatch:
previous reference ReferenceId(41): Some("console")
current  reference ReferenceId(37): None
reference Mismatch:
previous reference ReferenceId(44): Some("console")
current  reference ReferenceId(40): None
reference Mismatch:
previous reference ReferenceId(48): Some("console")
current  reference ReferenceId(44): None
reference Mismatch:
previous reference ReferenceId(51): Some("console")
current  reference ReferenceId(47): None
reference Mismatch:
previous reference ReferenceId(54): Some("console")
current  reference ReferenceId(50): None
reference Mismatch:
previous reference ReferenceId(58): Some("console")
current  reference ReferenceId(54): None
reference Mismatch:
previous reference ReferenceId(61): Some("console")
current  reference ReferenceId(57): None
reference Mismatch:
previous reference ReferenceId(64): Some("console")
current  reference ReferenceId(60): None
reference Mismatch:
previous reference ReferenceId(68): Some("console")
current  reference ReferenceId(64): None
reference Mismatch:
previous reference ReferenceId(71): Some("console")
current  reference ReferenceId(67): None
reference Mismatch:
previous reference ReferenceId(74): Some("console")
current  reference ReferenceId(70): None
reference Mismatch:
previous reference ReferenceId(78): Some("console")
current  reference ReferenceId(74): None

tasks/coverage/typescript/tests/cases/compiler/sourceMapValidationDestructuringForOfArrayBindingPatternDefaultValues2.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["MultiSkilledRobot", "Robot", "console", "getMultiRobots", "getRobots", "multiRobotA", "multiRobotAInfo", "multiRobotB", "multiRobots", "nameA", "nameA2", "nameB", "nameMA", "numberA2", "numberA3", "numberB", "primarySkillA", "robotA", "robotAInfo", "robotB", "robots", "secondarySkillA", "skillA2"]
current  scope ScopeId(0): ["getMultiRobots", "getRobots", "multiRobotA", "multiRobotAInfo", "multiRobotB", "multiRobots", "nameA", "nameA2", "nameB", "nameMA", "numberA2", "numberA3", "numberB", "primarySkillA", "robotA", "robotAInfo", "robotB", "robots", "secondarySkillA", "skillA2"]
reference Mismatch:
previous reference ReferenceId(12): Some("console")
current  reference ReferenceId(8): None
reference Mismatch:
previous reference ReferenceId(16): Some("console")
current  reference ReferenceId(12): None
reference Mismatch:
previous reference ReferenceId(21): Some("console")
current  reference ReferenceId(17): None
reference Mismatch:
previous reference ReferenceId(26): Some("console")
current  reference ReferenceId(22): None
reference Mismatch:
previous reference ReferenceId(31): Some("console")
current  reference ReferenceId(27): None
reference Mismatch:
previous reference ReferenceId(37): Some("console")
current  reference ReferenceId(33): None
reference Mismatch:
previous reference ReferenceId(41): Some("console")
current  reference ReferenceId(37): None
reference Mismatch:
previous reference ReferenceId(45): Some("console")
current  reference ReferenceId(41): None
reference Mismatch:
previous reference ReferenceId(50): Some("console")
current  reference ReferenceId(46): None
reference Mismatch:
previous reference ReferenceId(54): Some("console")
current  reference ReferenceId(50): None
reference Mismatch:
previous reference ReferenceId(58): Some("console")
current  reference ReferenceId(54): None
reference Mismatch:
previous reference ReferenceId(63): Some("console")
current  reference ReferenceId(59): None
reference Mismatch:
previous reference ReferenceId(69): Some("console")
current  reference ReferenceId(65): None
reference Mismatch:
previous reference ReferenceId(75): Some("console")
current  reference ReferenceId(71): None
reference Mismatch:
previous reference ReferenceId(82): Some("console")
current  reference ReferenceId(78): None
reference Mismatch:
previous reference ReferenceId(88): Some("console")
current  reference ReferenceId(84): None
reference Mismatch:
previous reference ReferenceId(94): Some("console")
current  reference ReferenceId(90): None
reference Mismatch:
previous reference ReferenceId(101): Some("console")
current  reference ReferenceId(97): None
reference Mismatch:
previous reference ReferenceId(106): Some("console")
current  reference ReferenceId(102): None
reference Mismatch:
previous reference ReferenceId(111): Some("console")
current  reference ReferenceId(107): None
reference Mismatch:
previous reference ReferenceId(117): Some("console")
current  reference ReferenceId(113): None

tasks/coverage/typescript/tests/cases/compiler/sourceMapValidationDestructuringForOfObjectBindingPattern.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["MultiRobot", "Robot", "console", "getMultiRobots", "getRobots", "multiRobots", "robots"]
current  scope ScopeId(0): ["getMultiRobots", "getRobots", "multiRobots", "robots"]
reference Mismatch:
previous reference ReferenceId(5): Some("console")
current  reference ReferenceId(3): None
reference Mismatch:
previous reference ReferenceId(8): Some("console")
current  reference ReferenceId(6): None
reference Mismatch:
previous reference ReferenceId(10): Some("console")
current  reference ReferenceId(8): None
reference Mismatch:
previous reference ReferenceId(13): Some("console")
current  reference ReferenceId(11): None
reference Mismatch:
previous reference ReferenceId(16): Some("console")
current  reference ReferenceId(14): None
reference Mismatch:
previous reference ReferenceId(18): Some("console")
current  reference ReferenceId(16): None
reference Mismatch:
previous reference ReferenceId(21): Some("console")
current  reference ReferenceId(19): None
reference Mismatch:
previous reference ReferenceId(24): Some("console")
current  reference ReferenceId(22): None
reference Mismatch:
previous reference ReferenceId(26): Some("console")
current  reference ReferenceId(24): None
reference Mismatch:
previous reference ReferenceId(29): Some("console")
current  reference ReferenceId(27): None
reference Mismatch:
previous reference ReferenceId(32): Some("console")
current  reference ReferenceId(30): None
reference Mismatch:
previous reference ReferenceId(34): Some("console")
current  reference ReferenceId(32): None

tasks/coverage/typescript/tests/cases/compiler/sourceMapValidationDestructuringForOfObjectBindingPattern2.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["MultiRobot", "Robot", "console", "getMultiRobots", "getRobots", "i", "multiRobots", "name", "nameA", "primary", "primaryA", "robots", "secondary", "secondaryA", "skill", "skillA"]
current  scope ScopeId(0): ["getMultiRobots", "getRobots", "i", "multiRobots", "name", "nameA", "primary", "primaryA", "robots", "secondary", "secondaryA", "skill", "skillA"]
reference Mismatch:
previous reference ReferenceId(6): Some("console")
current  reference ReferenceId(4): None
reference Mismatch:
previous reference ReferenceId(10): Some("console")
current  reference ReferenceId(8): None
reference Mismatch:
previous reference ReferenceId(13): Some("console")
current  reference ReferenceId(11): None
reference Mismatch:
previous reference ReferenceId(18): Some("console")
current  reference ReferenceId(16): None
reference Mismatch:
previous reference ReferenceId(23): Some("console")
current  reference ReferenceId(21): None
reference Mismatch:
previous reference ReferenceId(27): Some("console")
current  reference ReferenceId(25): None
reference Mismatch:
previous reference ReferenceId(31): Some("console")
current  reference ReferenceId(29): None
reference Mismatch:
previous reference ReferenceId(35): Some("console")
current  reference ReferenceId(33): None
reference Mismatch:
previous reference ReferenceId(38): Some("console")
current  reference ReferenceId(36): None
reference Mismatch:
previous reference ReferenceId(43): Some("console")
current  reference ReferenceId(41): None
reference Mismatch:
previous reference ReferenceId(48): Some("console")
current  reference ReferenceId(46): None
reference Mismatch:
previous reference ReferenceId(52): Some("console")
current  reference ReferenceId(50): None
reference Mismatch:
previous reference ReferenceId(57): Some("console")
current  reference ReferenceId(55): None
reference Mismatch:
previous reference ReferenceId(62): Some("console")
current  reference ReferenceId(60): None
reference Mismatch:
previous reference ReferenceId(66): Some("console")
current  reference ReferenceId(64): None
reference Mismatch:
previous reference ReferenceId(72): Some("console")
current  reference ReferenceId(70): None
reference Mismatch:
previous reference ReferenceId(78): Some("console")
current  reference ReferenceId(76): None
reference Mismatch:
previous reference ReferenceId(83): Some("console")
current  reference ReferenceId(81): None
reference Mismatch:
previous reference ReferenceId(88): Some("console")
current  reference ReferenceId(86): None
reference Mismatch:
previous reference ReferenceId(93): Some("console")
current  reference ReferenceId(91): None
reference Mismatch:
previous reference ReferenceId(97): Some("console")
current  reference ReferenceId(95): None
reference Mismatch:
previous reference ReferenceId(103): Some("console")
current  reference ReferenceId(101): None
reference Mismatch:
previous reference ReferenceId(109): Some("console")
current  reference ReferenceId(107): None
reference Mismatch:
previous reference ReferenceId(114): Some("console")
current  reference ReferenceId(112): None

tasks/coverage/typescript/tests/cases/compiler/sourceMapValidationDestructuringForOfObjectBindingPatternDefaultValues.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["MultiRobot", "Robot", "console", "getMultiRobots", "getRobots", "multiRobots", "robots"]
current  scope ScopeId(0): ["getMultiRobots", "getRobots", "multiRobots", "robots"]
reference Mismatch:
previous reference ReferenceId(5): Some("console")
current  reference ReferenceId(3): None
reference Mismatch:
previous reference ReferenceId(8): Some("console")
current  reference ReferenceId(6): None
reference Mismatch:
previous reference ReferenceId(10): Some("console")
current  reference ReferenceId(8): None
reference Mismatch:
previous reference ReferenceId(13): Some("console")
current  reference ReferenceId(11): None
reference Mismatch:
previous reference ReferenceId(16): Some("console")
current  reference ReferenceId(14): None
reference Mismatch:
previous reference ReferenceId(19): Some("console")
current  reference ReferenceId(16): None
reference Mismatch:
previous reference ReferenceId(22): Some("console")
current  reference ReferenceId(19): None
reference Mismatch:
previous reference ReferenceId(25): Some("console")
current  reference ReferenceId(22): None
reference Mismatch:
previous reference ReferenceId(27): Some("console")
current  reference ReferenceId(24): None
reference Mismatch:
previous reference ReferenceId(30): Some("console")
current  reference ReferenceId(27): None
reference Mismatch:
previous reference ReferenceId(33): Some("console")
current  reference ReferenceId(30): None
reference Mismatch:
previous reference ReferenceId(36): Some("console")
current  reference ReferenceId(32): None

tasks/coverage/typescript/tests/cases/compiler/sourceMapValidationDestructuringForOfObjectBindingPatternDefaultValues2.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["MultiRobot", "Robot", "console", "getMultiRobots", "getRobots", "i", "multiRobots", "name", "nameA", "primary", "primaryA", "robots", "secondary", "secondaryA", "skill", "skillA"]
current  scope ScopeId(0): ["getMultiRobots", "getRobots", "i", "multiRobots", "name", "nameA", "primary", "primaryA", "robots", "secondary", "secondaryA", "skill", "skillA"]
reference Mismatch:
previous reference ReferenceId(6): Some("console")
current  reference ReferenceId(4): None
reference Mismatch:
previous reference ReferenceId(10): Some("console")
current  reference ReferenceId(8): None
reference Mismatch:
previous reference ReferenceId(13): Some("console")
current  reference ReferenceId(11): None
reference Mismatch:
previous reference ReferenceId(18): Some("console")
current  reference ReferenceId(16): None
reference Mismatch:
previous reference ReferenceId(23): Some("console")
current  reference ReferenceId(21): None
reference Mismatch:
previous reference ReferenceId(28): Some("console")
current  reference ReferenceId(25): None
reference Mismatch:
previous reference ReferenceId(32): Some("console")
current  reference ReferenceId(29): None
reference Mismatch:
previous reference ReferenceId(36): Some("console")
current  reference ReferenceId(33): None
reference Mismatch:
previous reference ReferenceId(39): Some("console")
current  reference ReferenceId(36): None
reference Mismatch:
previous reference ReferenceId(44): Some("console")
current  reference ReferenceId(41): None
reference Mismatch:
previous reference ReferenceId(49): Some("console")
current  reference ReferenceId(46): None
reference Mismatch:
previous reference ReferenceId(53): Some("console")
current  reference ReferenceId(50): None
reference Mismatch:
previous reference ReferenceId(58): Some("console")
current  reference ReferenceId(55): None
reference Mismatch:
previous reference ReferenceId(63): Some("console")
current  reference ReferenceId(60): None
reference Mismatch:
previous reference ReferenceId(67): Some("console")
current  reference ReferenceId(64): None
reference Mismatch:
previous reference ReferenceId(73): Some("console")
current  reference ReferenceId(70): None
reference Mismatch:
previous reference ReferenceId(79): Some("console")
current  reference ReferenceId(76): None
reference Mismatch:
previous reference ReferenceId(85): Some("console")
current  reference ReferenceId(81): None
reference Mismatch:
previous reference ReferenceId(90): Some("console")
current  reference ReferenceId(86): None
reference Mismatch:
previous reference ReferenceId(95): Some("console")
current  reference ReferenceId(91): None
reference Mismatch:
previous reference ReferenceId(99): Some("console")
current  reference ReferenceId(95): None
reference Mismatch:
previous reference ReferenceId(105): Some("console")
current  reference ReferenceId(101): None
reference Mismatch:
previous reference ReferenceId(111): Some("console")
current  reference ReferenceId(107): None
reference Mismatch:
previous reference ReferenceId(116): Some("console")
current  reference ReferenceId(112): None

tasks/coverage/typescript/tests/cases/compiler/sourceMapValidationDestructuringParameterNestedObjectBindingPattern.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Robot", "console", "foo1", "foo2", "foo3", "robotA"]
current  scope ScopeId(0): ["foo1", "foo2", "foo3", "robotA"]
reference Mismatch:
previous reference ReferenceId(2): Some("console")
current  reference ReferenceId(0): None
reference Mismatch:
previous reference ReferenceId(5): Some("console")
current  reference ReferenceId(2): None
reference Mismatch:
previous reference ReferenceId(8): Some("console")
current  reference ReferenceId(4): None

tasks/coverage/typescript/tests/cases/compiler/sourceMapValidationDestructuringParameterNestedObjectBindingPatternDefaultValues.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Robot", "console", "foo1", "foo2", "foo3", "robotA"]
current  scope ScopeId(0): ["foo1", "foo2", "foo3", "robotA"]
reference Mismatch:
previous reference ReferenceId(3): Some("console")
current  reference ReferenceId(1): None
reference Mismatch:
previous reference ReferenceId(7): Some("console")
current  reference ReferenceId(4): None
reference Mismatch:
previous reference ReferenceId(11): Some("console")
current  reference ReferenceId(7): None

tasks/coverage/typescript/tests/cases/compiler/sourceMapValidationDestructuringParameterObjectBindingPattern.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Robot", "console", "foo1", "foo2", "foo3", "hello", "robotA"]
current  scope ScopeId(0): ["foo1", "foo2", "foo3", "hello", "robotA"]
reference Mismatch:
previous reference ReferenceId(2): Some("console")
current  reference ReferenceId(0): None
reference Mismatch:
previous reference ReferenceId(5): Some("console")
current  reference ReferenceId(2): None
reference Mismatch:
previous reference ReferenceId(8): Some("console")
current  reference ReferenceId(4): None

tasks/coverage/typescript/tests/cases/compiler/sourceMapValidationDestructuringParameterObjectBindingPatternDefaultValues.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Robot", "console", "foo1", "foo2", "foo3", "hello", "robotA"]
current  scope ScopeId(0): ["foo1", "foo2", "foo3", "hello", "robotA"]
reference Mismatch:
previous reference ReferenceId(2): Some("console")
current  reference ReferenceId(0): None
reference Mismatch:
previous reference ReferenceId(5): Some("console")
current  reference ReferenceId(2): None
reference Mismatch:
previous reference ReferenceId(8): Some("console")
current  reference ReferenceId(4): None

tasks/coverage/typescript/tests/cases/compiler/sourceMapValidationDestructuringParametertArrayBindingPattern.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Robot", "console", "foo1", "foo2", "foo3", "foo4", "robotA"]
current  scope ScopeId(0): ["foo1", "foo2", "foo3", "foo4", "robotA"]
reference Mismatch:
previous reference ReferenceId(2): Some("console")
current  reference ReferenceId(0): None
reference Mismatch:
previous reference ReferenceId(5): Some("console")
current  reference ReferenceId(2): None
reference Mismatch:
previous reference ReferenceId(8): Some("console")
current  reference ReferenceId(4): None
reference Mismatch:
previous reference ReferenceId(11): Some("console")
current  reference ReferenceId(6): None

tasks/coverage/typescript/tests/cases/compiler/sourceMapValidationDestructuringParametertArrayBindingPattern2.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Robot", "console", "foo1", "foo2", "foo3", "foo4", "robotA"]
current  scope ScopeId(0): ["foo1", "foo2", "foo3", "foo4", "robotA"]
reference Mismatch:
previous reference ReferenceId(2): Some("console")
current  reference ReferenceId(0): None
reference Mismatch:
previous reference ReferenceId(5): Some("console")
current  reference ReferenceId(2): None
reference Mismatch:
previous reference ReferenceId(8): Some("console")
current  reference ReferenceId(4): None
reference Mismatch:
previous reference ReferenceId(11): Some("console")
current  reference ReferenceId(6): None

tasks/coverage/typescript/tests/cases/compiler/sourceMapValidationDestructuringParametertArrayBindingPatternDefaultValues.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Robot", "console", "foo1", "foo2", "foo3", "foo4", "robotA"]
current  scope ScopeId(0): ["foo1", "foo2", "foo3", "foo4", "robotA"]
reference Mismatch:
previous reference ReferenceId(2): Some("console")
current  reference ReferenceId(0): None
reference Mismatch:
previous reference ReferenceId(5): Some("console")
current  reference ReferenceId(2): None
reference Mismatch:
previous reference ReferenceId(8): Some("console")
current  reference ReferenceId(4): None
reference Mismatch:
previous reference ReferenceId(11): Some("console")
current  reference ReferenceId(6): None

tasks/coverage/typescript/tests/cases/compiler/sourceMapValidationDestructuringParametertArrayBindingPatternDefaultValues2.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Robot", "console", "foo1", "foo2", "foo3", "robotA"]
current  scope ScopeId(0): ["foo1", "foo2", "foo3", "robotA"]
reference Mismatch:
previous reference ReferenceId(2): Some("console")
current  reference ReferenceId(0): None
reference Mismatch:
previous reference ReferenceId(5): Some("console")
current  reference ReferenceId(2): None
reference Mismatch:
previous reference ReferenceId(8): Some("console")
current  reference ReferenceId(4): None

tasks/coverage/typescript/tests/cases/compiler/sourceMapValidationDestructuringVariableStatement.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Robot", "console", "hello", "nameA", "nameB", "nameC", "robotA", "robotB", "skillB", "skillC"]
current  scope ScopeId(0): ["hello", "nameA", "nameB", "nameC", "robotA", "robotB", "skillB", "skillC"]
reference Mismatch:
previous reference ReferenceId(6): Some("console")
current  reference ReferenceId(4): None
reference Mismatch:
previous reference ReferenceId(8): Some("console")
current  reference ReferenceId(6): None

tasks/coverage/typescript/tests/cases/compiler/sourceMapValidationDestructuringVariableStatement1.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Robot", "a", "a1", "b", "b1", "c", "c1", "console", "hello", "nameA", "nameB", "nameC", "robotA", "robotB", "skillB", "skillC"]
current  scope ScopeId(0): ["a", "a1", "b", "b1", "c", "c1", "hello", "nameA", "nameB", "nameC", "robotA", "robotB", "skillB", "skillC"]
reference Mismatch:
previous reference ReferenceId(16): Some("console")
current  reference ReferenceId(14): None
reference Mismatch:
previous reference ReferenceId(18): Some("console")
current  reference ReferenceId(16): None

tasks/coverage/typescript/tests/cases/compiler/sourceMapValidationDestructuringVariableStatementArrayBindingPattern.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Robot", "console", "nameA", "nameA2", "nameC", "numberA2", "numberA3", "numberB", "numberC", "numberC2", "robotA", "robotAInfo", "robotB", "skillA2", "skillC"]
current  scope ScopeId(0): ["nameA", "nameA2", "nameC", "numberA2", "numberA3", "numberB", "numberC", "numberC2", "robotA", "robotAInfo", "robotB", "skillA2", "skillC"]
reference Mismatch:
previous reference ReferenceId(8): Some("console")
current  reference ReferenceId(6): None

tasks/coverage/typescript/tests/cases/compiler/sourceMapValidationDestructuringVariableStatementArrayBindingPattern2.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["MultiSkilledRobot", "console", "multiRobotA", "multiRobotAInfo", "multiRobotB", "nameMA", "nameMB", "nameMC", "nameMC2", "primarySkillA", "primarySkillC", "secondarySkillA", "secondarySkillC", "skillA"]
current  scope ScopeId(0): ["multiRobotA", "multiRobotAInfo", "multiRobotB", "nameMA", "nameMB", "nameMC", "nameMC2", "primarySkillA", "primarySkillC", "secondarySkillA", "secondarySkillC", "skillA"]
reference Mismatch:
previous reference ReferenceId(8): Some("console")
current  reference ReferenceId(6): None

tasks/coverage/typescript/tests/cases/compiler/sourceMapValidationDestructuringVariableStatementArrayBindingPattern3.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["MultiSkilledRobot", "Robot", "console", "getMultiRobotB", "getRobotB", "multiRobotA", "multiRobotAInfo", "multiRobotB", "multiSkillB", "nameA", "nameB", "nameMB", "numberB", "primarySkillB", "robotA", "robotAInfo", "robotB", "secondarySkillB", "skillB"]
current  scope ScopeId(0): ["getMultiRobotB", "getRobotB", "multiRobotA", "multiRobotAInfo", "multiRobotB", "multiSkillB", "nameA", "nameB", "nameMB", "numberB", "primarySkillB", "robotA", "robotAInfo", "robotB", "secondarySkillB", "skillB"]
reference Mismatch:
previous reference ReferenceId(62): Some("console")
current  reference ReferenceId(57): None

tasks/coverage/typescript/tests/cases/compiler/sourceMapValidationDestructuringVariableStatementArrayBindingPatternDefaultValues.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Robot", "console", "nameA", "nameA2", "nameC", "numberA2", "numberA3", "numberB", "numberC", "numberC2", "robotA", "robotAInfo", "robotB", "skillA2", "skillC"]
current  scope ScopeId(0): ["nameA", "nameA2", "nameC", "numberA2", "numberA3", "numberB", "numberC", "numberC2", "robotA", "robotAInfo", "robotB", "skillA2", "skillC"]
reference Mismatch:
previous reference ReferenceId(8): Some("console")
current  reference ReferenceId(6): None

tasks/coverage/typescript/tests/cases/compiler/sourceMapValidationDestructuringVariableStatementArrayBindingPatternDefaultValues2.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["MultiSkilledRobot", "console", "multiRobotA", "multiRobotB", "nameMA", "nameMB", "nameMC", "nameMC2", "primarySkillA", "primarySkillC", "secondarySkillA", "secondarySkillC", "skillA"]
current  scope ScopeId(0): ["multiRobotA", "multiRobotB", "nameMA", "nameMB", "nameMC", "nameMC2", "primarySkillA", "primarySkillC", "secondarySkillA", "secondarySkillC", "skillA"]
reference Mismatch:
previous reference ReferenceId(7): Some("console")
current  reference ReferenceId(5): None

tasks/coverage/typescript/tests/cases/compiler/sourceMapValidationDestructuringVariableStatementArrayBindingPatternDefaultValues3.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["MultiSkilledRobot", "Robot", "console", "getMultiRobotB", "getRobotB", "multiRobotA", "multiRobotAInfo", "multiRobotB", "multiSkillB", "nameA", "nameB", "nameMB", "numberB", "primarySkillB", "robotA", "robotAInfo", "robotB", "secondarySkillB", "skillB"]
current  scope ScopeId(0): ["getMultiRobotB", "getRobotB", "multiRobotA", "multiRobotAInfo", "multiRobotB", "multiSkillB", "nameA", "nameB", "nameMB", "numberB", "primarySkillB", "robotA", "robotAInfo", "robotB", "secondarySkillB", "skillB"]
reference Mismatch:
previous reference ReferenceId(57): Some("console")
current  reference ReferenceId(52): None

tasks/coverage/typescript/tests/cases/compiler/sourceMapValidationDestructuringVariableStatementDefaultValues.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Robot", "console", "hello", "nameA", "nameB", "nameC", "robotA", "robotB", "skillB", "skillC"]
current  scope ScopeId(0): ["hello", "nameA", "nameB", "nameC", "robotA", "robotB", "skillB", "skillC"]
reference Mismatch:
previous reference ReferenceId(6): Some("console")
current  reference ReferenceId(4): None
reference Mismatch:
previous reference ReferenceId(8): Some("console")
current  reference ReferenceId(6): None

tasks/coverage/typescript/tests/cases/compiler/sourceMapValidationDestructuringVariableStatementNestedObjectBindingPattern.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Robot", "console", "nameB", "nameC", "primaryA", "primaryB", "robotA", "robotB", "secondaryA", "secondaryB"]
current  scope ScopeId(0): ["nameB", "nameC", "primaryA", "primaryB", "robotA", "robotB", "secondaryA", "secondaryB"]
reference Mismatch:
previous reference ReferenceId(6): Some("console")
current  reference ReferenceId(4): None
reference Mismatch:
previous reference ReferenceId(8): Some("console")
current  reference ReferenceId(6): None

tasks/coverage/typescript/tests/cases/compiler/sourceMapValidationDestructuringVariableStatementNestedObjectBindingPatternWithDefaultValues.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Robot", "console", "nameB", "nameC", "primaryA", "primaryB", "robotA", "robotB", "secondaryA", "secondaryB"]
current  scope ScopeId(0): ["nameB", "nameC", "primaryA", "primaryB", "robotA", "robotB", "secondaryA", "secondaryB"]
reference Mismatch:
previous reference ReferenceId(7): Some("console")
current  reference ReferenceId(4): None
reference Mismatch:
previous reference ReferenceId(9): Some("console")
current  reference ReferenceId(6): None

tasks/coverage/typescript/tests/cases/compiler/sourceMapValidationImport.ts
semantic error: Semantic Collector failed after transform
Missing SymbolId: m
Missing SymbolId: _m
Missing ReferenceId: _m
Missing ReferenceId: c
Missing ReferenceId: m
Missing ReferenceId: m
Missing SymbolId: a
Missing SymbolId: b

tasks/coverage/typescript/tests/cases/compiler/sourceMapValidationModule.ts
semantic error: Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript

tasks/coverage/typescript/tests/cases/compiler/sourceMapWithMultipleFilesWithFileEndingWithInterface.ts
semantic error: Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript

tasks/coverage/typescript/tests/cases/compiler/sourcemapValidationDuplicateNames.ts
semantic error: Semantic Collector failed after transform
Missing SymbolId: m1
Missing SymbolId: _m
Missing ReferenceId: _m
Missing ReferenceId: c
Missing ReferenceId: m1
Missing ReferenceId: m1
Missing SymbolId: _m2
Missing ReferenceId: m1
Missing ReferenceId: m1

tasks/coverage/typescript/tests/cases/compiler/specedNoStackBlown.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["ErrorMsg", "Predicate", "Result", "Spec", "SpecArray", "SpecFunction", "SpecObject", "SpecValue"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/specializationError.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Bar", "Promise"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/specializationOfExportedClass.ts
semantic error: Semantic Collector failed after transform
Missing SymbolId: M
Missing SymbolId: _M
Missing ReferenceId: _M
Missing ReferenceId: C
Missing ReferenceId: M
Missing ReferenceId: M

tasks/coverage/typescript/tests/cases/compiler/specializationsShouldNotAffectEachOther.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Series", "foo", "keyExtent2", "series"]
current  scope ScopeId(0): ["foo", "keyExtent2", "series"]

tasks/coverage/typescript/tests/cases/compiler/specializeVarArgs1.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Observable", "ObservableArray", "a", "observableArray"]
current  scope ScopeId(0): ["a", "observableArray"]
Bindings Mismatch:
previous scope ScopeId(4): ["T"]
current  scope ScopeId(1): []

tasks/coverage/typescript/tests/cases/compiler/specializedInheritedConstructors1.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Model", "MyView", "View", "ViewOptions", "aView", "aView2", "m", "myView"]
current  scope ScopeId(0): ["Model", "MyView", "View", "aView", "aView2", "m", "myView"]
Bindings Mismatch:
previous scope ScopeId(2): ["TModel"]
current  scope ScopeId(1): []

tasks/coverage/typescript/tests/cases/compiler/specializedLambdaTypeArguments.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(1): ["A", "Tany"]
current  scope ScopeId(1): []

tasks/coverage/typescript/tests/cases/compiler/specializedSignatureInInterface.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["A", "B"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/specializedSignatureOverloadReturnTypeWithIndexers.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["A", "B", "C", "D"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/spreadBooleanRespectsFreshness.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Foo", "FooArray", "FooBase", "foo1", "foo2"]
current  scope ScopeId(0): []
reference Mismatch:
previous reference ReferenceId(5): Some("foo1")
current  reference ReferenceId(0): None
reference Mismatch:
previous reference ReferenceId(7): Some("foo2")
current  reference ReferenceId(2): None
reference Mismatch:
previous reference ReferenceId(8): Some("foo2")
current  reference ReferenceId(3): None
reference Mismatch:
previous reference ReferenceId(9): Some("foo2")
current  reference ReferenceId(4): None

tasks/coverage/typescript/tests/cases/compiler/spreadExpressionContextualTypeWithNamespace.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(1): ["T", "thing"]
current  scope ScopeId(1): ["thing"]

tasks/coverage/typescript/tests/cases/compiler/spreadIdenticalTypesRemoved.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Animal", "Animal2", "billOwner", "clonePet"]
current  scope ScopeId(0): ["billOwner", "clonePet"]

tasks/coverage/typescript/tests/cases/compiler/spreadObjectNoCircular1.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Box", "Foo", "b"]
current  scope ScopeId(0): ["Foo"]
reference Mismatch:
previous reference ReferenceId(5): Some("b")
current  reference ReferenceId(0): None

tasks/coverage/typescript/tests/cases/compiler/spreadObjectPermutations.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["a", "b", "c", "v_a", "v_ab", "v_abc", "v_ac", "v_acb", "v_b", "v_ba", "v_bac", "v_bc", "v_bca", "v_c", "v_ca", "v_cab", "v_cb", "v_cba"]
current  scope ScopeId(0): ["v_a", "v_ab", "v_abc", "v_ac", "v_acb", "v_b", "v_ba", "v_bac", "v_bc", "v_bca", "v_c", "v_ca", "v_cab", "v_cb", "v_cba"]
reference Mismatch:
previous reference ReferenceId(0): Some("a")
current  reference ReferenceId(0): None
reference Mismatch:
previous reference ReferenceId(1): Some("b")
current  reference ReferenceId(1): None
reference Mismatch:
previous reference ReferenceId(2): Some("c")
current  reference ReferenceId(2): None
reference Mismatch:
previous reference ReferenceId(3): Some("a")
current  reference ReferenceId(3): None
reference Mismatch:
previous reference ReferenceId(4): Some("b")
current  reference ReferenceId(4): None
reference Mismatch:
previous reference ReferenceId(5): Some("a")
current  reference ReferenceId(5): None
reference Mismatch:
previous reference ReferenceId(6): Some("c")
current  reference ReferenceId(6): None
reference Mismatch:
previous reference ReferenceId(7): Some("b")
current  reference ReferenceId(7): None
reference Mismatch:
previous reference ReferenceId(8): Some("a")
current  reference ReferenceId(8): None
reference Mismatch:
previous reference ReferenceId(9): Some("b")
current  reference ReferenceId(9): None
reference Mismatch:
previous reference ReferenceId(10): Some("c")
current  reference ReferenceId(10): None
reference Mismatch:
previous reference ReferenceId(11): Some("c")
current  reference ReferenceId(11): None
reference Mismatch:
previous reference ReferenceId(12): Some("a")
current  reference ReferenceId(12): None
reference Mismatch:
previous reference ReferenceId(13): Some("c")
current  reference ReferenceId(13): None
reference Mismatch:
previous reference ReferenceId(14): Some("b")
current  reference ReferenceId(14): None
reference Mismatch:
previous reference ReferenceId(15): Some("a")
current  reference ReferenceId(15): None
reference Mismatch:
previous reference ReferenceId(16): Some("b")
current  reference ReferenceId(16): None
reference Mismatch:
previous reference ReferenceId(17): Some("c")
current  reference ReferenceId(17): None
reference Mismatch:
previous reference ReferenceId(18): Some("a")
current  reference ReferenceId(18): None
reference Mismatch:
previous reference ReferenceId(19): Some("c")
current  reference ReferenceId(19): None
reference Mismatch:
previous reference ReferenceId(20): Some("b")
current  reference ReferenceId(20): None
reference Mismatch:
previous reference ReferenceId(21): Some("b")
current  reference ReferenceId(21): None
reference Mismatch:
previous reference ReferenceId(22): Some("a")
current  reference ReferenceId(22): None
reference Mismatch:
previous reference ReferenceId(23): Some("c")
current  reference ReferenceId(23): None
reference Mismatch:
previous reference ReferenceId(24): Some("b")
current  reference ReferenceId(24): None
reference Mismatch:
previous reference ReferenceId(25): Some("c")
current  reference ReferenceId(25): None
reference Mismatch:
previous reference ReferenceId(26): Some("a")
current  reference ReferenceId(26): None
reference Mismatch:
previous reference ReferenceId(27): Some("c")
current  reference ReferenceId(27): None
reference Mismatch:
previous reference ReferenceId(28): Some("a")
current  reference ReferenceId(28): None
reference Mismatch:
previous reference ReferenceId(29): Some("b")
current  reference ReferenceId(29): None
reference Mismatch:
previous reference ReferenceId(30): Some("c")
current  reference ReferenceId(30): None
reference Mismatch:
previous reference ReferenceId(31): Some("b")
current  reference ReferenceId(31): None
reference Mismatch:
previous reference ReferenceId(32): Some("a")
current  reference ReferenceId(32): None

tasks/coverage/typescript/tests/cases/compiler/spreadObjectWithIndexDoesNotAddUndefinedToLocalIndex.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["m", "x"]
current  scope ScopeId(0): ["x"]
reference Mismatch:
previous reference ReferenceId(0): Some("m")
current  reference ReferenceId(0): None

tasks/coverage/typescript/tests/cases/compiler/spreadOfObjectLiteralAssignableToIndexSignature.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["RecordOfRecords", "RecordOfRecordsOrEmpty", "foo", "recordOfRecords", "recordsOfRecordsOrEmpty"]
current  scope ScopeId(0): ["foo", "recordOfRecords", "recordsOfRecordsOrEmpty"]

tasks/coverage/typescript/tests/cases/compiler/spreadTupleAccessedByTypeParameter.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(1): ["N", "i", "rest", "singleton", "singletons"]
current  scope ScopeId(1): ["i", "rest", "singleton", "singletons"]

tasks/coverage/typescript/tests/cases/compiler/spreadTypeRemovesReadonly.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["ReadonlyData", "clone", "data"]
current  scope ScopeId(0): ["clone", "data"]

tasks/coverage/typescript/tests/cases/compiler/spuriousCircularityOnTypeImport.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["SelectorMap"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/stackDepthLimitCastingType.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Backbone", "BackboneFetchCache", "hoge"]
current  scope ScopeId(0): ["Backbone", "hoge"]

tasks/coverage/typescript/tests/cases/compiler/staticAnonymousTypeNotReferencingTypeParameter.ts
semantic error: Semantic Collector failed after transform
Missing SymbolId: tessst
Missing SymbolId: _tessst
Missing ReferenceId: _tessst
Missing ReferenceId: funkyFor
Missing ReferenceId: tessst
Missing ReferenceId: tessst

tasks/coverage/typescript/tests/cases/compiler/staticFieldWithInterfaceContext.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["I", "c", "c10", "c11", "c2", "c3", "c4", "c5", "c6", "c7", "c8", "c9", "ex", "f"]
current  scope ScopeId(0): ["c", "c10", "c11", "c2", "c3", "c4", "c5", "c6", "c7", "c8", "c9", "ex", "f"]

tasks/coverage/typescript/tests/cases/compiler/staticInitializersAndLegacyClassDecorators.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["C1", "C2", "dec"]
current  scope ScopeId(0): ["C1", "C2"]
reference Mismatch:
previous reference ReferenceId(0): Some("dec")
current  reference ReferenceId(0): None
reference Mismatch:
previous reference ReferenceId(2): Some("dec")
current  reference ReferenceId(2): None

tasks/coverage/typescript/tests/cases/compiler/staticInstanceResolution3.ts
semantic error: `import lib = require(...);` is only supported when compiling modules to CommonJS.
Please consider using `import lib from '...';` alongside Typescript's --allowSyntheticDefaultImports option, or add @babel/plugin-transform-modules-commonjs to your Babel config.

tasks/coverage/typescript/tests/cases/compiler/staticInterfaceAssignmentCompat.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Shape", "ShapeFactory", "x"]
current  scope ScopeId(0): ["Shape", "x"]

tasks/coverage/typescript/tests/cases/compiler/staticPrototypePropertyOnClass.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(2): ["T"]
current  scope ScopeId(2): []

tasks/coverage/typescript/tests/cases/compiler/strictModeEnumMemberNameReserved.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(1): ["E", "static"]
current  scope ScopeId(1): ["E"]

tasks/coverage/typescript/tests/cases/compiler/strictNullNotNullIndexTypeShouldWork.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["A", "Foo", "FooClass", "Test", "Test2"]
current  scope ScopeId(0): ["FooClass", "Test", "Test2"]
Bindings Mismatch:
previous scope ScopeId(2): ["T"]
current  scope ScopeId(1): []
Bindings Mismatch:
previous scope ScopeId(5): ["P"]
current  scope ScopeId(3): []
Bindings Mismatch:
previous scope ScopeId(7): ["T"]
current  scope ScopeId(5): []

tasks/coverage/typescript/tests/cases/compiler/stripMembersOptionality.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["someVal", "someVal2"]
current  scope ScopeId(0): []
reference Mismatch:
previous reference ReferenceId(1): Some("someVal")
current  reference ReferenceId(0): None
reference Mismatch:
previous reference ReferenceId(3): Some("someVal2")
current  reference ReferenceId(1): None

tasks/coverage/typescript/tests/cases/compiler/structural1.ts
semantic error: Semantic Collector failed after transform
Missing SymbolId: M
Missing SymbolId: _M
Missing ReferenceId: _M
Missing ReferenceId: f
Missing ReferenceId: M
Missing ReferenceId: M

tasks/coverage/typescript/tests/cases/compiler/styledComponentsInstantiaionLimitNotReached.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["AnyStyledComponent", "Defaultize", "FORWARD_REF_STATICS", "ForwardRefExoticBase", "IntrinsicElementsKeys", "KNOWN_STATICS", "MEMO_STATICS", "NonReactStatics", "REACT_STATICS", "React", "ReactDefaultizedProps", "StyledComponent", "StyledComponentBase", "StyledComponentInnerAttrs", "StyledComponentInnerComponent", "StyledComponentInnerOtherProps", "StyledComponentProps", "StyledComponentPropsWithAs", "StyledComponentPropsWithRef", "WithChildrenIfReactComponentClass", "WithOptionalTheme"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/subclassThisTypeAssignable02.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["C", "ClassComponent", "Component", "Lifecycle", "MyAttrs", "Vnode", "test8"]
current  scope ScopeId(0): ["C", "test8"]

tasks/coverage/typescript/tests/cases/compiler/subclassWithPolymorphicThisIsAssignable.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["CustomDocument", "Document", "Example"]
current  scope ScopeId(0): ["Example"]
Bindings Mismatch:
previous scope ScopeId(4): ["Z"]
current  scope ScopeId(1): []
Bindings Mismatch:
previous scope ScopeId(6): ["Z"]
current  scope ScopeId(3): []

tasks/coverage/typescript/tests/cases/compiler/substituteReturnTypeSatisfiesConstraint.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["FFG", "M", "O", "X"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/substitutionTypeForIndexedAccessType1.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["AddPropToObject"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/substitutionTypeForIndexedAccessType2.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Bar", "Foo", "Str"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/substitutionTypeForNonGenericIndexedAccessType.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["A", "B"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/substitutionTypeNoMergeOfAssignableType.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Entity", "Entry", "Fields", "Nodes", "makeEntityStore", "myTest"]
current  scope ScopeId(0): ["makeEntityStore", "myTest"]
Bindings Mismatch:
previous scope ScopeId(8): ["T", "config"]
current  scope ScopeId(1): ["config"]

tasks/coverage/typescript/tests/cases/compiler/substitutionTypePassedToExtends.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Bar1", "Bar2", "Foo1", "Foo2"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/substitutionTypesCompareCorrectlyInRestrictiveInstances.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Bug", "BugHelper", "Q", "R", "UnionKeys"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/substitutionTypesInIndexedAccessTypes.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Subset", "UserArgs", "boundaryResult", "withoutBoundaryResult"]
current  scope ScopeId(0): ["boundaryResult", "withoutBoundaryResult"]

tasks/coverage/typescript/tests/cases/compiler/subtypeReductionUnionConstraints.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["A", "B", "BarNode", "Document", "FooNode", "Node", "f1", "visitNodes"]
current  scope ScopeId(0): ["f1", "visitNodes"]
Bindings Mismatch:
previous scope ScopeId(7): ["T", "node", "predicate"]
current  scope ScopeId(1): ["node", "predicate"]
Bindings Mismatch:
previous scope ScopeId(11): ["T", "a", "t", "x"]
current  scope ScopeId(3): ["a", "t", "x"]

tasks/coverage/typescript/tests/cases/compiler/subtypeRelationForNever.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(2): ["a", "haveFew", "haveNone", "r", "values"]
current  scope ScopeId(2): ["haveFew", "haveNone", "values"]
Bindings Mismatch:
previous scope ScopeId(3): ["a", "value"]
current  scope ScopeId(3): ["value"]

tasks/coverage/typescript/tests/cases/compiler/superAccessInFatArrow1.ts
semantic error: Semantic Collector failed after transform
Missing SymbolId: test
Missing SymbolId: _test
Missing ReferenceId: _test
Missing ReferenceId: A
Missing ReferenceId: _test
Missing ReferenceId: B
Missing ReferenceId: test
Missing ReferenceId: test

tasks/coverage/typescript/tests/cases/compiler/superWithGenericSpecialization.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(1): ["T"]
current  scope ScopeId(1): []
Bindings Mismatch:
previous scope ScopeId(2): ["T"]
current  scope ScopeId(2): []

tasks/coverage/typescript/tests/cases/compiler/symbolLinkDeclarationEmitModuleNamesRootDir.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Constructor", "ControllerClass"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/symbolMergeValueAndImportedType.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["X"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/systemExportAssignment.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["a"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/systemExportAssignment3.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["a"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/systemModule15.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["moduleC", "moduleCStar", "value", "value2"]
current  scope ScopeId(0): ["moduleC", "moduleCStar", "value"]

tasks/coverage/typescript/tests/cases/compiler/systemModule17.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["A", "I"]
current  scope ScopeId(0): ["A"]

tasks/coverage/typescript/tests/cases/compiler/systemModule18.ts
semantic error: `import lib = require(...);` is only supported when compiling modules to CommonJS.
Please consider using `import lib from '...';` alongside Typescript's --allowSyntheticDefaultImports option, or add @babel/plugin-transform-modules-commonjs to your Babel config.

tasks/coverage/typescript/tests/cases/compiler/systemModule7.ts
semantic error: Semantic Collector failed after transform
Missing SymbolId: M
Missing SymbolId: _M
Missing ReferenceId: M
Missing ReferenceId: M

tasks/coverage/typescript/tests/cases/compiler/systemModuleAmbientDeclarations.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["E", "c", "e", "foo", "promise"]
current  scope ScopeId(0): ["c", "e", "foo", "promise"]
reference Mismatch:
previous reference ReferenceId(3): Some("E")
current  reference ReferenceId(3): None

tasks/coverage/typescript/tests/cases/compiler/systemModuleConstEnums.ts
semantic error: Semantic Collector failed after transform
Missing SymbolId: M
Missing SymbolId: _M
Missing ReferenceId: _M
Missing ReferenceId: NonTopLevelConstEnum
Missing ReferenceId: M
Missing ReferenceId: M

tasks/coverage/typescript/tests/cases/compiler/systemModuleConstEnumsSeparateCompilation.ts
semantic error: Semantic Collector failed after transform
Missing SymbolId: M
Missing SymbolId: _M
Missing ReferenceId: _M
Missing ReferenceId: NonTopLevelConstEnum
Missing ReferenceId: M
Missing ReferenceId: M

tasks/coverage/typescript/tests/cases/compiler/systemModuleDeclarationMerging.ts
semantic error: Semantic Collector failed after transform
Missing SymbolId: _F
Missing ReferenceId: F
Missing ReferenceId: F
Missing SymbolId: _C
Missing ReferenceId: C
Missing ReferenceId: C
Missing SymbolId: _E
Missing ReferenceId: E
Missing ReferenceId: E

tasks/coverage/typescript/tests/cases/compiler/systemModuleNonTopLevelModuleMembers.ts
semantic error: Semantic Collector failed after transform
Missing SymbolId: TopLevelModule
Missing SymbolId: _TopLevelModule
Missing ReferenceId: TopLevelModule
Missing ReferenceId: TopLevelModule
Missing SymbolId: TopLevelModule2
Missing SymbolId: _TopLevelModule2
Missing ReferenceId: _TopLevelModule2
Missing ReferenceId: NonTopLevelClass
Missing SymbolId: NonTopLevelModule
Missing SymbolId: _NonTopLevelModule
Missing ReferenceId: NonTopLevelModule
Missing ReferenceId: NonTopLevelModule
Missing ReferenceId: _TopLevelModule2
Missing ReferenceId: _TopLevelModule2
Missing ReferenceId: _TopLevelModule2
Missing ReferenceId: NonTopLevelFunction
Missing ReferenceId: _TopLevelModule2
Missing ReferenceId: NonTopLevelEnum
Missing ReferenceId: TopLevelModule2
Missing ReferenceId: TopLevelModule2

tasks/coverage/typescript/tests/cases/compiler/systemNamespaceAliasEmit.ts
semantic error: Semantic Collector failed after transform
Missing SymbolId: ns
Missing SymbolId: _ns
Missing ReferenceId: ns
Missing ReferenceId: ns

tasks/coverage/typescript/tests/cases/compiler/taggedTemplatesInModuleAndGlobal.ts
semantic error: Semantic Collector failed after transform
Missing SymbolId: n
Missing SymbolId: _n
Missing ReferenceId: n
Missing ReferenceId: n

tasks/coverage/typescript/tests/cases/compiler/targetEs6DecoratorMetadataImportNotElided.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Input", "MyComponent", "TemplateRef"]
current  scope ScopeId(0): ["Input", "MyComponent"]

tasks/coverage/typescript/tests/cases/compiler/templateExpressionAsPossiblyDiscriminantValue.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["BiomeButtonProps", "BiomePlainLinkProps", "ClickableDiscriminatedUnion", "p3"]
current  scope ScopeId(0): ["p3"]

tasks/coverage/typescript/tests/cases/compiler/templateExpressionNoInlininingOfConstantBindingWithInitializer.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Params", "example", "example2"]
current  scope ScopeId(0): ["example", "example2"]

tasks/coverage/typescript/tests/cases/compiler/templateLiteralConstantEvaluation.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(1): ["T", "arg"]
current  scope ScopeId(1): ["arg"]

tasks/coverage/typescript/tests/cases/compiler/templateLiteralIntersection.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["A", "B", "E", "MixA", "MixB", "MixC", "MixD", "MixE", "OriginA1", "OriginA2", "OriginB1", "OriginB2", "OriginC", "OriginD", "OriginE", "OriginF", "a"]
current  scope ScopeId(0): ["a"]

tasks/coverage/typescript/tests/cases/compiler/templateLiteralIntersection3.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Path", "lowercasePath", "options1", "path"]
current  scope ScopeId(0): []
reference Mismatch:
previous reference ReferenceId(1): Some("options1")
current  reference ReferenceId(0): None
reference Mismatch:
previous reference ReferenceId(2): Some("options1")
current  reference ReferenceId(1): None
reference Mismatch:
previous reference ReferenceId(3): Some("path")
current  reference ReferenceId(2): None
reference Mismatch:
previous reference ReferenceId(6): Some("options1")
current  reference ReferenceId(3): None
reference Mismatch:
previous reference ReferenceId(7): Some("lowercasePath")
current  reference ReferenceId(4): None

tasks/coverage/typescript/tests/cases/compiler/templateLiteralIntersection4.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Provider", "StateHook", "StoreUtils", "useAge", "useStore", "useUsername"]
current  scope ScopeId(0): ["Provider", "useAge", "useStore", "useUsername"]

tasks/coverage/typescript/tests/cases/compiler/templateLiteralsAndDecoratorMetadata.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Greeter", "format"]
current  scope ScopeId(0): ["Greeter"]
reference Mismatch:
previous reference ReferenceId(0): Some("format")
current  reference ReferenceId(0): None

tasks/coverage/typescript/tests/cases/compiler/testContainerList.ts
semantic error: Semantic Collector failed after transform
Missing SymbolId: A
Missing SymbolId: _A
Missing ReferenceId: A
Missing ReferenceId: A

tasks/coverage/typescript/tests/cases/compiler/testTypings.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["IComparable"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/thisConditionalOnMethodReturnOfGenericInstance.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(1): ["T"]
current  scope ScopeId(1): []
Bindings Mismatch:
previous scope ScopeId(3): ["T"]
current  scope ScopeId(2): []
Bindings Mismatch:
previous scope ScopeId(6): ["T"]
current  scope ScopeId(4): []

tasks/coverage/typescript/tests/cases/compiler/thisExpressionOfGenericObject.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(1): ["T"]
current  scope ScopeId(1): []

tasks/coverage/typescript/tests/cases/compiler/thisInGenericStaticMembers.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(2): ["T", "source", "value"]
current  scope ScopeId(2): ["source", "value"]
Bindings Mismatch:
previous scope ScopeId(3): ["T", "source"]
current  scope ScopeId(3): ["source"]

tasks/coverage/typescript/tests/cases/compiler/thisInModuleFunction1.ts
semantic error: Semantic Collector failed after transform
Missing SymbolId: bar
Missing SymbolId: _bar
Missing ReferenceId: _bar
Missing ReferenceId: bar
Missing ReferenceId: bar
Missing ReferenceId: bar

tasks/coverage/typescript/tests/cases/compiler/thisInObjectJs.ts
semantic error: Cannot use export statement outside a module

tasks/coverage/typescript/tests/cases/compiler/thisInTupleTypeParameterConstraints.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Array", "Boolean", "Function", "IArguments", "Number", "Object", "RegExp", "String", "x"]
current  scope ScopeId(0): ["x"]

tasks/coverage/typescript/tests/cases/compiler/thisInTypeQuery.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(4): ["Key", "params"]
current  scope ScopeId(4): ["params"]
Bindings Mismatch:
previous scope ScopeId(8): ["T0"]
current  scope ScopeId(7): []

tasks/coverage/typescript/tests/cases/compiler/thisIndexOnExistingReadonlyFieldIsNotNever.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["AnchorType", "CoachMarkAnchorDecorator", "CoachMarkAnchorProps"]
current  scope ScopeId(0): ["CoachMarkAnchorDecorator"]
Bindings Mismatch:
previous scope ScopeId(5): ["P", "anchor"]
current  scope ScopeId(2): ["anchor"]

tasks/coverage/typescript/tests/cases/compiler/thisTypeAsConstraint.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(2): ["T"]
current  scope ScopeId(2): []

tasks/coverage/typescript/tests/cases/compiler/this_inside-object-literal-getters-and-setters.ts
semantic error: Semantic Collector failed after transform
Missing SymbolId: ObjectLiteral
Missing SymbolId: _ObjectLiteral
Missing ReferenceId: ObjectLiteral
Missing ReferenceId: ObjectLiteral

tasks/coverage/typescript/tests/cases/compiler/tooFewArgumentsInGenericFunctionTypedArgument.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Collection", "Combinators", "_", "c2", "r1a", "r1b", "rf1"]
current  scope ScopeId(0): ["_", "c2", "r1a", "r1b", "rf1"]

tasks/coverage/typescript/tests/cases/compiler/topLevel.ts
semantic error: Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript

tasks/coverage/typescript/tests/cases/compiler/topLevelBlockExpando.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Person"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/transitiveTypeArgumentInference1.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["C", "I1", "c", "i"]
current  scope ScopeId(0): ["C", "c", "i"]
Bindings Mismatch:
previous scope ScopeId(3): ["T"]
current  scope ScopeId(1): []

tasks/coverage/typescript/tests/cases/compiler/trivialSubtypeReductionNoStructuralCheck2.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Wizard", "WizardStepProps", "props"]
current  scope ScopeId(0): ["Wizard"]
reference Mismatch:
previous reference ReferenceId(2): Some("props")
current  reference ReferenceId(0): None

tasks/coverage/typescript/tests/cases/compiler/truthinessCallExpressionCoercion3.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["I", "f", "g"]
current  scope ScopeId(0): ["f", "g"]

tasks/coverage/typescript/tests/cases/compiler/tslibReExportHelpers.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Foo", "decorator"]
current  scope ScopeId(0): ["Foo"]
reference Mismatch:
previous reference ReferenceId(0): Some("decorator")
current  reference ReferenceId(0): None

tasks/coverage/typescript/tests/cases/compiler/tsxAttributeQuickinfoTypesSameAsObjectLiteral.tsx
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Foo", "JSX", "_jsxFileName", "_reactJsxRuntime"]
current  scope ScopeId(0): ["Foo", "_jsxFileName", "_reactJsxRuntime"]

tasks/coverage/typescript/tests/cases/compiler/tsxAttributesHasInferrableIndex.tsx
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["AttributeValue", "Attributes", "Button", "_jsxFileName", "b", "createElement"]
current  scope ScopeId(0): ["Button", "_jsxFileName", "b", "createElement"]

tasks/coverage/typescript/tests/cases/compiler/tsxDefaultImports.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(1): ["SomeEnum", "one"]
current  scope ScopeId(1): ["SomeEnum"]

tasks/coverage/typescript/tests/cases/compiler/tsxDiscriminantPropertyInference.tsx
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["DiscriminatorFalse", "DiscriminatorTrue", "JSX", "Props", "_jsxFileName", "_reactJsxRuntime"]
current  scope ScopeId(0): ["_jsxFileName", "_reactJsxRuntime"]

tasks/coverage/typescript/tests/cases/compiler/tsxFragmentChildrenCheck.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["MyComponent", "React", "_jsxFileName"]
current  scope ScopeId(0): ["MyComponent", "_jsxFileName"]
reference Mismatch:
previous reference ReferenceId(1): Some("React")
current  reference ReferenceId(0): None

tasks/coverage/typescript/tests/cases/compiler/tsxInferenceShouldNotYieldAnyOnUnions.tsx
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["JSX", "Props", "PropsBase", "PropsWithConvert", "ShouldInferFromData", "_jsxFileName", "_reactJsxRuntime", "f1", "f2", "f3"]
current  scope ScopeId(0): ["ShouldInferFromData", "_jsxFileName", "_reactJsxRuntime", "f1", "f2", "f3"]
Bindings Mismatch:
previous scope ScopeId(6): ["T", "props"]
current  scope ScopeId(1): ["props"]

tasks/coverage/typescript/tests/cases/compiler/tsxReactPropsInferenceSucceedsOnIntersections.tsx
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["ButtonProps", "CustomButton", "CustomButtonProps", "React", "_jsxFileName"]
current  scope ScopeId(0): ["CustomButton", "React", "_jsxFileName"]

tasks/coverage/typescript/tests/cases/compiler/tsxResolveExternalModuleExportsTypes.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Foo", "Test", "_jsx", "_jsxFileName"]
current  scope ScopeId(0): ["Foo", "_jsx", "_jsxFileName"]

tasks/coverage/typescript/tests/cases/compiler/tsxStatelessComponentDefaultProps.tsx
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["BackButton", "Props", "React", "_jsxFileName", "a"]
current  scope ScopeId(0): ["BackButton", "React", "_jsxFileName", "a"]

tasks/coverage/typescript/tests/cases/compiler/tsxUnionMemberChecksFilterDataProps.tsx
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["React", "ReactElement", "RootHappy", "RootNotHappy", "_jsxFileName"]
current  scope ScopeId(0): ["React", "RootHappy", "RootNotHappy", "_jsxFileName"]

tasks/coverage/typescript/tests/cases/compiler/tsxUnionSpread.tsx
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["AnimalComponent", "AnimalInfo", "CatInfo", "DogInfo", "JSX", "_jsxFileName", "_reactJsxRuntime", "component", "component2", "getProps", "props", "props2"]
current  scope ScopeId(0): ["AnimalComponent", "_jsxFileName", "_reactJsxRuntime", "component", "component2", "getProps", "props", "props2"]

tasks/coverage/typescript/tests/cases/compiler/tupleTypeInference.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["$q", "IPromise", "IQService", "a", "b", "c"]
current  scope ScopeId(0): ["a", "b", "c"]
reference Mismatch:
previous reference ReferenceId(29): Some("$q")
current  reference ReferenceId(0): None
reference Mismatch:
previous reference ReferenceId(30): Some("$q")
current  reference ReferenceId(1): None
reference Mismatch:
previous reference ReferenceId(31): Some("$q")
current  reference ReferenceId(2): None
reference Mismatch:
previous reference ReferenceId(32): Some("$q")
current  reference ReferenceId(3): None
reference Mismatch:
previous reference ReferenceId(33): Some("$q")
current  reference ReferenceId(4): None
reference Mismatch:
previous reference ReferenceId(34): Some("$q")
current  reference ReferenceId(5): None
reference Mismatch:
previous reference ReferenceId(35): Some("$q")
current  reference ReferenceId(6): None
reference Mismatch:
previous reference ReferenceId(36): Some("$q")
current  reference ReferenceId(7): None
reference Mismatch:
previous reference ReferenceId(37): Some("$q")
current  reference ReferenceId(8): None

tasks/coverage/typescript/tests/cases/compiler/tupleTypeInference2.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["A", "B", "C", "C2"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/twiceNestedKeyofIndexInference.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Set1", "Set2", "State", "newState", "state"]
current  scope ScopeId(0): ["newState", "state"]

tasks/coverage/typescript/tests/cases/compiler/typeAliasDeclarationEmit3.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(2): ["foo", "i"]
current  scope ScopeId(2): ["i"]
Bindings Mismatch:
previous scope ScopeId(4): ["foo"]
current  scope ScopeId(4): []
Bindings Mismatch:
previous scope ScopeId(6): ["foo"]
current  scope ScopeId(6): []

tasks/coverage/typescript/tests/cases/compiler/typeAliasDoesntMakeModuleInstantiated.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["m"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/typeAliasExport.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["a"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/typeAliasFunctionTypeSharedSymbol.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Crashes", "Mixin", "ReturnTypeOf"]
current  scope ScopeId(0): ["Mixin"]
Bindings Mismatch:
previous scope ScopeId(1): ["Base", "TBase"]
current  scope ScopeId(1): ["Base"]

tasks/coverage/typescript/tests/cases/compiler/typeAnnotationBestCommonTypeInArrayLiteral.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["IMenuItem", "menuData"]
current  scope ScopeId(0): ["menuData"]

tasks/coverage/typescript/tests/cases/compiler/typeArgInference.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["I", "o", "t1", "t2", "t3", "t4", "x"]
current  scope ScopeId(0): ["o", "t1", "t2", "t3", "t4", "x"]

tasks/coverage/typescript/tests/cases/compiler/typeArgInference2.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Item", "z1", "z2", "z3", "z4", "z5", "z6"]
current  scope ScopeId(0): ["z1", "z2", "z3", "z4", "z5", "z6"]

tasks/coverage/typescript/tests/cases/compiler/typeArgInferenceWithNull.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(1): ["T", "n"]
current  scope ScopeId(1): ["n"]
Bindings Mismatch:
previous scope ScopeId(2): ["T", "n"]
current  scope ScopeId(2): ["n"]
Bindings Mismatch:
previous scope ScopeId(3): ["T", "fun", "n", "n2"]
current  scope ScopeId(3): ["fun", "n", "n2"]

tasks/coverage/typescript/tests/cases/compiler/typeArgumentInferenceApparentType1.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(1): ["T", "iterable"]
current  scope ScopeId(1): ["iterable"]

tasks/coverage/typescript/tests/cases/compiler/typeArgumentInferenceApparentType2.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(1): ["T", "inner", "iterable"]
current  scope ScopeId(1): ["inner", "iterable"]
Bindings Mismatch:
previous scope ScopeId(2): ["U", "res", "u"]
current  scope ScopeId(2): ["res", "u"]

tasks/coverage/typescript/tests/cases/compiler/typeArgumentInferenceOrdering.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["C", "Goo", "I", "foo", "x"]
current  scope ScopeId(0): ["C", "foo", "x"]
Bindings Mismatch:
previous scope ScopeId(5): ["T", "f"]
current  scope ScopeId(2): ["f"]

tasks/coverage/typescript/tests/cases/compiler/typeArgumentInferenceWithRecursivelyReferencedTypeAliasToTypeLiteral01.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["TreeNode", "nodes"]
current  scope ScopeId(0): ["nodes"]

tasks/coverage/typescript/tests/cases/compiler/typeArgumentInferenceWithRecursivelyReferencedTypeAliasToTypeLiteral02.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["TreeNode", "TreeNodeMiddleman", "nodes"]
current  scope ScopeId(0): ["nodes"]

tasks/coverage/typescript/tests/cases/compiler/typeArgumentsInFunctionExpressions.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(1): ["T", "a", "f", "x"]
current  scope ScopeId(1): ["a", "f", "x"]
Bindings Mismatch:
previous scope ScopeId(2): ["T", "a", "f", "x"]
current  scope ScopeId(2): ["a", "f", "x"]

tasks/coverage/typescript/tests/cases/compiler/typeConstraintsWithConstructSignatures.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["C", "Constructable"]
current  scope ScopeId(0): ["C"]
Bindings Mismatch:
previous scope ScopeId(3): ["T"]
current  scope ScopeId(1): []

tasks/coverage/typescript/tests/cases/compiler/typeGuardNarrowByMutableUntypedField.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["arrayLikeOrIterable"]
current  scope ScopeId(0): []
reference Mismatch:
previous reference ReferenceId(6): Some("arrayLikeOrIterable")
current  reference ReferenceId(1): None
reference Mismatch:
previous reference ReferenceId(7): Some("arrayLikeOrIterable")
current  reference ReferenceId(2): None

tasks/coverage/typescript/tests/cases/compiler/typeGuardNarrowByUntypedField.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["arrayLikeOrIterable"]
current  scope ScopeId(0): []
reference Mismatch:
previous reference ReferenceId(6): Some("arrayLikeOrIterable")
current  reference ReferenceId(1): None
reference Mismatch:
previous reference ReferenceId(7): Some("arrayLikeOrIterable")
current  reference ReferenceId(2): None

tasks/coverage/typescript/tests/cases/compiler/typeGuardNarrowsIndexedAccessOfKnownProperty1.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["A", "B", "C", "Circle", "Rectangle", "Shape", "Square", "Subshape", "X", "Y", "Z", "area", "check", "g", "subarea"]
current  scope ScopeId(0): ["area", "check", "g", "subarea"]

tasks/coverage/typescript/tests/cases/compiler/typeGuardNarrowsIndexedAccessOfKnownProperty11.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["E", "m"]
current  scope ScopeId(0): ["E"]
Bindings Mismatch:
previous scope ScopeId(1): ["A", "B", "E"]
current  scope ScopeId(1): ["E"]
reference Mismatch:
previous reference ReferenceId(1): Some("m")
current  reference ReferenceId(6): None
reference Mismatch:
previous reference ReferenceId(3): Some("m")
current  reference ReferenceId(8): None

tasks/coverage/typescript/tests/cases/compiler/typeGuardNarrowsIndexedAccessOfKnownProperty12.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["E", "m"]
current  scope ScopeId(0): ["E"]
Bindings Mismatch:
previous scope ScopeId(1): ["A", "B", "E"]
current  scope ScopeId(1): ["E"]
reference Mismatch:
previous reference ReferenceId(1): Some("m")
current  reference ReferenceId(4): None
reference Mismatch:
previous reference ReferenceId(3): Some("m")
current  reference ReferenceId(6): None

tasks/coverage/typescript/tests/cases/compiler/typeGuardNarrowsIndexedAccessOfKnownProperty3.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Foo", "foo", "index"]
current  scope ScopeId(0): ["foo", "index"]

tasks/coverage/typescript/tests/cases/compiler/typeGuardNarrowsIndexedAccessOfKnownProperty5.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Foo", "a", "aIndex", "b", "bIndex", "c", "cIndex"]
current  scope ScopeId(0): ["a", "aIndex", "b", "bIndex", "c", "cIndex"]

tasks/coverage/typescript/tests/cases/compiler/typeGuardNarrowsIndexedAccessOfKnownProperty6.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Foo", "a", "aIndex", "b", "bIndex", "c", "cIndex"]
current  scope ScopeId(0): ["a", "b", "c"]
reference Mismatch:
previous reference ReferenceId(1): Some("aIndex")
current  reference ReferenceId(1): None
reference Mismatch:
previous reference ReferenceId(3): Some("aIndex")
current  reference ReferenceId(3): None
reference Mismatch:
previous reference ReferenceId(5): Some("aIndex")
current  reference ReferenceId(5): None
reference Mismatch:
previous reference ReferenceId(7): Some("bIndex")
current  reference ReferenceId(7): None
reference Mismatch:
previous reference ReferenceId(9): Some("bIndex")
current  reference ReferenceId(9): None
reference Mismatch:
previous reference ReferenceId(12): Some("cIndex")
current  reference ReferenceId(11): None
reference Mismatch:
previous reference ReferenceId(14): Some("cIndex")
current  reference ReferenceId(13): None

tasks/coverage/typescript/tests/cases/compiler/typeGuardNarrowsIndexedAccessOfKnownProperty7.ts
semantic error: Semantic Collector failed after transform
Missing SymbolId: Foo
Missing SymbolId: _Foo
Missing ReferenceId: _Foo
Missing ReferenceId: Foo
Missing ReferenceId: Foo

tasks/coverage/typescript/tests/cases/compiler/typeGuardOnContainerTypeNoHang.ts
semantic error: Semantic Collector failed after transform
Missing SymbolId: TypeGuards
Missing SymbolId: _TypeGuards
Missing ReferenceId: _TypeGuards
Missing ReferenceId: IsObject
Missing ReferenceId: TypeGuards
Missing ReferenceId: TypeGuards

tasks/coverage/typescript/tests/cases/compiler/typeInferenceCacheInvalidation.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Callback"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/typeInferenceFBoundedTypeParams.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(1): ["a", "fold", "r", "result", "values"]
current  scope ScopeId(1): ["fold", "result", "values"]
Bindings Mismatch:
previous scope ScopeId(4): ["a", "b", "value", "values"]
current  scope ScopeId(4): ["value", "values"]

tasks/coverage/typescript/tests/cases/compiler/typeInferenceLiteralUnion.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["NumCoercible", "Numeric", "Primitive", "extent", "extentMixed"]
current  scope ScopeId(0): ["NumCoercible", "extent", "extentMixed"]
Bindings Mismatch:
previous scope ScopeId(7): ["T", "array"]
current  scope ScopeId(4): ["array"]

tasks/coverage/typescript/tests/cases/compiler/typeInferenceReturnTypeCallback.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Cons", "IList", "Nil"]
current  scope ScopeId(0): ["Cons", "Nil"]
Bindings Mismatch:
previous scope ScopeId(3): ["C"]
current  scope ScopeId(1): []
Bindings Mismatch:
previous scope ScopeId(4): ["D", "f"]
current  scope ScopeId(2): ["f"]
Bindings Mismatch:
previous scope ScopeId(5): ["T"]
current  scope ScopeId(3): []
Bindings Mismatch:
previous scope ScopeId(6): ["U", "f"]
current  scope ScopeId(4): ["f"]
Bindings Mismatch:
previous scope ScopeId(8): ["E", "f", "z"]
current  scope ScopeId(6): ["f", "z"]

tasks/coverage/typescript/tests/cases/compiler/typeInferenceWithExcessProperties.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Named", "parrot"]
current  scope ScopeId(0): ["parrot"]
Bindings Mismatch:
previous scope ScopeId(2): ["T", "obj"]
current  scope ScopeId(1): ["obj"]

tasks/coverage/typescript/tests/cases/compiler/typeInferenceWithExcessPropertiesJsx.tsx
semantic error: Semantic Collector failed after transform
Missing SymbolId: React
Missing ReferenceId: require

tasks/coverage/typescript/tests/cases/compiler/typeLiteralCallback.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Foo", "bar", "foo", "test"]
current  scope ScopeId(0): ["foo", "test"]

tasks/coverage/typescript/tests/cases/compiler/typeOfYieldWithUnionInContextualReturnType.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["AsyncSequenceFactory", "SequenceFactory", "SyncSequenceFactory", "asyncFactory", "looserAsyncFactory", "looserSyncFactory", "syncFactory"]
current  scope ScopeId(0): ["asyncFactory", "looserAsyncFactory", "looserSyncFactory", "syncFactory"]

tasks/coverage/typescript/tests/cases/compiler/typeParameterAsElementType.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(1): ["T", "arr", "t"]
current  scope ScopeId(1): ["arr", "t"]

tasks/coverage/typescript/tests/cases/compiler/typeParameterAssignmentWithConstraints.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(1): ["A", "B", "a", "b"]
current  scope ScopeId(1): ["a", "b"]

tasks/coverage/typescript/tests/cases/compiler/typeParameterCompatibilityAccrossDeclarations.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["I", "I2", "a", "a2", "i", "i2"]
current  scope ScopeId(0): ["a", "a2", "i", "i2"]
Bindings Mismatch:
previous scope ScopeId(1): ["T", "y"]
current  scope ScopeId(1): ["y"]

tasks/coverage/typescript/tests/cases/compiler/typeParameterConstrainedToOuterTypeParameter2.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["A", "B", "a", "b"]
current  scope ScopeId(0): ["a", "b"]

tasks/coverage/typescript/tests/cases/compiler/typeParameterConstraintInstantiation.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Mapper", "a", "m"]
current  scope ScopeId(0): ["a", "m"]

tasks/coverage/typescript/tests/cases/compiler/typeParameterDiamond1.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(1): ["Top", "diamondMiddle"]
current  scope ScopeId(1): ["diamondMiddle"]
Bindings Mismatch:
previous scope ScopeId(2): ["T", "U", "diamondBottom"]
current  scope ScopeId(2): ["diamondBottom"]
Bindings Mismatch:
previous scope ScopeId(3): ["Bottom", "bottom", "middle", "top"]
current  scope ScopeId(3): ["bottom", "middle", "top"]

tasks/coverage/typescript/tests/cases/compiler/typeParameterEquality.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(2): ["T"]
current  scope ScopeId(2): []
Bindings Mismatch:
previous scope ScopeId(3): ["U", "p"]
current  scope ScopeId(3): ["p"]

tasks/coverage/typescript/tests/cases/compiler/typeParameterExtendingUnion1.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(6): ["T", "a"]
current  scope ScopeId(6): ["a"]

tasks/coverage/typescript/tests/cases/compiler/typeParameterExtendingUnion2.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(6): ["T", "a"]
current  scope ScopeId(6): ["a"]

tasks/coverage/typescript/tests/cases/compiler/typeParameterExtendsPrimitive.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["I", "IdMap", "f", "g", "h"]
current  scope ScopeId(0): ["f", "g", "h"]
Bindings Mismatch:
previous scope ScopeId(1): ["T", "t", "v"]
current  scope ScopeId(1): ["t", "v"]
Bindings Mismatch:
previous scope ScopeId(5): ["T", "i", "n"]
current  scope ScopeId(2): ["i", "n"]
Bindings Mismatch:
previous scope ScopeId(6): ["K", "T", "array", "prop", "result"]
current  scope ScopeId(3): ["array", "prop", "result"]

tasks/coverage/typescript/tests/cases/compiler/typeParameterFixingWithConstraints.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["IBar", "IFoo", "foo"]
current  scope ScopeId(0): ["foo"]

tasks/coverage/typescript/tests/cases/compiler/typeParameterFixingWithContextSensitiveArguments.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["A", "B", "a", "b", "d", "d2", "d3", "f"]
current  scope ScopeId(0): ["a", "b", "d", "d2", "d3", "f"]
Bindings Mismatch:
previous scope ScopeId(1): ["T", "U", "f", "x", "y"]
current  scope ScopeId(1): ["f", "x", "y"]

tasks/coverage/typescript/tests/cases/compiler/typeParameterFixingWithContextSensitiveArguments4.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["A", "B", "a", "b", "d", "f"]
current  scope ScopeId(0): ["a", "b", "d", "f"]
Bindings Mismatch:
previous scope ScopeId(1): ["T", "U", "p", "p1", "y", "y1"]
current  scope ScopeId(1): ["p", "p1", "y", "y1"]

tasks/coverage/typescript/tests/cases/compiler/typeParameterFixingWithContextSensitiveArguments5.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["A", "B", "a", "b", "d", "f"]
current  scope ScopeId(0): ["a", "b", "d", "f"]
Bindings Mismatch:
previous scope ScopeId(1): ["T", "U", "pf1", "pf2", "t1", "u1"]
current  scope ScopeId(1): ["pf1", "pf2", "t1", "u1"]

tasks/coverage/typescript/tests/cases/compiler/typeParameterInConstraint1.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(1): ["T", "U"]
current  scope ScopeId(1): []

tasks/coverage/typescript/tests/cases/compiler/typeParameterLeak.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Box", "BoxFactory", "BoxFactoryFactory", "BoxTypes", "b", "f"]
current  scope ScopeId(0): ["b"]
reference Mismatch:
previous reference ReferenceId(11): Some("f")
current  reference ReferenceId(0): None

tasks/coverage/typescript/tests/cases/compiler/typeParameterListWithTrailingComma1.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(1): ["T"]
current  scope ScopeId(1): []

tasks/coverage/typescript/tests/cases/compiler/typeParameterOrderReversal.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["X", "tFirst", "uFirst", "z"]
current  scope ScopeId(0): ["tFirst", "uFirst", "z"]
Bindings Mismatch:
previous scope ScopeId(2): ["T", "U", "x"]
current  scope ScopeId(1): ["x"]
Bindings Mismatch:
previous scope ScopeId(3): ["T", "U", "x"]
current  scope ScopeId(2): ["x"]

tasks/coverage/typescript/tests/cases/compiler/typePartameterConstraintInstantiatedWithDefaultWhenCheckingDefault.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Identity", "Settable", "Test1", "Test2", "Test2Base", "test1", "test2"]
current  scope ScopeId(0): ["Identity", "test1", "test2"]
Bindings Mismatch:
previous scope ScopeId(3): ["V"]
current  scope ScopeId(1): []

tasks/coverage/typescript/tests/cases/compiler/typePredicateAcceptingPartialOfRefinedType.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Options", "Test"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/typePredicateFreshLiteralWidening.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Item", "Narrow", "Narrowable", "filteredValues1", "filteredValues2", "isNotNull", "item1", "item2", "item3", "satisfies", "values1", "values2"]
current  scope ScopeId(0): ["filteredValues1", "filteredValues2", "isNotNull", "item1", "item2", "item3", "satisfies", "values1", "values2"]
Bindings Mismatch:
previous scope ScopeId(5): ["TWide"]
current  scope ScopeId(1): []
Bindings Mismatch:
previous scope ScopeId(6): ["TNarrow", "narrow"]
current  scope ScopeId(2): ["narrow"]
Bindings Mismatch:
previous scope ScopeId(7): ["T", "value"]
current  scope ScopeId(3): ["value"]

tasks/coverage/typescript/tests/cases/compiler/typePredicateStructuralMatch.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Result", "Results", "getResults1", "getResults2", "isPlainResponse", "isResponseInData"]
current  scope ScopeId(0): ["getResults1", "getResults2", "isPlainResponse", "isResponseInData"]
Bindings Mismatch:
previous scope ScopeId(3): ["T", "value"]
current  scope ScopeId(1): ["value"]
Bindings Mismatch:
previous scope ScopeId(5): ["T", "value"]
current  scope ScopeId(3): ["value"]

tasks/coverage/typescript/tests/cases/compiler/typePredicateTopLevelTypeParameter.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(3): ["T", "a"]
current  scope ScopeId(3): ["a"]

tasks/coverage/typescript/tests/cases/compiler/typePredicateWithThisParameter.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Bar", "Foo", "isFoo1", "isFoo2", "test"]
current  scope ScopeId(0): ["isFoo1", "isFoo2"]
reference Mismatch:
previous reference ReferenceId(7): Some("test")
current  reference ReferenceId(3): None
reference Mismatch:
previous reference ReferenceId(8): Some("test")
current  reference ReferenceId(4): None
reference Mismatch:
previous reference ReferenceId(10): Some("test")
current  reference ReferenceId(6): None
reference Mismatch:
previous reference ReferenceId(11): Some("test")
current  reference ReferenceId(7): None

tasks/coverage/typescript/tests/cases/compiler/typePredicatesCanNarrowByDiscriminant.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["fruit", "fruit2", "kind"]
current  scope ScopeId(0): ["kind"]
reference Mismatch:
previous reference ReferenceId(5): Some("fruit")
current  reference ReferenceId(1): None
reference Mismatch:
previous reference ReferenceId(7): Some("fruit")
current  reference ReferenceId(2): None
reference Mismatch:
previous reference ReferenceId(8): Some("fruit")
current  reference ReferenceId(3): None
reference Mismatch:
previous reference ReferenceId(9): Some("fruit2")
current  reference ReferenceId(4): None
reference Mismatch:
previous reference ReferenceId(13): Some("fruit2")
current  reference ReferenceId(7): None
reference Mismatch:
previous reference ReferenceId(14): Some("fruit2")
current  reference ReferenceId(8): None

tasks/coverage/typescript/tests/cases/compiler/typePredicatesInUnion.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["A", "B", "Or", "f"]
current  scope ScopeId(0): ["f"]

tasks/coverage/typescript/tests/cases/compiler/typePredicatesInUnion_noMatch.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["A", "B", "Or", "f"]
current  scope ScopeId(0): ["f"]

tasks/coverage/typescript/tests/cases/compiler/typePredicatesOptionalChaining1.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["X", "isNotNull", "title", "x"]
current  scope ScopeId(0): ["isNotNull", "title", "x"]
Bindings Mismatch:
previous scope ScopeId(2): ["A", "x"]
current  scope ScopeId(1): ["x"]

tasks/coverage/typescript/tests/cases/compiler/typePredicatesOptionalChaining2.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Person", "getName1", "getName2", "isString"]
current  scope ScopeId(0): ["getName1", "getName2", "isString"]

tasks/coverage/typescript/tests/cases/compiler/typePredicatesOptionalChaining3.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Animal", "Breed", "getBreedSizeWithFunction", "getBreedSizeWithoutFunction"]
current  scope ScopeId(0): ["getBreedSizeWithFunction", "getBreedSizeWithoutFunction"]

tasks/coverage/typescript/tests/cases/compiler/typeResolution.ts
semantic error: Semantic Collector failed after transform
Missing SymbolId: TopLevelModule1
Missing SymbolId: _TopLevelModule
Missing SymbolId: SubModule1
Missing SymbolId: _SubModule
Missing SymbolId: SubSubModule1
Missing SymbolId: _SubSubModule
Missing ReferenceId: _SubSubModule
Missing ReferenceId: ClassA
Missing ReferenceId: _SubSubModule
Missing ReferenceId: ClassB
Missing ReferenceId: SubSubModule1
Missing ReferenceId: SubSubModule1
Missing ReferenceId: _SubModule
Missing ReferenceId: _SubModule
Missing ReferenceId: SubModule1
Missing ReferenceId: SubModule1
Missing ReferenceId: _TopLevelModule
Missing ReferenceId: _TopLevelModule
Missing SymbolId: SubModule2
Missing SymbolId: _SubModule2
Missing SymbolId: SubSubModule2
Missing SymbolId: _SubSubModule2
Missing ReferenceId: _SubSubModule2
Missing ReferenceId: ClassA
Missing ReferenceId: _SubSubModule2
Missing ReferenceId: ClassB
Missing ReferenceId: _SubSubModule2
Missing ReferenceId: ClassC
Missing ReferenceId: SubSubModule2
Missing ReferenceId: SubSubModule2
Missing ReferenceId: _SubModule2
Missing ReferenceId: _SubModule2
Missing ReferenceId: SubModule2
Missing ReferenceId: SubModule2
Missing ReferenceId: _TopLevelModule
Missing ReferenceId: _TopLevelModule
Missing SymbolId: NotExportedModule
Missing SymbolId: _NotExportedModule
Missing ReferenceId: _NotExportedModule
Missing ReferenceId: ClassA
Missing ReferenceId: NotExportedModule
Missing ReferenceId: NotExportedModule
Missing ReferenceId: TopLevelModule1
Missing ReferenceId: TopLevelModule1
Missing SymbolId: TopLevelModule2
Missing SymbolId: _TopLevelModule2
Missing SymbolId: SubModule3
Missing SymbolId: _SubModule3
Missing ReferenceId: _SubModule3
Missing ReferenceId: ClassA
Missing ReferenceId: SubModule3
Missing ReferenceId: SubModule3
Missing ReferenceId: _TopLevelModule2
Missing ReferenceId: _TopLevelModule2
Missing ReferenceId: TopLevelModule2
Missing ReferenceId: TopLevelModule2

tasks/coverage/typescript/tests/cases/compiler/typeVariableConstraintIntersections.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["OptionHandlers", "OptionOne", "OptionTwo", "Options", "T00", "T01", "T02", "T10", "T11", "T12", "T20", "T21", "T22", "T23", "T30", "T31", "T32", "T33", "T40", "T41", "T42", "T43", "T50", "T51", "T52", "T53", "T54", "T55", "T60", "T61", "T62", "T63", "T70", "T71", "T72", "T73", "foo", "handleOption", "optionHandlers"]
current  scope ScopeId(0): ["foo", "handleOption", "optionHandlers"]
Bindings Mismatch:
previous scope ScopeId(36): ["K", "x"]
current  scope ScopeId(1): ["x"]
Bindings Mismatch:
previous scope ScopeId(49): ["K", "handler", "kind", "option"]
current  scope ScopeId(9): ["handler", "kind", "option"]

tasks/coverage/typescript/tests/cases/compiler/typeVariableTypeGuards.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["A", "Banana", "BigBanana", "BigMonkey", "Foo", "Item", "Monkey", "f1", "f2", "f3", "f4", "f5", "f6"]
current  scope ScopeId(0): ["A", "BigMonkey", "Monkey", "f1", "f2", "f3", "f4", "f5", "f6"]
Bindings Mismatch:
previous scope ScopeId(3): ["P"]
current  scope ScopeId(1): []
Bindings Mismatch:
previous scope ScopeId(7): ["T"]
current  scope ScopeId(4): []
Bindings Mismatch:
previous scope ScopeId(16): ["T", "obj"]
current  scope ScopeId(11): ["obj"]
Bindings Mismatch:
previous scope ScopeId(18): ["T", "obj"]
current  scope ScopeId(13): ["obj"]
Bindings Mismatch:
previous scope ScopeId(20): ["T", "obj"]
current  scope ScopeId(15): ["obj"]
Bindings Mismatch:
previous scope ScopeId(22): ["T", "obj", "x"]
current  scope ScopeId(17): ["obj", "x"]
Bindings Mismatch:
previous scope ScopeId(24): ["K", "T", "key", "obj"]
current  scope ScopeId(19): ["key", "obj"]
Bindings Mismatch:
previous scope ScopeId(26): ["T", "a"]
current  scope ScopeId(21): ["a"]

tasks/coverage/typescript/tests/cases/compiler/typedArrays.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(8): ["T", "mapFn", "obj", "typedArrays"]
current  scope ScopeId(8): ["mapFn", "obj", "typedArrays"]
Bindings Mismatch:
previous scope ScopeId(11): ["T", "mapFn", "obj", "thisArg", "typedArrays"]
current  scope ScopeId(11): ["mapFn", "obj", "thisArg", "typedArrays"]

tasks/coverage/typescript/tests/cases/compiler/typedGenericPrototypeMember.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(1): ["T"]
current  scope ScopeId(1): []

tasks/coverage/typescript/tests/cases/compiler/typeofEnum.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(1): ["E", "e1", "e2"]
current  scope ScopeId(1): ["E"]

tasks/coverage/typescript/tests/cases/compiler/typeofImportInstantiationExpression.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Arg", "myFunction"]
current  scope ScopeId(0): ["myFunction"]
Bindings Mismatch:
previous scope ScopeId(2): ["T", "U", "arg"]
current  scope ScopeId(1): ["arg"]

tasks/coverage/typescript/tests/cases/compiler/typeofObjectInference.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["First", "a", "b", "c", "d", "decorateA", "decorateB", "decorateC", "decorateD", "val"]
current  scope ScopeId(0): ["a", "b", "c", "d", "decorateA", "decorateB", "decorateC", "decorateD", "val"]
Bindings Mismatch:
previous scope ScopeId(1): ["O", "fn"]
current  scope ScopeId(1): ["fn"]
Bindings Mismatch:
previous scope ScopeId(4): ["O", "fn"]
current  scope ScopeId(4): ["fn"]
Bindings Mismatch:
previous scope ScopeId(7): ["O", "fn"]
current  scope ScopeId(7): ["fn"]
Bindings Mismatch:
previous scope ScopeId(11): ["O", "fn"]
current  scope ScopeId(10): ["fn"]

tasks/coverage/typescript/tests/cases/compiler/typeofStripsFreshness.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["ALL", "ANOTHER", "All", "Another", "Both", "Collection", "CollectionStatic", "result", "result2"]
current  scope ScopeId(0): ["ALL", "ANOTHER", "result", "result2"]
reference Mismatch:
previous reference ReferenceId(7): Some("Collection")
current  reference ReferenceId(0): None
reference Mismatch:
previous reference ReferenceId(13): Some("Collection")
current  reference ReferenceId(1): None

tasks/coverage/typescript/tests/cases/compiler/typeofUsedBeforeBlockScoped.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["C", "T", "W", "o", "o2"]
current  scope ScopeId(0): ["C", "o", "o2"]

tasks/coverage/typescript/tests/cases/compiler/umdGlobalConflict.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["v1", "v2"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/unaryPlus.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(1): ["E", "some", "thing"]
current  scope ScopeId(1): ["E"]

tasks/coverage/typescript/tests/cases/compiler/uncalledFunctionChecksInConditionalPerf.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["b"]
current  scope ScopeId(0): []
reference Mismatch:
previous reference ReferenceId(0): Some("b")
current  reference ReferenceId(0): None
reference Mismatch:
previous reference ReferenceId(1): Some("b")
current  reference ReferenceId(1): None
reference Mismatch:
previous reference ReferenceId(2): Some("b")
current  reference ReferenceId(2): None
reference Mismatch:
previous reference ReferenceId(3): Some("b")
current  reference ReferenceId(3): None
reference Mismatch:
previous reference ReferenceId(4): Some("b")
current  reference ReferenceId(4): None
reference Mismatch:
previous reference ReferenceId(5): Some("b")
current  reference ReferenceId(5): None
reference Mismatch:
previous reference ReferenceId(6): Some("b")
current  reference ReferenceId(6): None
reference Mismatch:
previous reference ReferenceId(7): Some("b")
current  reference ReferenceId(7): None
reference Mismatch:
previous reference ReferenceId(8): Some("b")
current  reference ReferenceId(8): None
reference Mismatch:
previous reference ReferenceId(9): Some("b")
current  reference ReferenceId(9): None
reference Mismatch:
previous reference ReferenceId(10): Some("b")
current  reference ReferenceId(10): None
reference Mismatch:
previous reference ReferenceId(11): Some("b")
current  reference ReferenceId(11): None
reference Mismatch:
previous reference ReferenceId(12): Some("b")
current  reference ReferenceId(12): None
reference Mismatch:
previous reference ReferenceId(13): Some("b")
current  reference ReferenceId(13): None
reference Mismatch:
previous reference ReferenceId(14): Some("b")
current  reference ReferenceId(14): None
reference Mismatch:
previous reference ReferenceId(15): Some("b")
current  reference ReferenceId(15): None
reference Mismatch:
previous reference ReferenceId(16): Some("b")
current  reference ReferenceId(16): None
reference Mismatch:
previous reference ReferenceId(17): Some("b")
current  reference ReferenceId(17): None
reference Mismatch:
previous reference ReferenceId(18): Some("b")
current  reference ReferenceId(18): None
reference Mismatch:
previous reference ReferenceId(19): Some("b")
current  reference ReferenceId(19): None
reference Mismatch:
previous reference ReferenceId(20): Some("b")
current  reference ReferenceId(20): None
reference Mismatch:
previous reference ReferenceId(21): Some("b")
current  reference ReferenceId(21): None
reference Mismatch:
previous reference ReferenceId(22): Some("b")
current  reference ReferenceId(22): None
reference Mismatch:
previous reference ReferenceId(23): Some("b")
current  reference ReferenceId(23): None
reference Mismatch:
previous reference ReferenceId(24): Some("b")
current  reference ReferenceId(24): None
reference Mismatch:
previous reference ReferenceId(25): Some("b")
current  reference ReferenceId(25): None

tasks/coverage/typescript/tests/cases/compiler/uncaughtCompilerError1.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["f", "index", "lineTokens", "token", "tokens"]
current  scope ScopeId(0): ["f"]
reference Mismatch:
previous reference ReferenceId(0): Some("lineTokens")
current  reference ReferenceId(0): None
reference Mismatch:
previous reference ReferenceId(1): Some("index")
current  reference ReferenceId(1): None
reference Mismatch:
previous reference ReferenceId(2): Some("index")
current  reference ReferenceId(2): None
reference Mismatch:
previous reference ReferenceId(3): Some("token")
current  reference ReferenceId(3): None
reference Mismatch:
previous reference ReferenceId(4): Some("tokens")
current  reference ReferenceId(4): None
reference Mismatch:
previous reference ReferenceId(5): Some("index")
current  reference ReferenceId(5): None
reference Mismatch:
previous reference ReferenceId(6): Some("index")
current  reference ReferenceId(6): None
reference Mismatch:
previous reference ReferenceId(7): Some("tokens")
current  reference ReferenceId(7): None
reference Mismatch:
previous reference ReferenceId(8): Some("tokens")
current  reference ReferenceId(8): None
reference Mismatch:
previous reference ReferenceId(9): Some("index")
current  reference ReferenceId(9): None
reference Mismatch:
previous reference ReferenceId(10): Some("tokens")
current  reference ReferenceId(10): None
reference Mismatch:
previous reference ReferenceId(11): Some("index")
current  reference ReferenceId(11): None

tasks/coverage/typescript/tests/cases/compiler/undefinedArgumentInference.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(1): ["T", "f1"]
current  scope ScopeId(1): ["f1"]

tasks/coverage/typescript/tests/cases/compiler/undefinedAsDiscriminantWithUnknown.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["S", "s"]
current  scope ScopeId(0): []
reference Mismatch:
previous reference ReferenceId(1): Some("s")
current  reference ReferenceId(0): None
reference Mismatch:
previous reference ReferenceId(3): Some("s")
current  reference ReferenceId(2): None
reference Mismatch:
previous reference ReferenceId(4): Some("s")
current  reference ReferenceId(3): None

tasks/coverage/typescript/tests/cases/compiler/undefinedInferentialTyping.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(1): ["T", "arr", "elemnt"]
current  scope ScopeId(1): ["arr", "elemnt"]

tasks/coverage/typescript/tests/cases/compiler/underscoreEscapedNameInEnum.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(1): ["E", "__foo", "bar"]
current  scope ScopeId(1): ["E"]

tasks/coverage/typescript/tests/cases/compiler/underscoreMapFirst.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["IData", "ISeries", "MyView", "_"]
current  scope ScopeId(0): ["MyView"]

tasks/coverage/typescript/tests/cases/compiler/unexportedInstanceClassVariables.ts
semantic error: Semantic Collector failed after transform
Missing SymbolId: M
Missing SymbolId: _M
Missing ReferenceId: M
Missing ReferenceId: M
Missing SymbolId: _M2
Missing ReferenceId: M
Missing ReferenceId: M

tasks/coverage/typescript/tests/cases/compiler/unionCallMixedTypeParameterPresence.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Err", "Ok", "e", "e2"]
current  scope ScopeId(0): ["e2"]
reference Mismatch:
previous reference ReferenceId(10): Some("e")
current  reference ReferenceId(0): None

tasks/coverage/typescript/tests/cases/compiler/unionExcessPropertyCheckNoApparentPropTypeMismatchErrors.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["INumberDictionary", "IStringDictionary", "count"]
current  scope ScopeId(0): ["count"]

tasks/coverage/typescript/tests/cases/compiler/unionExcessPropsWithPartialMember.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["A", "B", "a", "ab"]
current  scope ScopeId(0): []
reference Mismatch:
previous reference ReferenceId(3): Some("ab")
current  reference ReferenceId(0): None
reference Mismatch:
previous reference ReferenceId(4): Some("a")
current  reference ReferenceId(1): None

tasks/coverage/typescript/tests/cases/compiler/unionOfArraysFilterCall.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Buzz", "Fizz"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/unionOfClassCalls.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["A", "B", "a", "arr", "arr1", "arr2", "tmp"]
current  scope ScopeId(0): ["arr", "arr1", "arr2"]
reference Mismatch:
previous reference ReferenceId(9): Some("tmp")
current  reference ReferenceId(0): None
reference Mismatch:
previous reference ReferenceId(32): Some("a")
current  reference ReferenceId(17): None

tasks/coverage/typescript/tests/cases/compiler/unionOfEnumInference.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Enum", "Interface", "bar", "foo"]
current  scope ScopeId(0): ["Enum", "bar", "foo"]
Bindings Mismatch:
previous scope ScopeId(1): ["A", "B", "C", "Enum"]
current  scope ScopeId(1): ["Enum"]
Bindings Mismatch:
previous scope ScopeId(3): ["T", "x"]
current  scope ScopeId(2): ["x"]

tasks/coverage/typescript/tests/cases/compiler/unionReductionMutualSubtypes.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["ReturnVal", "k", "run", "val"]
current  scope ScopeId(0): ["k", "run"]
reference Mismatch:
previous reference ReferenceId(3): Some("val")
current  reference ReferenceId(1): None

tasks/coverage/typescript/tests/cases/compiler/unionSignaturesWithThisParameter.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(1): ["T", "ctor", "t"]
current  scope ScopeId(1): ["ctor", "t"]

tasks/coverage/typescript/tests/cases/compiler/unionTypeParameterInference.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Foo", "unlift"]
current  scope ScopeId(0): ["unlift"]
Bindings Mismatch:
previous scope ScopeId(3): ["U", "value"]
current  scope ScopeId(1): ["value"]

tasks/coverage/typescript/tests/cases/compiler/unionTypeWithIndexAndMethodSignature.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Options"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/unionTypeWithIndexAndTuple.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["I", "f"]
current  scope ScopeId(0): ["f"]

tasks/coverage/typescript/tests/cases/compiler/unionTypeWithIndexedLiteralType.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["I", "Idx", "U", "u"]
current  scope ScopeId(0): ["u"]

tasks/coverage/typescript/tests/cases/compiler/unionWithIndexSignature.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["NumList", "StrList", "TypedArray", "flatten", "foo", "isTypedArray"]
current  scope ScopeId(0): ["flatten", "foo", "isTypedArray"]
Bindings Mismatch:
previous scope ScopeId(3): ["T", "arr", "zz"]
current  scope ScopeId(1): ["arr", "zz"]
Bindings Mismatch:
previous scope ScopeId(6): ["T", "arr"]
current  scope ScopeId(3): ["arr"]

tasks/coverage/typescript/tests/cases/compiler/uniqueSymbolAssignmentOnGlobalAugmentationSuceeds.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["FOO_SYMBOL", "foo", "global"]
current  scope ScopeId(0): ["FOO_SYMBOL", "foo"]
Bindings Mismatch:
previous scope ScopeId(3): ["T", "p"]
current  scope ScopeId(1): ["p"]

tasks/coverage/typescript/tests/cases/compiler/unknownLikeUnionObjectFlagsNotPropagated.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["MyType", "myUnusedFunction", "myVar"]
current  scope ScopeId(0): ["myUnusedFunction", "myVar"]

tasks/coverage/typescript/tests/cases/compiler/unmatchedParameterPositions.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["s", "t1", "t2"]
current  scope ScopeId(0): ["t1", "t2"]
reference Mismatch:
previous reference ReferenceId(0): Some("s")
current  reference ReferenceId(0): None
reference Mismatch:
previous reference ReferenceId(1): Some("s")
current  reference ReferenceId(1): None

tasks/coverage/typescript/tests/cases/compiler/unusedClassesinNamespace3.ts
semantic error: Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript

tasks/coverage/typescript/tests/cases/compiler/unusedImports11.ts
semantic error: `import lib = require(...);` is only supported when compiling modules to CommonJS.
Please consider using `import lib from '...';` alongside Typescript's --allowSyntheticDefaultImports option, or add @babel/plugin-transform-modules-commonjs to your Babel config.

tasks/coverage/typescript/tests/cases/compiler/unusedImports13.ts
semantic error: `import lib = require(...);` is only supported when compiling modules to CommonJS.
Please consider using `import lib from '...';` alongside Typescript's --allowSyntheticDefaultImports option, or add @babel/plugin-transform-modules-commonjs to your Babel config.

tasks/coverage/typescript/tests/cases/compiler/unusedImports14.ts
semantic error: `import lib = require(...);` is only supported when compiling modules to CommonJS.
Please consider using `import lib from '...';` alongside Typescript's --allowSyntheticDefaultImports option, or add @babel/plugin-transform-modules-commonjs to your Babel config.

tasks/coverage/typescript/tests/cases/compiler/unusedImports15.ts
semantic error: `import lib = require(...);` is only supported when compiling modules to CommonJS.
Please consider using `import lib from '...';` alongside Typescript's --allowSyntheticDefaultImports option, or add @babel/plugin-transform-modules-commonjs to your Babel config.

tasks/coverage/typescript/tests/cases/compiler/unusedImports16.ts
semantic error: `import lib = require(...);` is only supported when compiling modules to CommonJS.
Please consider using `import lib from '...';` alongside Typescript's --allowSyntheticDefaultImports option, or add @babel/plugin-transform-modules-commonjs to your Babel config.

tasks/coverage/typescript/tests/cases/compiler/unusedInterfaceinNamespace4.ts
semantic error: Semantic Collector failed after transform
Missing SymbolId: Validation
Missing SymbolId: _Validation
Missing ReferenceId: _Validation
Missing ReferenceId: c1
Missing ReferenceId: Validation
Missing ReferenceId: Validation

tasks/coverage/typescript/tests/cases/compiler/unusedInterfaceinNamespace5.ts
semantic error: Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript

tasks/coverage/typescript/tests/cases/compiler/unusedLocalProperty.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Animal", "console"]
current  scope ScopeId(0): ["Animal"]
reference Mismatch:
previous reference ReferenceId(0): Some("console")
current  reference ReferenceId(1): None

tasks/coverage/typescript/tests/cases/compiler/unusedLocalsAndParametersDeferred.ts
semantic error: Semantic Collector failed after transform
Missing SymbolId: N
Missing SymbolId: _N
Missing ReferenceId: N
Missing ReferenceId: N

tasks/coverage/typescript/tests/cases/compiler/unusedLocalsAndParametersTypeAliases.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["I1", "I3", "handler1", "handler2", "handler3", "handler4", "handler5", "handler6", "x", "y"]
current  scope ScopeId(0): ["x", "y"]

tasks/coverage/typescript/tests/cases/compiler/unusedMethodsInInterface.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["I1"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/unusedTypeParameters6.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(1): ["T"]
current  scope ScopeId(1): []

tasks/coverage/typescript/tests/cases/compiler/unusedTypeParameters7.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(1): ["T"]
current  scope ScopeId(1): []

tasks/coverage/typescript/tests/cases/compiler/unusedTypeParameters9.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["C1", "C2", "C3"]
current  scope ScopeId(0): ["C1", "C2"]
Bindings Mismatch:
previous scope ScopeId(1): ["T"]
current  scope ScopeId(1): []
Bindings Mismatch:
previous scope ScopeId(3): ["T"]
current  scope ScopeId(2): []

tasks/coverage/typescript/tests/cases/compiler/unusedTypeParametersNotCheckedByNoUnusedLocals.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["C", "I", "T", "f", "l"]
current  scope ScopeId(0): ["C", "f", "l"]
Bindings Mismatch:
previous scope ScopeId(1): ["T"]
current  scope ScopeId(1): []
Bindings Mismatch:
previous scope ScopeId(4): ["T"]
current  scope ScopeId(2): []
Bindings Mismatch:
previous scope ScopeId(5): ["V"]
current  scope ScopeId(3): []
Bindings Mismatch:
previous scope ScopeId(6): ["T"]
current  scope ScopeId(4): []

tasks/coverage/typescript/tests/cases/compiler/unwitnessedTypeParameterVariance.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["A", "B", "CalcObj", "CalcValue", "a", "b", "foo"]
current  scope ScopeId(0): ["foo"]
Bindings Mismatch:
previous scope ScopeId(3): ["O", "unk", "x"]
current  scope ScopeId(1): ["unk", "x"]
reference Mismatch:
previous reference ReferenceId(16): Some("b")
current  reference ReferenceId(2): None
reference Mismatch:
previous reference ReferenceId(17): Some("a")
current  reference ReferenceId(3): None

tasks/coverage/typescript/tests/cases/compiler/useBeforeDeclaration.ts
semantic error: Semantic Collector failed after transform
Missing SymbolId: ts
Missing SymbolId: _ts
Missing ReferenceId: _ts
Missing ReferenceId: printVersion
Missing ReferenceId: _ts
Missing ReferenceId: log
Missing ReferenceId: ts
Missing ReferenceId: ts

tasks/coverage/typescript/tests/cases/compiler/useBeforeDeclaration_classDecorators.2.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["C1", "C2", "C3", "C4", "C5", "C6", "dec"]
current  scope ScopeId(0): ["C1", "C2", "C3", "C4", "C5", "C6"]
reference Mismatch:
previous reference ReferenceId(0): Some("dec")
current  reference ReferenceId(0): None
reference Mismatch:
previous reference ReferenceId(2): Some("dec")
current  reference ReferenceId(2): None
reference Mismatch:
previous reference ReferenceId(4): Some("dec")
current  reference ReferenceId(4): None
reference Mismatch:
previous reference ReferenceId(6): Some("dec")
current  reference ReferenceId(6): None
reference Mismatch:
previous reference ReferenceId(8): Some("dec")
current  reference ReferenceId(8): None
reference Mismatch:
previous reference ReferenceId(10): Some("dec")
current  reference ReferenceId(10): None
reference Mismatch:
previous reference ReferenceId(12): Some("dec")
current  reference ReferenceId(12): None
reference Mismatch:
previous reference ReferenceId(14): Some("dec")
current  reference ReferenceId(14): None
reference Mismatch:
previous reference ReferenceId(16): Some("dec")
current  reference ReferenceId(16): None
reference Mismatch:
previous reference ReferenceId(18): Some("dec")
current  reference ReferenceId(18): None
reference Mismatch:
previous reference ReferenceId(20): Some("dec")
current  reference ReferenceId(20): None
reference Mismatch:
previous reference ReferenceId(22): Some("dec")
current  reference ReferenceId(22): None
reference Mismatch:
previous reference ReferenceId(24): Some("dec")
current  reference ReferenceId(24): None
reference Mismatch:
previous reference ReferenceId(26): Some("dec")
current  reference ReferenceId(26): None
reference Mismatch:
previous reference ReferenceId(28): Some("dec")
current  reference ReferenceId(28): None
reference Mismatch:
previous reference ReferenceId(30): Some("dec")
current  reference ReferenceId(30): None
reference Mismatch:
previous reference ReferenceId(32): Some("dec")
current  reference ReferenceId(32): None
reference Mismatch:
previous reference ReferenceId(34): Some("dec")
current  reference ReferenceId(34): None
reference Mismatch:
previous reference ReferenceId(36): Some("dec")
current  reference ReferenceId(36): None
reference Mismatch:
previous reference ReferenceId(38): Some("dec")
current  reference ReferenceId(38): None
reference Mismatch:
previous reference ReferenceId(40): Some("dec")
current  reference ReferenceId(40): None
reference Mismatch:
previous reference ReferenceId(42): Some("dec")
current  reference ReferenceId(42): None
reference Mismatch:
previous reference ReferenceId(44): Some("dec")
current  reference ReferenceId(44): None
reference Mismatch:
previous reference ReferenceId(46): Some("dec")
current  reference ReferenceId(46): None
reference Mismatch:
previous reference ReferenceId(48): Some("dec")
current  reference ReferenceId(48): None
reference Mismatch:
previous reference ReferenceId(50): Some("dec")
current  reference ReferenceId(50): None
reference Mismatch:
previous reference ReferenceId(52): Some("dec")
current  reference ReferenceId(52): None
reference Mismatch:
previous reference ReferenceId(54): Some("dec")
current  reference ReferenceId(54): None
reference Mismatch:
previous reference ReferenceId(56): Some("dec")
current  reference ReferenceId(56): None
reference Mismatch:
previous reference ReferenceId(58): Some("dec")
current  reference ReferenceId(58): None
reference Mismatch:
previous reference ReferenceId(60): Some("dec")
current  reference ReferenceId(60): None
reference Mismatch:
previous reference ReferenceId(62): Some("dec")
current  reference ReferenceId(62): None
reference Mismatch:
previous reference ReferenceId(64): Some("dec")
current  reference ReferenceId(64): None
reference Mismatch:
previous reference ReferenceId(66): Some("dec")
current  reference ReferenceId(66): None
reference Mismatch:
previous reference ReferenceId(68): Some("dec")
current  reference ReferenceId(68): None
reference Mismatch:
previous reference ReferenceId(70): Some("dec")
current  reference ReferenceId(70): None
reference Mismatch:
previous reference ReferenceId(72): Some("dec")
current  reference ReferenceId(72): None
reference Mismatch:
previous reference ReferenceId(74): Some("dec")
current  reference ReferenceId(74): None
reference Mismatch:
previous reference ReferenceId(76): Some("dec")
current  reference ReferenceId(76): None
reference Mismatch:
previous reference ReferenceId(78): Some("dec")
current  reference ReferenceId(78): None
reference Mismatch:
previous reference ReferenceId(80): Some("dec")
current  reference ReferenceId(80): None
reference Mismatch:
previous reference ReferenceId(82): Some("dec")
current  reference ReferenceId(82): None

tasks/coverage/typescript/tests/cases/compiler/usedImportNotElidedInJs.ts
semantic error: Cannot use import statement outside a module
Cannot use import statement outside a module
Cannot use export statement outside a module

tasks/coverage/typescript/tests/cases/compiler/usingModuleWithExportImportInValuePosition.ts
semantic error: Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript

tasks/coverage/typescript/tests/cases/compiler/varArgsOnConstructorTypes.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["A", "B", "I1", "reg"]
current  scope ScopeId(0): ["A", "B", "reg"]

tasks/coverage/typescript/tests/cases/compiler/varianceCallbacksAndIndexedAccesses.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Action1", "MessageEventLike", "PostMessageObject", "Source", "Target", "WindowLike", "f1"]
current  scope ScopeId(0): ["f1"]

tasks/coverage/typescript/tests/cases/compiler/varianceCantBeStrictWhileStructureIsnt.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Bar", "Foo", "a", "a2", "b", "b2"]
current  scope ScopeId(0): []
reference Mismatch:
previous reference ReferenceId(6): Some("a")
current  reference ReferenceId(0): None
reference Mismatch:
previous reference ReferenceId(7): Some("b")
current  reference ReferenceId(1): None
reference Mismatch:
previous reference ReferenceId(8): Some("b")
current  reference ReferenceId(2): None
reference Mismatch:
previous reference ReferenceId(9): Some("a")
current  reference ReferenceId(3): None
reference Mismatch:
previous reference ReferenceId(10): Some("a2")
current  reference ReferenceId(4): None
reference Mismatch:
previous reference ReferenceId(11): Some("b2")
current  reference ReferenceId(5): None
reference Mismatch:
previous reference ReferenceId(12): Some("b2")
current  reference ReferenceId(6): None
reference Mismatch:
previous reference ReferenceId(13): Some("a2")
current  reference ReferenceId(7): None
reference Mismatch:
previous reference ReferenceId(14): Some("a")
current  reference ReferenceId(8): None
reference Mismatch:
previous reference ReferenceId(15): Some("b2")
current  reference ReferenceId(9): None
reference Mismatch:
previous reference ReferenceId(16): Some("b")
current  reference ReferenceId(10): None
reference Mismatch:
previous reference ReferenceId(17): Some("a2")
current  reference ReferenceId(11): None
reference Mismatch:
previous reference ReferenceId(18): Some("a2")
current  reference ReferenceId(12): None
reference Mismatch:
previous reference ReferenceId(19): Some("b")
current  reference ReferenceId(13): None
reference Mismatch:
previous reference ReferenceId(20): Some("b2")
current  reference ReferenceId(14): None
reference Mismatch:
previous reference ReferenceId(21): Some("a")
current  reference ReferenceId(15): None

tasks/coverage/typescript/tests/cases/compiler/varianceProblingAndZeroOrderIndexSignatureRelationsAlign.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Any", "Either", "Left", "MyInfo", "MyServer", "NeededInfo", "Right", "Server", "ToA", "ToB", "Type", "TypeOf", "tmp1", "tmp2"]
current  scope ScopeId(0): ["Left", "MyServer", "Right", "Server", "Type", "tmp1", "tmp2"]
Bindings Mismatch:
previous scope ScopeId(2): ["A", "L"]
current  scope ScopeId(1): []
Bindings Mismatch:
previous scope ScopeId(4): ["B", "f"]
current  scope ScopeId(3): ["f"]
Bindings Mismatch:
previous scope ScopeId(5): ["B", "fab"]
current  scope ScopeId(4): ["fab"]
Bindings Mismatch:
previous scope ScopeId(6): ["A", "L"]
current  scope ScopeId(5): []
Bindings Mismatch:
previous scope ScopeId(8): ["B", "f"]
current  scope ScopeId(7): ["f"]
Bindings Mismatch:
previous scope ScopeId(9): ["B", "fab"]
current  scope ScopeId(8): ["fab"]
Bindings Mismatch:
previous scope ScopeId(10): ["A", "I", "O"]
current  scope ScopeId(9): []
Bindings Mismatch:
previous scope ScopeId(22): ["N", "n"]
current  scope ScopeId(12): ["n"]
Bindings Mismatch:
previous scope ScopeId(23): ["X"]
current  scope ScopeId(13): []

tasks/coverage/typescript/tests/cases/compiler/varianceProblingAndZeroOrderIndexSignatureRelationsAlign2.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Any", "Either", "Left", "MyInfo", "MyServer", "NeededInfo", "Right", "Server", "ToA", "ToB", "Type", "TypeOf", "tmp1", "tmp2"]
current  scope ScopeId(0): ["Left", "MyServer", "Right", "Server", "Type", "tmp1", "tmp2"]
Bindings Mismatch:
previous scope ScopeId(2): ["A", "L"]
current  scope ScopeId(1): []
Bindings Mismatch:
previous scope ScopeId(4): ["B", "f"]
current  scope ScopeId(3): ["f"]
Bindings Mismatch:
previous scope ScopeId(5): ["B", "fab"]
current  scope ScopeId(4): ["fab"]
Bindings Mismatch:
previous scope ScopeId(6): ["A", "L"]
current  scope ScopeId(5): []
Bindings Mismatch:
previous scope ScopeId(8): ["B", "f"]
current  scope ScopeId(7): ["f"]
Bindings Mismatch:
previous scope ScopeId(9): ["B", "fab"]
current  scope ScopeId(8): ["fab"]
Bindings Mismatch:
previous scope ScopeId(10): ["A", "I", "O"]
current  scope ScopeId(9): []
Bindings Mismatch:
previous scope ScopeId(22): ["N", "n"]
current  scope ScopeId(12): ["n"]
Bindings Mismatch:
previous scope ScopeId(23): ["X"]
current  scope ScopeId(13): []

tasks/coverage/typescript/tests/cases/compiler/varianceRepeatedlyPropegatesWithUnreliableFlag.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["A", "B", "I", "P1", "P2", "X", "_i", "i", "p2"]
current  scope ScopeId(0): ["_i", "i", "p2"]

tasks/coverage/typescript/tests/cases/compiler/visSyntax.ts
semantic error: Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript

tasks/coverage/typescript/tests/cases/compiler/visibilityOfCrossModuleTypeUsage.ts
semantic error: `import lib = require(...);` is only supported when compiling modules to CommonJS.
Please consider using `import lib from '...';` alongside Typescript's --allowSyntheticDefaultImports option, or add @babel/plugin-transform-modules-commonjs to your Babel config.
`import lib = require(...);` is only supported when compiling modules to CommonJS.
Please consider using `import lib from '...';` alongside Typescript's --allowSyntheticDefaultImports option, or add @babel/plugin-transform-modules-commonjs to your Babel config.

tasks/coverage/typescript/tests/cases/compiler/voidReturnIndexUnionInference.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Props", "bad", "safeInvoke"]
current  scope ScopeId(0): ["bad", "safeInvoke"]
Bindings Mismatch:
previous scope ScopeId(1): ["A1", "R", "arg1", "func"]
current  scope ScopeId(1): ["arg1", "func"]
Bindings Mismatch:
previous scope ScopeId(7): ["P", "props"]
current  scope ScopeId(4): ["props"]

tasks/coverage/typescript/tests/cases/compiler/voidUndefinedReduction.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["foo", "isDefined"]
current  scope ScopeId(0): ["isDefined"]
Bindings Mismatch:
previous scope ScopeId(1): ["T", "value"]
current  scope ScopeId(1): ["value"]
reference Mismatch:
previous reference ReferenceId(6): Some("foo")
current  reference ReferenceId(4): None
reference Mismatch:
previous reference ReferenceId(8): Some("foo")
current  reference ReferenceId(6): None

tasks/coverage/typescript/tests/cases/compiler/vueLikeDataAndPropsInference.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["DataDef", "Instance", "Options", "PropsDefinition", "ThisTypedOptions", "WatchHandler"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/vueLikeDataAndPropsInference2.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["DataDef", "Instance", "Options", "PropsDefinition", "ThisTypedOptions", "WatchHandler"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/compiler/weakTypeAndPrimitiveNarrowing.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["LiteralsAndWeakTypes", "PrimitivesAndWeakTypes", "g", "h"]
current  scope ScopeId(0): ["g", "h"]

tasks/coverage/typescript/tests/cases/compiler/wideningWithTopLevelTypeParameter.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["C1", "C2", "C3", "C4", "FormControl", "FormControl2", "FormControl3", "a", "b", "c", "c0", "c1", "c2", "c3", "c4"]
current  scope ScopeId(0): ["FormControl", "FormControl2", "FormControl3", "a", "b", "c", "c0", "c1", "c2", "c3", "c4"]
Bindings Mismatch:
previous scope ScopeId(14): ["T"]
current  scope ScopeId(1): []
Bindings Mismatch:
previous scope ScopeId(17): ["T"]
current  scope ScopeId(3): []
Bindings Mismatch:
previous scope ScopeId(19): ["T"]
current  scope ScopeId(5): []

tasks/coverage/typescript/tests/cases/compiler/withStatementInternalComments.ts
semantic error: 'with' statements are not allowed

tasks/coverage/typescript/tests/cases/compiler/yieldStarContextualType.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["T", "U", "V", "f", "g"]
current  scope ScopeId(0): ["f"]
reference Mismatch:
previous reference ReferenceId(5): Some("g")
current  reference ReferenceId(0): None
reference Mismatch:
previous reference ReferenceId(6): Some("g")
current  reference ReferenceId(1): None

tasks/coverage/typescript/tests/cases/conformance/Symbols/ES5SymbolProperty1.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Symbol", "SymbolConstructor", "obj"]
current  scope ScopeId(0): ["Symbol", "obj"]

tasks/coverage/typescript/tests/cases/conformance/ambient/ambientDeclarations.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["E1", "E2", "E3", "M1", "external1", "m", "n", "p", "q", "x"]
current  scope ScopeId(0): ["p", "q", "x"]
reference Mismatch:
previous reference ReferenceId(2): Some("E3")
current  reference ReferenceId(0): None

tasks/coverage/typescript/tests/cases/conformance/ambient/ambientDeclarationsExternal.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["equ", "equ2"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/conformance/ambient/ambientEnumDeclaration1.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["E"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/conformance/ambient/ambientEnumDeclaration2.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["E", "E1"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/conformance/ambient/ambientExternalModuleMerging.ts
semantic error: `import lib = require(...);` is only supported when compiling modules to CommonJS.
Please consider using `import lib from '...';` alongside Typescript's --allowSyntheticDefaultImports option, or add @babel/plugin-transform-modules-commonjs to your Babel config.

tasks/coverage/typescript/tests/cases/conformance/ambient/ambientInsideNonAmbient.ts
semantic error: Semantic Collector failed after transform
Missing SymbolId: M2
Missing SymbolId: _M2
Missing ReferenceId: M2
Missing ReferenceId: M2

tasks/coverage/typescript/tests/cases/conformance/ambient/ambientInsideNonAmbientExternalModule.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["E", "M", "x"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/conformance/ambient/ambientShorthand.ts
semantic error: `import lib = require(...);` is only supported when compiling modules to CommonJS.
Please consider using `import lib from '...';` alongside Typescript's --allowSyntheticDefaultImports option, or add @babel/plugin-transform-modules-commonjs to your Babel config.

tasks/coverage/typescript/tests/cases/conformance/ambient/ambientShorthand_duplicate.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["foo"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/conformance/ambient/ambientShorthand_merging.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["bar", "foo"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/conformance/async/es2017/asyncAwait_es2017.ts
semantic error: Semantic Collector failed after transform
Missing SymbolId: M
Missing SymbolId: _M
Missing ReferenceId: _M
Missing ReferenceId: f1
Missing ReferenceId: M
Missing ReferenceId: M

tasks/coverage/typescript/tests/cases/conformance/async/es2017/asyncUseStrict_es2017.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["a", "func", "p"]
current  scope ScopeId(0): ["func"]
reference Mismatch:
previous reference ReferenceId(2): Some("p")
current  reference ReferenceId(0): None
reference Mismatch:
previous reference ReferenceId(3): Some("a")
current  reference ReferenceId(1): None

tasks/coverage/typescript/tests/cases/conformance/async/es2017/awaitBinaryExpression/awaitBinaryExpression1_es2017.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["a", "func", "p"]
current  scope ScopeId(0): ["func"]
reference Mismatch:
previous reference ReferenceId(3): Some("p")
current  reference ReferenceId(1): None
reference Mismatch:
previous reference ReferenceId(4): Some("a")
current  reference ReferenceId(2): None

tasks/coverage/typescript/tests/cases/conformance/async/es2017/awaitBinaryExpression/awaitBinaryExpression2_es2017.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["a", "func", "p"]
current  scope ScopeId(0): ["func"]
reference Mismatch:
previous reference ReferenceId(3): Some("p")
current  reference ReferenceId(1): None
reference Mismatch:
previous reference ReferenceId(4): Some("a")
current  reference ReferenceId(2): None

tasks/coverage/typescript/tests/cases/conformance/async/es2017/awaitBinaryExpression/awaitBinaryExpression3_es2017.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["a", "func", "p"]
current  scope ScopeId(0): ["func"]
reference Mismatch:
previous reference ReferenceId(3): Some("p")
current  reference ReferenceId(1): None
reference Mismatch:
previous reference ReferenceId(4): Some("a")
current  reference ReferenceId(2): None

tasks/coverage/typescript/tests/cases/conformance/async/es2017/awaitBinaryExpression/awaitBinaryExpression4_es2017.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["a", "func", "p"]
current  scope ScopeId(0): ["func"]
reference Mismatch:
previous reference ReferenceId(3): Some("p")
current  reference ReferenceId(1): None
reference Mismatch:
previous reference ReferenceId(4): Some("a")
current  reference ReferenceId(2): None

tasks/coverage/typescript/tests/cases/conformance/async/es2017/awaitBinaryExpression/awaitBinaryExpression5_es2017.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["a", "func", "p"]
current  scope ScopeId(0): ["func"]
reference Mismatch:
previous reference ReferenceId(4): Some("p")
current  reference ReferenceId(2): None

tasks/coverage/typescript/tests/cases/conformance/async/es2017/awaitCallExpression/awaitCallExpression1_es2017.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["a", "func", "o", "p", "pfn", "po"]
current  scope ScopeId(0): ["func"]
reference Mismatch:
previous reference ReferenceId(6): Some("a")
current  reference ReferenceId(2): None
reference Mismatch:
previous reference ReferenceId(7): Some("a")
current  reference ReferenceId(3): None
reference Mismatch:
previous reference ReferenceId(8): Some("a")
current  reference ReferenceId(4): None

tasks/coverage/typescript/tests/cases/conformance/async/es2017/awaitCallExpression/awaitCallExpression2_es2017.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["a", "func", "o", "p", "pfn", "po"]
current  scope ScopeId(0): ["func"]
reference Mismatch:
previous reference ReferenceId(6): Some("p")
current  reference ReferenceId(2): None
reference Mismatch:
previous reference ReferenceId(7): Some("a")
current  reference ReferenceId(3): None
reference Mismatch:
previous reference ReferenceId(8): Some("a")
current  reference ReferenceId(4): None

tasks/coverage/typescript/tests/cases/conformance/async/es2017/awaitCallExpression/awaitCallExpression3_es2017.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["a", "func", "o", "p", "pfn", "po"]
current  scope ScopeId(0): ["func"]
reference Mismatch:
previous reference ReferenceId(6): Some("a")
current  reference ReferenceId(2): None
reference Mismatch:
previous reference ReferenceId(7): Some("p")
current  reference ReferenceId(3): None
reference Mismatch:
previous reference ReferenceId(8): Some("a")
current  reference ReferenceId(4): None

tasks/coverage/typescript/tests/cases/conformance/async/es2017/awaitCallExpression/awaitCallExpression4_es2017.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["a", "func", "o", "p", "pfn", "po"]
current  scope ScopeId(0): ["func"]
reference Mismatch:
previous reference ReferenceId(5): Some("pfn")
current  reference ReferenceId(1): None
reference Mismatch:
previous reference ReferenceId(6): Some("a")
current  reference ReferenceId(2): None
reference Mismatch:
previous reference ReferenceId(7): Some("a")
current  reference ReferenceId(3): None
reference Mismatch:
previous reference ReferenceId(8): Some("a")
current  reference ReferenceId(4): None

tasks/coverage/typescript/tests/cases/conformance/async/es2017/awaitCallExpression/awaitCallExpression5_es2017.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["a", "func", "o", "p", "pfn", "po"]
current  scope ScopeId(0): ["func"]
reference Mismatch:
previous reference ReferenceId(5): Some("o")
current  reference ReferenceId(1): None
reference Mismatch:
previous reference ReferenceId(6): Some("a")
current  reference ReferenceId(2): None
reference Mismatch:
previous reference ReferenceId(7): Some("a")
current  reference ReferenceId(3): None
reference Mismatch:
previous reference ReferenceId(8): Some("a")
current  reference ReferenceId(4): None

tasks/coverage/typescript/tests/cases/conformance/async/es2017/awaitCallExpression/awaitCallExpression6_es2017.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["a", "func", "o", "p", "pfn", "po"]
current  scope ScopeId(0): ["func"]
reference Mismatch:
previous reference ReferenceId(5): Some("o")
current  reference ReferenceId(1): None
reference Mismatch:
previous reference ReferenceId(6): Some("p")
current  reference ReferenceId(2): None
reference Mismatch:
previous reference ReferenceId(7): Some("a")
current  reference ReferenceId(3): None
reference Mismatch:
previous reference ReferenceId(8): Some("a")
current  reference ReferenceId(4): None

tasks/coverage/typescript/tests/cases/conformance/async/es2017/awaitCallExpression/awaitCallExpression7_es2017.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["a", "func", "o", "p", "pfn", "po"]
current  scope ScopeId(0): ["func"]
reference Mismatch:
previous reference ReferenceId(5): Some("o")
current  reference ReferenceId(1): None
reference Mismatch:
previous reference ReferenceId(6): Some("a")
current  reference ReferenceId(2): None
reference Mismatch:
previous reference ReferenceId(7): Some("p")
current  reference ReferenceId(3): None
reference Mismatch:
previous reference ReferenceId(8): Some("a")
current  reference ReferenceId(4): None

tasks/coverage/typescript/tests/cases/conformance/async/es2017/awaitCallExpression/awaitCallExpression8_es2017.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["a", "func", "o", "p", "pfn", "po"]
current  scope ScopeId(0): ["func"]
reference Mismatch:
previous reference ReferenceId(5): Some("po")
current  reference ReferenceId(1): None
reference Mismatch:
previous reference ReferenceId(6): Some("a")
current  reference ReferenceId(2): None
reference Mismatch:
previous reference ReferenceId(7): Some("a")
current  reference ReferenceId(3): None
reference Mismatch:
previous reference ReferenceId(8): Some("a")
current  reference ReferenceId(4): None

tasks/coverage/typescript/tests/cases/conformance/async/es2017/awaitClassExpression_es2017.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["func", "p"]
current  scope ScopeId(0): ["func"]
reference Mismatch:
previous reference ReferenceId(3): Some("p")
current  reference ReferenceId(0): None

tasks/coverage/typescript/tests/cases/conformance/async/es2017/awaitInheritedPromise_es2017.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["A", "a", "f"]
current  scope ScopeId(0): ["f"]
reference Mismatch:
previous reference ReferenceId(2): Some("a")
current  reference ReferenceId(0): None

tasks/coverage/typescript/tests/cases/conformance/async/es5/asyncAwait_es5.ts
semantic error: Semantic Collector failed after transform
Missing SymbolId: M
Missing SymbolId: _M
Missing ReferenceId: _M
Missing ReferenceId: f1
Missing ReferenceId: M
Missing ReferenceId: M

tasks/coverage/typescript/tests/cases/conformance/async/es5/asyncImportedPromise_es5.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(1): ["T"]
current  scope ScopeId(1): []

tasks/coverage/typescript/tests/cases/conformance/async/es5/asyncQualifiedReturnType_es5.ts
semantic error: Semantic Collector failed after transform
Missing SymbolId: X
Missing SymbolId: _X
Missing ReferenceId: _X
Missing ReferenceId: MyPromise
Missing ReferenceId: X
Missing ReferenceId: X

tasks/coverage/typescript/tests/cases/conformance/async/es5/asyncUseStrict_es5.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["a", "func", "p"]
current  scope ScopeId(0): ["func"]
reference Mismatch:
previous reference ReferenceId(2): Some("p")
current  reference ReferenceId(0): None
reference Mismatch:
previous reference ReferenceId(3): Some("a")
current  reference ReferenceId(1): None

tasks/coverage/typescript/tests/cases/conformance/async/es5/awaitBinaryExpression/awaitBinaryExpression1_es5.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["a", "func", "p"]
current  scope ScopeId(0): ["func"]
reference Mismatch:
previous reference ReferenceId(3): Some("p")
current  reference ReferenceId(1): None
reference Mismatch:
previous reference ReferenceId(4): Some("a")
current  reference ReferenceId(2): None

tasks/coverage/typescript/tests/cases/conformance/async/es5/awaitBinaryExpression/awaitBinaryExpression2_es5.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["a", "func", "p"]
current  scope ScopeId(0): ["func"]
reference Mismatch:
previous reference ReferenceId(3): Some("p")
current  reference ReferenceId(1): None
reference Mismatch:
previous reference ReferenceId(4): Some("a")
current  reference ReferenceId(2): None

tasks/coverage/typescript/tests/cases/conformance/async/es5/awaitBinaryExpression/awaitBinaryExpression3_es5.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["a", "func", "p"]
current  scope ScopeId(0): ["func"]
reference Mismatch:
previous reference ReferenceId(3): Some("p")
current  reference ReferenceId(1): None
reference Mismatch:
previous reference ReferenceId(4): Some("a")
current  reference ReferenceId(2): None

tasks/coverage/typescript/tests/cases/conformance/async/es5/awaitBinaryExpression/awaitBinaryExpression4_es5.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["a", "func", "p"]
current  scope ScopeId(0): ["func"]
reference Mismatch:
previous reference ReferenceId(3): Some("p")
current  reference ReferenceId(1): None
reference Mismatch:
previous reference ReferenceId(4): Some("a")
current  reference ReferenceId(2): None

tasks/coverage/typescript/tests/cases/conformance/async/es5/awaitBinaryExpression/awaitBinaryExpression5_es5.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["a", "func", "p"]
current  scope ScopeId(0): ["func"]
reference Mismatch:
previous reference ReferenceId(4): Some("p")
current  reference ReferenceId(2): None

tasks/coverage/typescript/tests/cases/conformance/async/es5/awaitCallExpression/awaitCallExpression1_es5.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["a", "func", "o", "p", "pfn", "po"]
current  scope ScopeId(0): ["func"]
reference Mismatch:
previous reference ReferenceId(6): Some("a")
current  reference ReferenceId(2): None
reference Mismatch:
previous reference ReferenceId(7): Some("a")
current  reference ReferenceId(3): None
reference Mismatch:
previous reference ReferenceId(8): Some("a")
current  reference ReferenceId(4): None

tasks/coverage/typescript/tests/cases/conformance/async/es5/awaitCallExpression/awaitCallExpression2_es5.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["a", "func", "o", "p", "pfn", "po"]
current  scope ScopeId(0): ["func"]
reference Mismatch:
previous reference ReferenceId(6): Some("p")
current  reference ReferenceId(2): None
reference Mismatch:
previous reference ReferenceId(7): Some("a")
current  reference ReferenceId(3): None
reference Mismatch:
previous reference ReferenceId(8): Some("a")
current  reference ReferenceId(4): None

tasks/coverage/typescript/tests/cases/conformance/async/es5/awaitCallExpression/awaitCallExpression3_es5.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["a", "func", "o", "p", "pfn", "po"]
current  scope ScopeId(0): ["func"]
reference Mismatch:
previous reference ReferenceId(6): Some("a")
current  reference ReferenceId(2): None
reference Mismatch:
previous reference ReferenceId(7): Some("p")
current  reference ReferenceId(3): None
reference Mismatch:
previous reference ReferenceId(8): Some("a")
current  reference ReferenceId(4): None

tasks/coverage/typescript/tests/cases/conformance/async/es5/awaitCallExpression/awaitCallExpression4_es5.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["a", "func", "o", "p", "pfn", "po"]
current  scope ScopeId(0): ["func"]
reference Mismatch:
previous reference ReferenceId(5): Some("pfn")
current  reference ReferenceId(1): None
reference Mismatch:
previous reference ReferenceId(6): Some("a")
current  reference ReferenceId(2): None
reference Mismatch:
previous reference ReferenceId(7): Some("a")
current  reference ReferenceId(3): None
reference Mismatch:
previous reference ReferenceId(8): Some("a")
current  reference ReferenceId(4): None

tasks/coverage/typescript/tests/cases/conformance/async/es5/awaitCallExpression/awaitCallExpression5_es5.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["a", "func", "o", "p", "pfn", "po"]
current  scope ScopeId(0): ["func"]
reference Mismatch:
previous reference ReferenceId(5): Some("o")
current  reference ReferenceId(1): None
reference Mismatch:
previous reference ReferenceId(6): Some("a")
current  reference ReferenceId(2): None
reference Mismatch:
previous reference ReferenceId(7): Some("a")
current  reference ReferenceId(3): None
reference Mismatch:
previous reference ReferenceId(8): Some("a")
current  reference ReferenceId(4): None

tasks/coverage/typescript/tests/cases/conformance/async/es5/awaitCallExpression/awaitCallExpression6_es5.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["a", "func", "o", "p", "pfn", "po"]
current  scope ScopeId(0): ["func"]
reference Mismatch:
previous reference ReferenceId(5): Some("o")
current  reference ReferenceId(1): None
reference Mismatch:
previous reference ReferenceId(6): Some("p")
current  reference ReferenceId(2): None
reference Mismatch:
previous reference ReferenceId(7): Some("a")
current  reference ReferenceId(3): None
reference Mismatch:
previous reference ReferenceId(8): Some("a")
current  reference ReferenceId(4): None

tasks/coverage/typescript/tests/cases/conformance/async/es5/awaitCallExpression/awaitCallExpression7_es5.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["a", "func", "o", "p", "pfn", "po"]
current  scope ScopeId(0): ["func"]
reference Mismatch:
previous reference ReferenceId(5): Some("o")
current  reference ReferenceId(1): None
reference Mismatch:
previous reference ReferenceId(6): Some("a")
current  reference ReferenceId(2): None
reference Mismatch:
previous reference ReferenceId(7): Some("p")
current  reference ReferenceId(3): None
reference Mismatch:
previous reference ReferenceId(8): Some("a")
current  reference ReferenceId(4): None

tasks/coverage/typescript/tests/cases/conformance/async/es5/awaitCallExpression/awaitCallExpression8_es5.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["a", "func", "o", "p", "pfn", "po"]
current  scope ScopeId(0): ["func"]
reference Mismatch:
previous reference ReferenceId(5): Some("po")
current  reference ReferenceId(1): None
reference Mismatch:
previous reference ReferenceId(6): Some("a")
current  reference ReferenceId(2): None
reference Mismatch:
previous reference ReferenceId(7): Some("a")
current  reference ReferenceId(3): None
reference Mismatch:
previous reference ReferenceId(8): Some("a")
current  reference ReferenceId(4): None

tasks/coverage/typescript/tests/cases/conformance/async/es5/awaitClassExpression_es5.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["func", "p"]
current  scope ScopeId(0): ["func"]
reference Mismatch:
previous reference ReferenceId(3): Some("p")
current  reference ReferenceId(0): None

tasks/coverage/typescript/tests/cases/conformance/async/es5/awaitUnion_es5.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["a", "b", "c", "d", "e", "f"]
current  scope ScopeId(0): ["f"]
reference Mismatch:
previous reference ReferenceId(5): Some("a")
current  reference ReferenceId(0): None
reference Mismatch:
previous reference ReferenceId(6): Some("b")
current  reference ReferenceId(1): None
reference Mismatch:
previous reference ReferenceId(7): Some("c")
current  reference ReferenceId(2): None
reference Mismatch:
previous reference ReferenceId(8): Some("d")
current  reference ReferenceId(3): None
reference Mismatch:
previous reference ReferenceId(9): Some("e")
current  reference ReferenceId(4): None

tasks/coverage/typescript/tests/cases/conformance/async/es6/asyncAliasReturnType_es6.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["PromiseAlias", "f"]
current  scope ScopeId(0): ["f"]

tasks/coverage/typescript/tests/cases/conformance/async/es6/asyncAwait_es6.ts
semantic error: Semantic Collector failed after transform
Missing SymbolId: M
Missing SymbolId: _M
Missing ReferenceId: _M
Missing ReferenceId: f1
Missing ReferenceId: M
Missing ReferenceId: M

tasks/coverage/typescript/tests/cases/conformance/async/es6/asyncUseStrict_es6.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["a", "func", "p"]
current  scope ScopeId(0): ["func"]
reference Mismatch:
previous reference ReferenceId(2): Some("p")
current  reference ReferenceId(0): None
reference Mismatch:
previous reference ReferenceId(3): Some("a")
current  reference ReferenceId(1): None

tasks/coverage/typescript/tests/cases/conformance/async/es6/asyncWithVarShadowing_es6.ts
semantic error: Identifier `x` has already been declared

tasks/coverage/typescript/tests/cases/conformance/async/es6/awaitBinaryExpression/awaitBinaryExpression1_es6.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["a", "func", "p"]
current  scope ScopeId(0): ["func"]
reference Mismatch:
previous reference ReferenceId(3): Some("p")
current  reference ReferenceId(1): None
reference Mismatch:
previous reference ReferenceId(4): Some("a")
current  reference ReferenceId(2): None

tasks/coverage/typescript/tests/cases/conformance/async/es6/awaitBinaryExpression/awaitBinaryExpression2_es6.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["a", "func", "p"]
current  scope ScopeId(0): ["func"]
reference Mismatch:
previous reference ReferenceId(3): Some("p")
current  reference ReferenceId(1): None
reference Mismatch:
previous reference ReferenceId(4): Some("a")
current  reference ReferenceId(2): None

tasks/coverage/typescript/tests/cases/conformance/async/es6/awaitBinaryExpression/awaitBinaryExpression3_es6.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["a", "func", "p"]
current  scope ScopeId(0): ["func"]
reference Mismatch:
previous reference ReferenceId(3): Some("p")
current  reference ReferenceId(1): None
reference Mismatch:
previous reference ReferenceId(4): Some("a")
current  reference ReferenceId(2): None

tasks/coverage/typescript/tests/cases/conformance/async/es6/awaitBinaryExpression/awaitBinaryExpression4_es6.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["a", "func", "p"]
current  scope ScopeId(0): ["func"]
reference Mismatch:
previous reference ReferenceId(3): Some("p")
current  reference ReferenceId(1): None
reference Mismatch:
previous reference ReferenceId(4): Some("a")
current  reference ReferenceId(2): None

tasks/coverage/typescript/tests/cases/conformance/async/es6/awaitBinaryExpression/awaitBinaryExpression5_es6.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["a", "func", "p"]
current  scope ScopeId(0): ["func"]
reference Mismatch:
previous reference ReferenceId(4): Some("p")
current  reference ReferenceId(2): None

tasks/coverage/typescript/tests/cases/conformance/async/es6/awaitCallExpression/awaitCallExpression1_es6.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["a", "func", "o", "p", "pfn", "po"]
current  scope ScopeId(0): ["func"]
reference Mismatch:
previous reference ReferenceId(6): Some("a")
current  reference ReferenceId(2): None
reference Mismatch:
previous reference ReferenceId(7): Some("a")
current  reference ReferenceId(3): None
reference Mismatch:
previous reference ReferenceId(8): Some("a")
current  reference ReferenceId(4): None

tasks/coverage/typescript/tests/cases/conformance/async/es6/awaitCallExpression/awaitCallExpression2_es6.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["a", "func", "o", "p", "pfn", "po"]
current  scope ScopeId(0): ["func"]
reference Mismatch:
previous reference ReferenceId(6): Some("p")
current  reference ReferenceId(2): None
reference Mismatch:
previous reference ReferenceId(7): Some("a")
current  reference ReferenceId(3): None
reference Mismatch:
previous reference ReferenceId(8): Some("a")
current  reference ReferenceId(4): None

tasks/coverage/typescript/tests/cases/conformance/async/es6/awaitCallExpression/awaitCallExpression3_es6.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["a", "func", "o", "p", "pfn", "po"]
current  scope ScopeId(0): ["func"]
reference Mismatch:
previous reference ReferenceId(6): Some("a")
current  reference ReferenceId(2): None
reference Mismatch:
previous reference ReferenceId(7): Some("p")
current  reference ReferenceId(3): None
reference Mismatch:
previous reference ReferenceId(8): Some("a")
current  reference ReferenceId(4): None

tasks/coverage/typescript/tests/cases/conformance/async/es6/awaitCallExpression/awaitCallExpression4_es6.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["a", "func", "o", "p", "pfn", "po"]
current  scope ScopeId(0): ["func"]
reference Mismatch:
previous reference ReferenceId(5): Some("pfn")
current  reference ReferenceId(1): None
reference Mismatch:
previous reference ReferenceId(6): Some("a")
current  reference ReferenceId(2): None
reference Mismatch:
previous reference ReferenceId(7): Some("a")
current  reference ReferenceId(3): None
reference Mismatch:
previous reference ReferenceId(8): Some("a")
current  reference ReferenceId(4): None

tasks/coverage/typescript/tests/cases/conformance/async/es6/awaitCallExpression/awaitCallExpression5_es6.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["a", "func", "o", "p", "pfn", "po"]
current  scope ScopeId(0): ["func"]
reference Mismatch:
previous reference ReferenceId(5): Some("o")
current  reference ReferenceId(1): None
reference Mismatch:
previous reference ReferenceId(6): Some("a")
current  reference ReferenceId(2): None
reference Mismatch:
previous reference ReferenceId(7): Some("a")
current  reference ReferenceId(3): None
reference Mismatch:
previous reference ReferenceId(8): Some("a")
current  reference ReferenceId(4): None

tasks/coverage/typescript/tests/cases/conformance/async/es6/awaitCallExpression/awaitCallExpression6_es6.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["a", "func", "o", "p", "pfn", "po"]
current  scope ScopeId(0): ["func"]
reference Mismatch:
previous reference ReferenceId(5): Some("o")
current  reference ReferenceId(1): None
reference Mismatch:
previous reference ReferenceId(6): Some("p")
current  reference ReferenceId(2): None
reference Mismatch:
previous reference ReferenceId(7): Some("a")
current  reference ReferenceId(3): None
reference Mismatch:
previous reference ReferenceId(8): Some("a")
current  reference ReferenceId(4): None

tasks/coverage/typescript/tests/cases/conformance/async/es6/awaitCallExpression/awaitCallExpression7_es6.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["a", "func", "o", "p", "pfn", "po"]
current  scope ScopeId(0): ["func"]
reference Mismatch:
previous reference ReferenceId(5): Some("o")
current  reference ReferenceId(1): None
reference Mismatch:
previous reference ReferenceId(6): Some("a")
current  reference ReferenceId(2): None
reference Mismatch:
previous reference ReferenceId(7): Some("p")
current  reference ReferenceId(3): None
reference Mismatch:
previous reference ReferenceId(8): Some("a")
current  reference ReferenceId(4): None

tasks/coverage/typescript/tests/cases/conformance/async/es6/awaitCallExpression/awaitCallExpression8_es6.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["a", "func", "o", "p", "pfn", "po"]
current  scope ScopeId(0): ["func"]
reference Mismatch:
previous reference ReferenceId(5): Some("po")
current  reference ReferenceId(1): None
reference Mismatch:
previous reference ReferenceId(6): Some("a")
current  reference ReferenceId(2): None
reference Mismatch:
previous reference ReferenceId(7): Some("a")
current  reference ReferenceId(3): None
reference Mismatch:
previous reference ReferenceId(8): Some("a")
current  reference ReferenceId(4): None

tasks/coverage/typescript/tests/cases/conformance/async/es6/awaitClassExpression_es6.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["func", "p"]
current  scope ScopeId(0): ["func"]
reference Mismatch:
previous reference ReferenceId(3): Some("p")
current  reference ReferenceId(0): None

tasks/coverage/typescript/tests/cases/conformance/async/es6/awaitUnion_es6.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["a", "b", "c", "d", "e", "f"]
current  scope ScopeId(0): ["f"]
reference Mismatch:
previous reference ReferenceId(5): Some("a")
current  reference ReferenceId(0): None
reference Mismatch:
previous reference ReferenceId(6): Some("b")
current  reference ReferenceId(1): None
reference Mismatch:
previous reference ReferenceId(7): Some("c")
current  reference ReferenceId(2): None
reference Mismatch:
previous reference ReferenceId(8): Some("d")
current  reference ReferenceId(3): None
reference Mismatch:
previous reference ReferenceId(9): Some("e")
current  reference ReferenceId(4): None

tasks/coverage/typescript/tests/cases/conformance/asyncGenerators/asyncGeneratorGenericNonWrappedReturn.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(1): ["T", "a"]
current  scope ScopeId(1): ["a"]

tasks/coverage/typescript/tests/cases/conformance/classes/classDeclarations/classAndInterfaceWithSameName.ts
semantic error: Semantic Collector failed after transform
Missing SymbolId: M
Missing SymbolId: _M
Missing ReferenceId: M
Missing ReferenceId: M

tasks/coverage/typescript/tests/cases/conformance/classes/classDeclarations/classHeritageSpecification/classExtendingClass.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(5): ["T"]
current  scope ScopeId(5): []
Bindings Mismatch:
previous scope ScopeId(7): ["T", "x"]
current  scope ScopeId(7): ["x"]
Bindings Mismatch:
previous scope ScopeId(8): ["T"]
current  scope ScopeId(8): []

tasks/coverage/typescript/tests/cases/conformance/classes/classDeclarations/mergeClassInterfaceAndModule.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["C1", "C2", "C3", "C4"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/conformance/classes/classDeclarations/mergedInheritedClassInterface.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["BaseClass", "BaseInterface", "Child", "ChildNoBaseClass", "Grandchild", "child", "grandchild"]
current  scope ScopeId(0): ["BaseClass", "Child", "ChildNoBaseClass", "Grandchild", "child", "grandchild"]

tasks/coverage/typescript/tests/cases/conformance/classes/classExpression.ts
semantic error: Semantic Collector failed after transform
Missing SymbolId: M
Missing SymbolId: _M
Missing ReferenceId: M
Missing ReferenceId: M

tasks/coverage/typescript/tests/cases/conformance/classes/classExpressions/extendClassExpressionFromModule.ts
semantic error: `export = <value>;` is only supported when compiling modules to CommonJS.
Please consider using `export default <value>;`, or add @babel/plugin-transform-modules-commonjs to your Babel config.

tasks/coverage/typescript/tests/cases/conformance/classes/classExpressions/genericClassExpressionInFunction.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(1): ["T"]
current  scope ScopeId(1): []
Bindings Mismatch:
previous scope ScopeId(2): ["U"]
current  scope ScopeId(2): []
Bindings Mismatch:
previous scope ScopeId(4): ["V"]
current  scope ScopeId(4): []
Bindings Mismatch:
previous scope ScopeId(6): ["W"]
current  scope ScopeId(6): []
Bindings Mismatch:
previous scope ScopeId(7): ["Inner", "TInner"]
current  scope ScopeId(7): ["Inner"]

tasks/coverage/typescript/tests/cases/conformance/classes/constructorDeclarations/constructorParameters/constructorImplementationWithDefaultValues.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(4): ["T"]
current  scope ScopeId(3): []
Bindings Mismatch:
previous scope ScopeId(7): ["T"]
current  scope ScopeId(5): []

tasks/coverage/typescript/tests/cases/conformance/classes/constructorDeclarations/constructorParameters/constructorOverloadsWithOptionalParameters.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(4): ["T"]
current  scope ScopeId(3): []

tasks/coverage/typescript/tests/cases/conformance/classes/constructorDeclarations/constructorWithExpressionLessReturn.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(7): ["T"]
current  scope ScopeId(7): []

tasks/coverage/typescript/tests/cases/conformance/classes/members/classTypes/genericSetterInClassType.ts
semantic error: Semantic Collector failed after transform
Missing SymbolId: Generic
Missing SymbolId: _Generic
Missing ReferenceId: Generic
Missing ReferenceId: Generic

tasks/coverage/typescript/tests/cases/conformance/classes/members/constructorFunctionTypes/classWithNoConstructorOrBaseClass.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(2): ["T", "U"]
current  scope ScopeId(2): []

tasks/coverage/typescript/tests/cases/conformance/classes/members/constructorFunctionTypes/constructorHasPrototypeProperty.ts
semantic error: Semantic Collector failed after transform
Missing SymbolId: NonGeneric
Missing SymbolId: _NonGeneric
Missing ReferenceId: NonGeneric
Missing ReferenceId: NonGeneric
Missing SymbolId: Generic
Missing SymbolId: _Generic
Missing ReferenceId: Generic
Missing ReferenceId: Generic

tasks/coverage/typescript/tests/cases/conformance/classes/members/instanceAndStaticMembers/typeOfThisInInstanceMember2.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(1): ["T"]
current  scope ScopeId(1): []

tasks/coverage/typescript/tests/cases/conformance/classes/members/instanceAndStaticMembers/typeOfThisInStaticMembers.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(4): ["T"]
current  scope ScopeId(4): []

tasks/coverage/typescript/tests/cases/conformance/classes/members/instanceAndStaticMembers/typeOfThisInStaticMembers2.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(2): ["T"]
current  scope ScopeId(2): []

tasks/coverage/typescript/tests/cases/conformance/classes/members/privateNames/privateNameConstructorSignature.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["C", "D"]
current  scope ScopeId(0): ["C"]

tasks/coverage/typescript/tests/cases/conformance/classes/members/privateNames/typeFromPrivatePropertyAssignment.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["C", "Foo"]
current  scope ScopeId(0): ["C"]

tasks/coverage/typescript/tests/cases/conformance/classes/mixinClassesAnonymous.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Base", "Constructor", "Derived", "Printable", "Tagged", "Thing1", "Thing2", "Thing3", "Timestamped", "f1", "f2"]
current  scope ScopeId(0): ["Base", "Derived", "Printable", "Tagged", "Thing1", "Thing2", "Thing3", "Timestamped", "f1", "f2"]
Bindings Mismatch:
previous scope ScopeId(6): ["T", "superClass"]
current  scope ScopeId(5): ["superClass"]
Bindings Mismatch:
previous scope ScopeId(9): ["C", "T", "superClass"]
current  scope ScopeId(8): ["C", "superClass"]
Bindings Mismatch:
previous scope ScopeId(17): ["Base", "CT"]
current  scope ScopeId(16): ["Base"]

tasks/coverage/typescript/tests/cases/conformance/classes/propertyMemberDeclarations/accessorsOverrideProperty5.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["B", "C", "I"]
current  scope ScopeId(0): ["B", "C"]

tasks/coverage/typescript/tests/cases/conformance/classes/propertyMemberDeclarations/accessorsOverrideProperty8.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["AnyCtor", "Base", "MyClass", "Properties", "Types", "mine", "value"]
current  scope ScopeId(0): ["Base", "MyClass", "mine", "value"]

tasks/coverage/typescript/tests/cases/conformance/classes/propertyMemberDeclarations/accessorsOverrideProperty9.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["ApiEnum", "ApiEnumMember", "ApiItem", "ApiItemContainerMixin", "Constructor", "IApiItemConstructor", "PropertiesOf"]
current  scope ScopeId(0): ["ApiEnum", "ApiEnumMember", "ApiItem", "ApiItemContainerMixin"]
Bindings Mismatch:
previous scope ScopeId(9): ["MixedClass", "TBaseClass", "baseClass"]
current  scope ScopeId(4): ["MixedClass", "baseClass"]

tasks/coverage/typescript/tests/cases/conformance/classes/propertyMemberDeclarations/instanceMemberInitialization.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(2): ["K", "V"]
current  scope ScopeId(2): []

tasks/coverage/typescript/tests/cases/conformance/classes/propertyMemberDeclarations/memberAccessorDeclarations/typeOfThisInAccessor.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(4): ["T"]
current  scope ScopeId(4): []

tasks/coverage/typescript/tests/cases/conformance/classes/propertyMemberDeclarations/memberFunctionDeclarations/memberFunctionsWithPublicOverloads.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(16): ["T"]
current  scope ScopeId(6): []

tasks/coverage/typescript/tests/cases/conformance/classes/propertyMemberDeclarations/memberFunctionDeclarations/typeOfThisInMemberFunctions.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(4): ["T"]
current  scope ScopeId(4): []
Bindings Mismatch:
previous scope ScopeId(7): ["T"]
current  scope ScopeId(7): []

tasks/coverage/typescript/tests/cases/conformance/classes/propertyMemberDeclarations/overrideInterfaceProperty.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Kasizz", "Mup", "MupConstructor", "Sizz"]
current  scope ScopeId(0): ["Kasizz", "Sizz"]
reference Mismatch:
previous reference ReferenceId(8): Some("Mup")
current  reference ReferenceId(0): None
reference Mismatch:
previous reference ReferenceId(9): Some("Mup")
current  reference ReferenceId(1): None

tasks/coverage/typescript/tests/cases/conformance/classes/propertyMemberDeclarations/staticPropertyNameConflicts.ts
semantic error: Classes may not have a static property named prototype
Classes may not have a static property named prototype
Classes may not have a static property named prototype
Classes may not have a static property named prototype
Classes may not have a static property named prototype
Classes may not have a static property named prototype
Semantic Collector failed after transform
Missing SymbolId: TestOnDefaultExportedClass_1
Missing SymbolId: _TestOnDefaultExportedClass_
Missing ReferenceId: TestOnDefaultExportedClass_1
Missing ReferenceId: TestOnDefaultExportedClass_1
Missing SymbolId: TestOnDefaultExportedClass_2
Missing SymbolId: _TestOnDefaultExportedClass_2
Missing ReferenceId: TestOnDefaultExportedClass_2
Missing ReferenceId: TestOnDefaultExportedClass_2
Missing SymbolId: TestOnDefaultExportedClass_3
Missing SymbolId: _TestOnDefaultExportedClass_3
Missing ReferenceId: TestOnDefaultExportedClass_3
Missing ReferenceId: TestOnDefaultExportedClass_3
Missing SymbolId: TestOnDefaultExportedClass_4
Missing SymbolId: _TestOnDefaultExportedClass_4
Missing ReferenceId: TestOnDefaultExportedClass_4
Missing ReferenceId: TestOnDefaultExportedClass_4
Missing SymbolId: TestOnDefaultExportedClass_5
Missing SymbolId: _TestOnDefaultExportedClass_5
Missing ReferenceId: TestOnDefaultExportedClass_5
Missing ReferenceId: TestOnDefaultExportedClass_5
Missing SymbolId: TestOnDefaultExportedClass_6
Missing SymbolId: _TestOnDefaultExportedClass_6
Missing ReferenceId: TestOnDefaultExportedClass_6
Missing ReferenceId: TestOnDefaultExportedClass_6
Missing SymbolId: TestOnDefaultExportedClass_7
Missing SymbolId: _TestOnDefaultExportedClass_7
Missing ReferenceId: TestOnDefaultExportedClass_7
Missing ReferenceId: TestOnDefaultExportedClass_7
Missing SymbolId: TestOnDefaultExportedClass_8
Missing SymbolId: _TestOnDefaultExportedClass_8
Missing ReferenceId: TestOnDefaultExportedClass_8
Missing ReferenceId: TestOnDefaultExportedClass_8
Missing SymbolId: TestOnDefaultExportedClass_9
Missing SymbolId: _TestOnDefaultExportedClass_9
Missing ReferenceId: TestOnDefaultExportedClass_9
Missing ReferenceId: TestOnDefaultExportedClass_9
Missing SymbolId: TestOnDefaultExportedClass_10
Missing SymbolId: _TestOnDefaultExportedClass_10
Missing ReferenceId: TestOnDefaultExportedClass_10
Missing ReferenceId: TestOnDefaultExportedClass_10

tasks/coverage/typescript/tests/cases/conformance/classes/propertyMemberDeclarations/thisInInstanceMemberInitializer.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(2): ["T"]
current  scope ScopeId(2): []

tasks/coverage/typescript/tests/cases/conformance/classes/staticIndexSignature/staticIndexSignature6.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(2): ["T"]
current  scope ScopeId(2): []

tasks/coverage/typescript/tests/cases/conformance/constEnums/constEnum3.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["TestType", "TestTypeStr", "f1", "f2"]
current  scope ScopeId(0): ["TestType", "f1", "f2"]
Bindings Mismatch:
previous scope ScopeId(1): ["TestType", "bar", "foo"]
current  scope ScopeId(1): ["TestType"]

tasks/coverage/typescript/tests/cases/conformance/constEnums/constEnum4.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["A", "B", "C"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/conformance/constEnums/constEnumPropertyAccess3.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(1): ["A", "B", "C", "D", "E"]
current  scope ScopeId(1): ["E"]

tasks/coverage/typescript/tests/cases/conformance/controlFlow/assertionTypePredicates2.ts
semantic error: Cannot use export statement outside a module

tasks/coverage/typescript/tests/cases/conformance/controlFlow/controlFlowAssignmentExpression.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["D", "o", "obj", "x"]
current  scope ScopeId(0): ["o", "obj", "x"]

tasks/coverage/typescript/tests/cases/conformance/controlFlow/controlFlowBinaryOrExpression.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["EventTargetLike", "HTMLCollection", "NodeList", "cond", "sourceObj", "x"]
current  scope ScopeId(0): ["cond", "sourceObj", "x"]

tasks/coverage/typescript/tests/cases/conformance/controlFlow/controlFlowBindingElement.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(9): ["Window", "bar", "foo", "window"]
current  scope ScopeId(9): ["bar", "foo", "window"]
Bindings Mismatch:
previous scope ScopeId(13): ["Window", "bar", "foo", "window"]
current  scope ScopeId(12): ["bar", "foo", "window"]
Bindings Mismatch:
previous scope ScopeId(17): ["Window", "bar", "foo", "window"]
current  scope ScopeId(15): ["bar", "foo", "window"]

tasks/coverage/typescript/tests/cases/conformance/controlFlow/controlFlowComputedPropertyNames.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Thing", "f1", "f2", "f3", "f4"]
current  scope ScopeId(0): ["f1", "f2", "f3", "f4"]
Bindings Mismatch:
previous scope ScopeId(12): ["K", "key", "obj"]
current  scope ScopeId(11): ["key", "obj"]

tasks/coverage/typescript/tests/cases/conformance/controlFlow/controlFlowElementAccess2.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["config"]
current  scope ScopeId(0): []
reference Mismatch:
previous reference ReferenceId(0): Some("config")
current  reference ReferenceId(0): None
reference Mismatch:
previous reference ReferenceId(1): Some("config")
current  reference ReferenceId(1): None
reference Mismatch:
previous reference ReferenceId(2): Some("config")
current  reference ReferenceId(2): None
reference Mismatch:
previous reference ReferenceId(3): Some("config")
current  reference ReferenceId(3): None
reference Mismatch:
previous reference ReferenceId(4): Some("config")
current  reference ReferenceId(4): None
reference Mismatch:
previous reference ReferenceId(5): Some("config")
current  reference ReferenceId(5): None

tasks/coverage/typescript/tests/cases/conformance/controlFlow/controlFlowElementAccessNoCrash1.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["TestTscCompile", "TestTscEdit", "VerifyTscEditDiscrepanciesInput", "testTscCompile", "verifyTscEditDiscrepancies"]
current  scope ScopeId(0): ["testTscCompile", "verifyTscEditDiscrepancies"]

tasks/coverage/typescript/tests/cases/conformance/controlFlow/controlFlowForInStatement2.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["A", "B", "c", "keywordA", "keywordB", "stringB"]
current  scope ScopeId(0): ["keywordA", "keywordB", "stringB"]
reference Mismatch:
previous reference ReferenceId(4): Some("c")
current  reference ReferenceId(0): None
reference Mismatch:
previous reference ReferenceId(5): Some("c")
current  reference ReferenceId(1): None
reference Mismatch:
previous reference ReferenceId(7): Some("c")
current  reference ReferenceId(3): None
reference Mismatch:
previous reference ReferenceId(8): Some("c")
current  reference ReferenceId(4): None
reference Mismatch:
previous reference ReferenceId(10): Some("c")
current  reference ReferenceId(6): None
reference Mismatch:
previous reference ReferenceId(11): Some("c")
current  reference ReferenceId(7): None
reference Mismatch:
previous reference ReferenceId(13): Some("c")
current  reference ReferenceId(9): None
reference Mismatch:
previous reference ReferenceId(14): Some("c")
current  reference ReferenceId(10): None

tasks/coverage/typescript/tests/cases/conformance/controlFlow/controlFlowIfStatement.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["I", "a", "b", "c", "cond", "d", "e", "x"]
current  scope ScopeId(0): ["a", "b", "c", "cond", "d", "e", "x"]
Bindings Mismatch:
previous scope ScopeId(9): ["T", "data"]
current  scope ScopeId(9): ["data"]
Bindings Mismatch:
previous scope ScopeId(12): ["T", "data"]
current  scope ScopeId(12): ["data"]

tasks/coverage/typescript/tests/cases/conformance/controlFlow/controlFlowInOperator.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["A", "B", "a", "b", "c", "d", "uniqueID_54790", "uniqueID_54790_2", "uniqueID_54790_3"]
current  scope ScopeId(0): ["a", "b", "d", "uniqueID_54790", "uniqueID_54790_2", "uniqueID_54790_3"]
reference Mismatch:
previous reference ReferenceId(4): Some("c")
current  reference ReferenceId(0): None
reference Mismatch:
previous reference ReferenceId(5): Some("c")
current  reference ReferenceId(1): None
reference Mismatch:
previous reference ReferenceId(6): Some("c")
current  reference ReferenceId(2): None
reference Mismatch:
previous reference ReferenceId(7): Some("c")
current  reference ReferenceId(3): None
reference Mismatch:
previous reference ReferenceId(8): Some("c")
current  reference ReferenceId(4): None
reference Mismatch:
previous reference ReferenceId(10): Some("c")
current  reference ReferenceId(6): None
reference Mismatch:
previous reference ReferenceId(11): Some("c")
current  reference ReferenceId(7): None
reference Mismatch:
previous reference ReferenceId(12): Some("c")
current  reference ReferenceId(8): None
reference Mismatch:
previous reference ReferenceId(15): Some("c")
current  reference ReferenceId(11): None
reference Mismatch:
previous reference ReferenceId(16): Some("c")
current  reference ReferenceId(12): None

tasks/coverage/typescript/tests/cases/conformance/controlFlow/controlFlowInstanceofExtendsFunction.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["X", "Y", "global", "x"]
current  scope ScopeId(0): ["X", "Y", "x"]

tasks/coverage/typescript/tests/cases/conformance/controlFlow/controlFlowOptionalChain2.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["A", "B", "N", "U", "X", "f1", "f2", "f3", "f4", "f5", "f6", "f7", "f8", "funcThree", "funcTwo"]
current  scope ScopeId(0): ["f1", "f2", "f3", "f4", "f5", "f6", "f7", "f8", "funcThree", "funcTwo"]

tasks/coverage/typescript/tests/cases/conformance/controlFlow/controlFlowStringIndex.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["A", "value"]
current  scope ScopeId(0): []
reference Mismatch:
previous reference ReferenceId(1): Some("value")
current  reference ReferenceId(0): None
reference Mismatch:
previous reference ReferenceId(2): Some("value")
current  reference ReferenceId(1): None
reference Mismatch:
previous reference ReferenceId(3): Some("value")
current  reference ReferenceId(2): None
reference Mismatch:
previous reference ReferenceId(4): Some("value")
current  reference ReferenceId(3): None

tasks/coverage/typescript/tests/cases/conformance/controlFlow/controlFlowTruthiness.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(23): ["T", "x"]
current  scope ScopeId(22): ["x"]
Bindings Mismatch:
previous scope ScopeId(26): ["T", "x"]
current  scope ScopeId(25): ["x"]

tasks/coverage/typescript/tests/cases/conformance/controlFlow/controlFlowWithTemplateLiterals.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["envVar", "obj"]
current  scope ScopeId(0): []
reference Mismatch:
previous reference ReferenceId(0): Some("envVar")
current  reference ReferenceId(0): None
reference Mismatch:
previous reference ReferenceId(1): Some("envVar")
current  reference ReferenceId(1): None
reference Mismatch:
previous reference ReferenceId(2): Some("obj")
current  reference ReferenceId(2): None
reference Mismatch:
previous reference ReferenceId(3): Some("obj")
current  reference ReferenceId(3): None

tasks/coverage/typescript/tests/cases/conformance/controlFlow/dependentDestructuredVariablesFromNestedPatterns.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(5): ["T", "fn", "promises"]
current  scope ScopeId(5): ["fn", "promises"]

tasks/coverage/typescript/tests/cases/conformance/controlFlow/switchWithConstrainedTypeVariable.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(1): ["T", "key"]
current  scope ScopeId(1): ["key"]

tasks/coverage/typescript/tests/cases/conformance/controlFlow/typeGuardsAsAssertions.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["None", "Optional", "Some", "cond", "f1", "f2", "f3", "f4", "f5", "f6", "f7", "fn", "foo1", "foo2", "isSome", "none", "someFrom"]
current  scope ScopeId(0): ["cond", "f1", "f2", "f3", "f4", "f5", "f6", "f7", "fn", "foo1", "foo2", "isSome", "none", "someFrom"]
Bindings Mismatch:
previous scope ScopeId(4): ["a", "value"]
current  scope ScopeId(1): ["value"]
Bindings Mismatch:
previous scope ScopeId(5): ["a", "some"]
current  scope ScopeId(2): ["some"]
Bindings Mismatch:
previous scope ScopeId(6): ["makeSome", "r", "result"]
current  scope ScopeId(3): ["makeSome", "result"]

tasks/coverage/typescript/tests/cases/conformance/controlFlow/typeGuardsTypeParameters.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(2): ["T", "x"]
current  scope ScopeId(2): ["x"]
Bindings Mismatch:
previous scope ScopeId(4): ["T", "x"]
current  scope ScopeId(4): ["x"]
Bindings Mismatch:
previous scope ScopeId(6): ["T", "item", "strings"]
current  scope ScopeId(6): ["item", "strings"]

tasks/coverage/typescript/tests/cases/conformance/decorators/1.0lib-noErrors.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Array", "Boolean", "Date", "Error", "EvalError", "Function", "IArguments", "Infinity", "JSON", "Math", "NaN", "Number", "Object", "PropertyDescriptor", "PropertyDescriptorMap", "RangeError", "ReferenceError", "RegExp", "RegExpExecArray", "String", "SyntaxError", "T", "TypeError", "URIError"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/conformance/decorators/class/constructor/decoratorOnClassConstructor4.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["A", "B", "C", "dec"]
current  scope ScopeId(0): ["A", "B", "C"]
reference Mismatch:
previous reference ReferenceId(0): Some("dec")
current  reference ReferenceId(0): None
reference Mismatch:
previous reference ReferenceId(1): Some("dec")
current  reference ReferenceId(1): None
reference Mismatch:
previous reference ReferenceId(2): Some("dec")
current  reference ReferenceId(2): None

tasks/coverage/typescript/tests/cases/conformance/decorators/class/constructor/parameter/decoratorOnClassConstructorParameter5.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["BulkEditPreviewProvider", "IFoo"]
current  scope ScopeId(0): ["BulkEditPreviewProvider"]
reference Mismatch:
previous reference ReferenceId(1): Some("IFoo")
current  reference ReferenceId(1): None

tasks/coverage/typescript/tests/cases/conformance/decorators/class/decoratedClassExportsCommonJS1.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Something", "Testing123"]
current  scope ScopeId(0): ["Testing123"]
reference Mismatch:
previous reference ReferenceId(0): Some("Something")
current  reference ReferenceId(0): None

tasks/coverage/typescript/tests/cases/conformance/decorators/class/decoratedClassExportsCommonJS2.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Something", "Testing123"]
current  scope ScopeId(0): ["Testing123"]
reference Mismatch:
previous reference ReferenceId(0): Some("Something")
current  reference ReferenceId(0): None

tasks/coverage/typescript/tests/cases/conformance/decorators/class/decoratedClassExportsSystem1.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Something", "Testing123"]
current  scope ScopeId(0): ["Testing123"]
reference Mismatch:
previous reference ReferenceId(0): Some("Something")
current  reference ReferenceId(0): None

tasks/coverage/typescript/tests/cases/conformance/decorators/class/decoratedClassExportsSystem2.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Something", "Testing123"]
current  scope ScopeId(0): ["Testing123"]
reference Mismatch:
previous reference ReferenceId(0): Some("Something")
current  reference ReferenceId(0): None

tasks/coverage/typescript/tests/cases/conformance/decorators/class/decoratedClassFromExternalModule.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Decorated"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/conformance/decorators/class/decoratorOnClass9.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["A", "B", "dec"]
current  scope ScopeId(0): ["A", "B"]
reference Mismatch:
previous reference ReferenceId(0): Some("dec")
current  reference ReferenceId(0): None

tasks/coverage/typescript/tests/cases/conformance/decorators/class/method/decoratorOnClassMethod14.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Foo", "decorator"]
current  scope ScopeId(0): ["Foo"]
reference Mismatch:
previous reference ReferenceId(0): Some("decorator")
current  reference ReferenceId(0): None

tasks/coverage/typescript/tests/cases/conformance/decorators/class/method/decoratorOnClassMethod15.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Foo", "decorator"]
current  scope ScopeId(0): ["Foo"]
reference Mismatch:
previous reference ReferenceId(0): Some("decorator")
current  reference ReferenceId(0): None

tasks/coverage/typescript/tests/cases/conformance/decorators/class/method/decoratorOnClassMethod16.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Foo", "decorator"]
current  scope ScopeId(0): ["Foo"]
reference Mismatch:
previous reference ReferenceId(0): Some("decorator")
current  reference ReferenceId(0): None

tasks/coverage/typescript/tests/cases/conformance/decorators/class/method/decoratorOnClassMethod18.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Foo", "decorator"]
current  scope ScopeId(0): ["Foo"]
reference Mismatch:
previous reference ReferenceId(0): Some("decorator")
current  reference ReferenceId(0): None

tasks/coverage/typescript/tests/cases/conformance/decorators/class/method/decoratorOnClassMethod19.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["C1", "C2", "decorator"]
current  scope ScopeId(0): ["C1", "C2"]
reference Mismatch:
previous reference ReferenceId(0): Some("decorator")
current  reference ReferenceId(0): None
reference Mismatch:
previous reference ReferenceId(3): Some("decorator")
current  reference ReferenceId(2): None

tasks/coverage/typescript/tests/cases/conformance/decorators/decoratorMetadata.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["MyComponent", "Service", "decorator"]
current  scope ScopeId(0): ["MyComponent"]
reference Mismatch:
previous reference ReferenceId(0): Some("decorator")
current  reference ReferenceId(0): None
reference Mismatch:
previous reference ReferenceId(2): Some("decorator")
current  reference ReferenceId(2): None

tasks/coverage/typescript/tests/cases/conformance/decorators/decoratorMetadataWithTypeOnlyImport.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["MyComponent", "Service", "decorator"]
current  scope ScopeId(0): ["MyComponent"]
reference Mismatch:
previous reference ReferenceId(0): Some("decorator")
current  reference ReferenceId(0): None
reference Mismatch:
previous reference ReferenceId(2): Some("decorator")
current  reference ReferenceId(2): None

tasks/coverage/typescript/tests/cases/conformance/decorators/decoratorMetadataWithTypeOnlyImport2.ts
semantic error: Semantic Collector failed after transform
Missing SymbolId: Services
Missing SymbolId: _Services
Missing ReferenceId: _Services
Missing ReferenceId: Service
Missing ReferenceId: Services
Missing ReferenceId: Services

tasks/coverage/typescript/tests/cases/conformance/dynamicImport/importCallExpression4ES2020.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["C", "console"]
current  scope ScopeId(0): ["C"]
reference Mismatch:
previous reference ReferenceId(0): Some("console")
current  reference ReferenceId(0): None
reference Mismatch:
previous reference ReferenceId(2): Some("console")
current  reference ReferenceId(2): None
reference Mismatch:
previous reference ReferenceId(4): Some("console")
current  reference ReferenceId(4): None

tasks/coverage/typescript/tests/cases/conformance/dynamicImport/importCallExpressionInAMD4.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["C", "D", "console"]
current  scope ScopeId(0): ["C", "D"]
reference Mismatch:
previous reference ReferenceId(0): Some("console")
current  reference ReferenceId(0): None
reference Mismatch:
previous reference ReferenceId(2): Some("console")
current  reference ReferenceId(2): None
reference Mismatch:
previous reference ReferenceId(4): Some("console")
current  reference ReferenceId(4): None
reference Mismatch:
previous reference ReferenceId(6): Some("console")
current  reference ReferenceId(6): None
reference Mismatch:
previous reference ReferenceId(8): Some("console")
current  reference ReferenceId(8): None
reference Mismatch:
previous reference ReferenceId(10): Some("console")
current  reference ReferenceId(10): None

tasks/coverage/typescript/tests/cases/conformance/dynamicImport/importCallExpressionInCJS5.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["C", "D", "console"]
current  scope ScopeId(0): ["C", "D"]
reference Mismatch:
previous reference ReferenceId(0): Some("console")
current  reference ReferenceId(0): None
reference Mismatch:
previous reference ReferenceId(2): Some("console")
current  reference ReferenceId(2): None
reference Mismatch:
previous reference ReferenceId(4): Some("console")
current  reference ReferenceId(4): None
reference Mismatch:
previous reference ReferenceId(6): Some("console")
current  reference ReferenceId(6): None
reference Mismatch:
previous reference ReferenceId(8): Some("console")
current  reference ReferenceId(8): None
reference Mismatch:
previous reference ReferenceId(10): Some("console")
current  reference ReferenceId(10): None

tasks/coverage/typescript/tests/cases/conformance/dynamicImport/importCallExpressionInExportEqualsAMD.ts
semantic error: `export = <value>;` is only supported when compiling modules to CommonJS.
Please consider using `export default <value>;`, or add @babel/plugin-transform-modules-commonjs to your Babel config.

tasks/coverage/typescript/tests/cases/conformance/dynamicImport/importCallExpressionInExportEqualsCJS.ts
semantic error: `export = <value>;` is only supported when compiling modules to CommonJS.
Please consider using `export default <value>;`, or add @babel/plugin-transform-modules-commonjs to your Babel config.

tasks/coverage/typescript/tests/cases/conformance/dynamicImport/importCallExpressionInExportEqualsUMD.ts
semantic error: `export = <value>;` is only supported when compiling modules to CommonJS.
Please consider using `export default <value>;`, or add @babel/plugin-transform-modules-commonjs to your Babel config.

tasks/coverage/typescript/tests/cases/conformance/dynamicImport/importCallExpressionInScriptContext1.ts
semantic error: Cannot assign to 'arguments' in strict mode

tasks/coverage/typescript/tests/cases/conformance/dynamicImport/importCallExpressionInSystem4.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["C", "D", "console"]
current  scope ScopeId(0): ["C", "D"]
reference Mismatch:
previous reference ReferenceId(0): Some("console")
current  reference ReferenceId(0): None
reference Mismatch:
previous reference ReferenceId(2): Some("console")
current  reference ReferenceId(2): None
reference Mismatch:
previous reference ReferenceId(4): Some("console")
current  reference ReferenceId(4): None
reference Mismatch:
previous reference ReferenceId(6): Some("console")
current  reference ReferenceId(6): None
reference Mismatch:
previous reference ReferenceId(8): Some("console")
current  reference ReferenceId(8): None
reference Mismatch:
previous reference ReferenceId(10): Some("console")
current  reference ReferenceId(10): None

tasks/coverage/typescript/tests/cases/conformance/dynamicImport/importCallExpressionInUMD4.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["C", "D", "console"]
current  scope ScopeId(0): ["C", "D"]
reference Mismatch:
previous reference ReferenceId(0): Some("console")
current  reference ReferenceId(0): None
reference Mismatch:
previous reference ReferenceId(2): Some("console")
current  reference ReferenceId(2): None
reference Mismatch:
previous reference ReferenceId(4): Some("console")
current  reference ReferenceId(4): None
reference Mismatch:
previous reference ReferenceId(6): Some("console")
current  reference ReferenceId(6): None
reference Mismatch:
previous reference ReferenceId(8): Some("console")
current  reference ReferenceId(8): None
reference Mismatch:
previous reference ReferenceId(10): Some("console")
current  reference ReferenceId(10): None

tasks/coverage/typescript/tests/cases/conformance/dynamicImport/importCallExpressionReturnPromiseOfAny.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["defaultModule", "directory", "j", "loadModule", "moduleFile", "p1", "p11", "p2", "p3", "whatToLoad"]
current  scope ScopeId(0): ["j", "loadModule", "p1", "p11", "p2", "p3"]
reference Mismatch:
previous reference ReferenceId(0): Some("directory")
current  reference ReferenceId(0): None
reference Mismatch:
previous reference ReferenceId(1): Some("moduleFile")
current  reference ReferenceId(1): None
reference Mismatch:
previous reference ReferenceId(9): Some("whatToLoad")
current  reference ReferenceId(6): None

tasks/coverage/typescript/tests/cases/conformance/enums/enumBasics.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(1): ["A", "B", "C", "E1"]
current  scope ScopeId(1): ["E1"]
Bindings Mismatch:
previous scope ScopeId(2): ["A", "B", "C", "E2"]
current  scope ScopeId(2): ["E2"]
Bindings Mismatch:
previous scope ScopeId(3): ["E3", "X", "Y", "Z"]
current  scope ScopeId(3): ["E3"]
Bindings Mismatch:
previous scope ScopeId(4): ["E4", "X", "Y", "Z"]
current  scope ScopeId(4): ["E4"]
Bindings Mismatch:
previous scope ScopeId(5): ["A", "B", "C", "E5"]
current  scope ScopeId(5): ["E5"]
Bindings Mismatch:
previous scope ScopeId(6): ["A", "B", "C", "E6"]
current  scope ScopeId(6): ["E6"]
Bindings Mismatch:
previous scope ScopeId(7): ["A", "E7"]
current  scope ScopeId(7): ["E7"]
Bindings Mismatch:
previous scope ScopeId(8): ["B", "E8"]
current  scope ScopeId(8): ["E8"]
Bindings Mismatch:
previous scope ScopeId(9): ["A", "B", "E9"]
current  scope ScopeId(9): ["E9"]

tasks/coverage/typescript/tests/cases/conformance/enums/enumExportMergingES6.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(1): ["Animals", "Cat"]
current  scope ScopeId(1): ["Animals"]
Bindings Mismatch:
previous scope ScopeId(2): ["Animals", "Dog"]
current  scope ScopeId(2): ["Animals"]
Bindings Mismatch:
previous scope ScopeId(3): ["Animals", "CatDog"]
current  scope ScopeId(3): ["Animals"]

tasks/coverage/typescript/tests/cases/conformance/enums/enumMerging.ts
semantic error: Semantic Collector failed after transform
Missing SymbolId: M1
Missing SymbolId: _M
Missing ReferenceId: _M
Missing ReferenceId: EConst1
Missing ReferenceId: _M
Missing ReferenceId: EConst1
Missing ReferenceId: M1
Missing ReferenceId: M1
Missing SymbolId: M2
Missing SymbolId: _M2
Missing ReferenceId: _M2
Missing ReferenceId: EComp2
Missing ReferenceId: _M2
Missing ReferenceId: EComp2
Missing ReferenceId: M2
Missing ReferenceId: M2
Missing SymbolId: M3
Missing SymbolId: _M3
Missing ReferenceId: M3
Missing ReferenceId: M3
Missing SymbolId: M4
Missing SymbolId: _M4
Missing ReferenceId: _M4
Missing ReferenceId: Color
Missing ReferenceId: M4
Missing ReferenceId: M4
Missing SymbolId: M5
Missing SymbolId: _M5
Missing ReferenceId: _M5
Missing ReferenceId: Color
Missing ReferenceId: M5
Missing ReferenceId: M5
Missing SymbolId: M6
Missing SymbolId: _M6
Missing SymbolId: A
Missing SymbolId: _A
Missing ReferenceId: _A
Missing ReferenceId: Color
Missing ReferenceId: A
Missing ReferenceId: A
Missing ReferenceId: _M6
Missing ReferenceId: _M6
Missing ReferenceId: M6
Missing ReferenceId: M6
Missing SymbolId: _M7
Missing SymbolId: A
Missing SymbolId: _A2
Missing ReferenceId: _A2
Missing ReferenceId: Color
Missing ReferenceId: A
Missing ReferenceId: A
Missing ReferenceId: _M7
Missing ReferenceId: _M7
Missing ReferenceId: M6
Missing ReferenceId: M6

tasks/coverage/typescript/tests/cases/conformance/es2017/useObjectValuesAndEntries1.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["E", "I", "a", "entries", "entries1", "entries2", "entries3", "entries4", "entries5", "entries6", "i", "o", "values", "values1", "values2", "values3", "values4", "values5", "values6", "x"]
current  scope ScopeId(0): ["E", "a", "entries", "entries1", "entries2", "entries3", "entries4", "entries5", "entries6", "i", "o", "values", "values1", "values2", "values3", "values4", "values5", "values6", "x"]
Bindings Mismatch:
previous scope ScopeId(2): ["A", "B", "E"]
current  scope ScopeId(2): ["E"]

tasks/coverage/typescript/tests/cases/conformance/es2019/globalThisTypeIndexAccess.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["w_e"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/conformance/es2019/importMeta/importMeta.ts
semantic error: The only valid meta property for import is import.meta
The only valid meta property for import is import.meta

tasks/coverage/typescript/tests/cases/conformance/es2019/importMeta/importMetaNarrowing.ts
semantic error: Unexpected import.meta expression
Unexpected import.meta expression

tasks/coverage/typescript/tests/cases/conformance/es2020/modules/exportAsNamespace5.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Alias", "ns"]
current  scope ScopeId(0): ["ns"]

tasks/coverage/typescript/tests/cases/conformance/es2021/logicalAssignment/logicalAssignment1.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["a", "b", "c", "d", "e", "f", "g", "h", "i"]
current  scope ScopeId(0): []
reference Mismatch:
previous reference ReferenceId(0): Some("a")
current  reference ReferenceId(0): None
reference Mismatch:
previous reference ReferenceId(1): Some("b")
current  reference ReferenceId(1): None
reference Mismatch:
previous reference ReferenceId(2): Some("c")
current  reference ReferenceId(2): None
reference Mismatch:
previous reference ReferenceId(3): Some("d")
current  reference ReferenceId(3): None
reference Mismatch:
previous reference ReferenceId(4): Some("e")
current  reference ReferenceId(4): None
reference Mismatch:
previous reference ReferenceId(5): Some("f")
current  reference ReferenceId(5): None
reference Mismatch:
previous reference ReferenceId(6): Some("g")
current  reference ReferenceId(6): None
reference Mismatch:
previous reference ReferenceId(7): Some("h")
current  reference ReferenceId(7): None
reference Mismatch:
previous reference ReferenceId(8): Some("i")
current  reference ReferenceId(8): None

tasks/coverage/typescript/tests/cases/conformance/es2021/logicalAssignment/logicalAssignment2.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["A", "a", "b", "c", "result"]
current  scope ScopeId(0): []
reference Mismatch:
previous reference ReferenceId(4): Some("a")
current  reference ReferenceId(0): None
reference Mismatch:
previous reference ReferenceId(5): Some("result")
current  reference ReferenceId(1): None
reference Mismatch:
previous reference ReferenceId(6): Some("b")
current  reference ReferenceId(2): None
reference Mismatch:
previous reference ReferenceId(7): Some("result")
current  reference ReferenceId(3): None
reference Mismatch:
previous reference ReferenceId(8): Some("c")
current  reference ReferenceId(4): None
reference Mismatch:
previous reference ReferenceId(9): Some("result")
current  reference ReferenceId(5): None
reference Mismatch:
previous reference ReferenceId(10): Some("a")
current  reference ReferenceId(6): None
reference Mismatch:
previous reference ReferenceId(11): Some("result")
current  reference ReferenceId(7): None
reference Mismatch:
previous reference ReferenceId(12): Some("b")
current  reference ReferenceId(8): None
reference Mismatch:
previous reference ReferenceId(13): Some("result")
current  reference ReferenceId(9): None
reference Mismatch:
previous reference ReferenceId(14): Some("c")
current  reference ReferenceId(10): None
reference Mismatch:
previous reference ReferenceId(15): Some("result")
current  reference ReferenceId(11): None
reference Mismatch:
previous reference ReferenceId(16): Some("a")
current  reference ReferenceId(12): None
reference Mismatch:
previous reference ReferenceId(17): Some("result")
current  reference ReferenceId(13): None
reference Mismatch:
previous reference ReferenceId(18): Some("b")
current  reference ReferenceId(14): None
reference Mismatch:
previous reference ReferenceId(19): Some("result")
current  reference ReferenceId(15): None
reference Mismatch:
previous reference ReferenceId(20): Some("c")
current  reference ReferenceId(16): None
reference Mismatch:
previous reference ReferenceId(21): Some("result")
current  reference ReferenceId(17): None

tasks/coverage/typescript/tests/cases/conformance/es2021/logicalAssignment/logicalAssignment3.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["A", "a", "b", "c", "result"]
current  scope ScopeId(0): []
reference Mismatch:
previous reference ReferenceId(4): Some("a")
current  reference ReferenceId(0): None
reference Mismatch:
previous reference ReferenceId(5): Some("result")
current  reference ReferenceId(1): None
reference Mismatch:
previous reference ReferenceId(6): Some("b")
current  reference ReferenceId(2): None
reference Mismatch:
previous reference ReferenceId(7): Some("result")
current  reference ReferenceId(3): None
reference Mismatch:
previous reference ReferenceId(8): Some("c")
current  reference ReferenceId(4): None
reference Mismatch:
previous reference ReferenceId(9): Some("result")
current  reference ReferenceId(5): None

tasks/coverage/typescript/tests/cases/conformance/es2021/logicalAssignment/logicalAssignment9.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["x"]
current  scope ScopeId(0): []
reference Mismatch:
previous reference ReferenceId(0): Some("x")
current  reference ReferenceId(0): None
reference Mismatch:
previous reference ReferenceId(1): Some("x")
current  reference ReferenceId(1): None

tasks/coverage/typescript/tests/cases/conformance/es2022/arbitraryModuleNamespaceIdentifiers/arbitraryModuleNamespaceIdentifiers_module.ts
semantic error: Expected `,` but found `string`

tasks/coverage/typescript/tests/cases/conformance/es6/Symbols/symbolProperty11.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["C", "I", "c", "i"]
current  scope ScopeId(0): ["C", "c", "i"]

tasks/coverage/typescript/tests/cases/conformance/es6/Symbols/symbolProperty13.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["C", "I", "i"]
current  scope ScopeId(0): ["C", "i"]

tasks/coverage/typescript/tests/cases/conformance/es6/Symbols/symbolProperty14.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["C", "I", "i"]
current  scope ScopeId(0): ["C", "i"]

tasks/coverage/typescript/tests/cases/conformance/es6/Symbols/symbolProperty15.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["C", "I", "i"]
current  scope ScopeId(0): ["C", "i"]

tasks/coverage/typescript/tests/cases/conformance/es6/Symbols/symbolProperty16.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["C", "I", "i"]
current  scope ScopeId(0): ["C", "i"]

tasks/coverage/typescript/tests/cases/conformance/es6/Symbols/symbolProperty20.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["I", "i"]
current  scope ScopeId(0): ["i"]

tasks/coverage/typescript/tests/cases/conformance/es6/Symbols/symbolProperty22.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["I"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/conformance/es6/Symbols/symbolProperty23.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["C", "I"]
current  scope ScopeId(0): ["C"]

tasks/coverage/typescript/tests/cases/conformance/es6/Symbols/symbolProperty37.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["I"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/conformance/es6/Symbols/symbolProperty38.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["I"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/conformance/es6/Symbols/symbolProperty48.ts
semantic error: Semantic Collector failed after transform
Missing SymbolId: M
Missing SymbolId: _M
Missing ReferenceId: M
Missing ReferenceId: M

tasks/coverage/typescript/tests/cases/conformance/es6/Symbols/symbolProperty49.ts
semantic error: Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript

tasks/coverage/typescript/tests/cases/conformance/es6/Symbols/symbolProperty50.ts
semantic error: Semantic Collector failed after transform
Missing SymbolId: M
Missing SymbolId: _M
Missing ReferenceId: M
Missing ReferenceId: M

tasks/coverage/typescript/tests/cases/conformance/es6/Symbols/symbolProperty51.ts
semantic error: Semantic Collector failed after transform
Missing SymbolId: M
Missing SymbolId: _M
Missing ReferenceId: M
Missing ReferenceId: M

tasks/coverage/typescript/tests/cases/conformance/es6/Symbols/symbolProperty55.ts
semantic error: Semantic Collector failed after transform
Missing SymbolId: M
Missing SymbolId: _M
Missing ReferenceId: M
Missing ReferenceId: M

tasks/coverage/typescript/tests/cases/conformance/es6/Symbols/symbolProperty56.ts
semantic error: Semantic Collector failed after transform
Missing SymbolId: M
Missing SymbolId: _M
Missing ReferenceId: M
Missing ReferenceId: M

tasks/coverage/typescript/tests/cases/conformance/es6/Symbols/symbolProperty58.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["SymbolConstructor", "obj"]
current  scope ScopeId(0): ["obj"]

tasks/coverage/typescript/tests/cases/conformance/es6/Symbols/symbolProperty60.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["I1", "I2", "I3", "I4", "mySymbol"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/conformance/es6/Symbols/symbolProperty8.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["I"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/conformance/es6/Symbols/symbolType16.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Symbol", "sym"]
current  scope ScopeId(0): ["sym"]

tasks/coverage/typescript/tests/cases/conformance/es6/Symbols/symbolType17.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Foo", "x"]
current  scope ScopeId(0): ["x"]

tasks/coverage/typescript/tests/cases/conformance/es6/Symbols/symbolType18.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Foo", "x"]
current  scope ScopeId(0): ["x"]

tasks/coverage/typescript/tests/cases/conformance/es6/classDeclaration/emitClassDeclarationWithExtensionAndTypeArgumentInES6.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(1): ["T"]
current  scope ScopeId(1): []

tasks/coverage/typescript/tests/cases/conformance/es6/classDeclaration/emitClassDeclarationWithTypeArgumentAndOverloadInES6.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(1): ["T"]
current  scope ScopeId(1): []

tasks/coverage/typescript/tests/cases/conformance/es6/classDeclaration/emitClassDeclarationWithTypeArgumentInES6.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(1): ["T"]
current  scope ScopeId(1): []

tasks/coverage/typescript/tests/cases/conformance/es6/classDeclaration/superCallBeforeThisAccessing1.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Base", "D", "Factory"]
current  scope ScopeId(0): ["Base", "D"]
reference Mismatch:
previous reference ReferenceId(2): Some("Factory")
current  reference ReferenceId(2): None

tasks/coverage/typescript/tests/cases/conformance/es6/classExpressions/typeArgumentInferenceWithClassExpression1.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(1): ["T", "x"]
current  scope ScopeId(1): ["x"]

tasks/coverage/typescript/tests/cases/conformance/es6/classExpressions/typeArgumentInferenceWithClassExpression3.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(1): ["T", "x"]
current  scope ScopeId(1): ["x"]

tasks/coverage/typescript/tests/cases/conformance/es6/computedProperties/computedPropertyNames33_ES5.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(1): ["T"]
current  scope ScopeId(1): []
Bindings Mismatch:
previous scope ScopeId(2): ["T"]
current  scope ScopeId(2): []

tasks/coverage/typescript/tests/cases/conformance/es6/computedProperties/computedPropertyNames33_ES6.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(1): ["T"]
current  scope ScopeId(1): []
Bindings Mismatch:
previous scope ScopeId(2): ["T"]
current  scope ScopeId(2): []

tasks/coverage/typescript/tests/cases/conformance/es6/computedProperties/computedPropertyNames47_ES5.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(1): ["E1", "x"]
current  scope ScopeId(1): ["E1"]
Bindings Mismatch:
previous scope ScopeId(2): ["E2", "x"]
current  scope ScopeId(2): ["E2"]

tasks/coverage/typescript/tests/cases/conformance/es6/computedProperties/computedPropertyNames47_ES6.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(1): ["E1", "x"]
current  scope ScopeId(1): ["E1"]
Bindings Mismatch:
previous scope ScopeId(2): ["E2", "x"]
current  scope ScopeId(2): ["E2"]

tasks/coverage/typescript/tests/cases/conformance/es6/computedProperties/computedPropertyNames48_ES5.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(2): ["E", "x"]
current  scope ScopeId(1): ["E"]

tasks/coverage/typescript/tests/cases/conformance/es6/computedProperties/computedPropertyNames48_ES6.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(2): ["E", "x"]
current  scope ScopeId(1): ["E"]

tasks/coverage/typescript/tests/cases/conformance/es6/computedProperties/computedPropertyNames7_ES5.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(1): ["E", "member"]
current  scope ScopeId(1): ["E"]

tasks/coverage/typescript/tests/cases/conformance/es6/computedProperties/computedPropertyNames7_ES6.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(1): ["E", "member"]
current  scope ScopeId(1): ["E"]

tasks/coverage/typescript/tests/cases/conformance/es6/computedProperties/computedPropertyNamesContextualType1_ES5.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["I", "o"]
current  scope ScopeId(0): ["o"]

tasks/coverage/typescript/tests/cases/conformance/es6/computedProperties/computedPropertyNamesContextualType1_ES6.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["I", "o"]
current  scope ScopeId(0): ["o"]

tasks/coverage/typescript/tests/cases/conformance/es6/computedProperties/computedPropertyNamesContextualType2_ES5.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["I", "o"]
current  scope ScopeId(0): ["o"]

tasks/coverage/typescript/tests/cases/conformance/es6/computedProperties/computedPropertyNamesContextualType2_ES6.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["I", "o"]
current  scope ScopeId(0): ["o"]

tasks/coverage/typescript/tests/cases/conformance/es6/computedProperties/computedPropertyNamesContextualType3_ES5.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["I", "o"]
current  scope ScopeId(0): ["o"]

tasks/coverage/typescript/tests/cases/conformance/es6/computedProperties/computedPropertyNamesContextualType3_ES6.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["I", "o"]
current  scope ScopeId(0): ["o"]

tasks/coverage/typescript/tests/cases/conformance/es6/computedProperties/computedPropertyNamesContextualType4_ES5.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["I", "o"]
current  scope ScopeId(0): ["o"]

tasks/coverage/typescript/tests/cases/conformance/es6/computedProperties/computedPropertyNamesContextualType4_ES6.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["I", "o"]
current  scope ScopeId(0): ["o"]

tasks/coverage/typescript/tests/cases/conformance/es6/computedProperties/computedPropertyNamesContextualType5_ES5.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["I", "o"]
current  scope ScopeId(0): ["o"]

tasks/coverage/typescript/tests/cases/conformance/es6/computedProperties/computedPropertyNamesContextualType5_ES6.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["I", "o"]
current  scope ScopeId(0): ["o"]

tasks/coverage/typescript/tests/cases/conformance/es6/computedProperties/computedPropertyNamesContextualType6_ES5.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["I"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/conformance/es6/computedProperties/computedPropertyNamesContextualType6_ES6.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["I"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/conformance/es6/computedProperties/computedPropertyNamesContextualType7_ES5.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["I", "J"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/conformance/es6/computedProperties/computedPropertyNamesContextualType7_ES6.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["I", "J"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/conformance/es6/destructuring/declarationInAmbientContext.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["a", "b", "c", "d"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/conformance/es6/destructuring/destructuringArrayBindingPatternAndAssignment5SiblingInitializer.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["f1", "f2", "f3", "f4", "yadda"]
current  scope ScopeId(0): ["f1", "f2", "f3", "f4"]
reference Mismatch:
previous reference ReferenceId(7): Some("yadda")
current  reference ReferenceId(7): None

tasks/coverage/typescript/tests/cases/conformance/es6/destructuring/destructuringObjectBindingPatternAndAssignment1ES5.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["F", "F1", "a1", "a2", "b1", "b21", "b3", "b4", "b52", "bar", "c0", "c1", "d1", "foo", "foo1"]
current  scope ScopeId(0): ["a1", "a2", "b1", "b21", "b3", "b4", "b52", "bar", "c0", "c1", "d1", "foo", "foo1"]

tasks/coverage/typescript/tests/cases/conformance/es6/destructuring/destructuringObjectBindingPatternAndAssignment1ES6.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["F", "F1", "a1", "a2", "b1", "b21", "b3", "b4", "b52", "bar", "c0", "c1", "d1", "foo", "foo1"]
current  scope ScopeId(0): ["a1", "a2", "b1", "b21", "b3", "b4", "b52", "bar", "c0", "c1", "d1", "foo", "foo1"]

tasks/coverage/typescript/tests/cases/conformance/es6/destructuring/destructuringObjectBindingPatternAndAssignment7.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(1): ["K", "a", "b"]
current  scope ScopeId(1): ["K"]

tasks/coverage/typescript/tests/cases/conformance/es6/destructuring/destructuringObjectBindingPatternAndAssignment9SiblingInitializer.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["f1", "f2", "f3", "f4", "yadda"]
current  scope ScopeId(0): ["f1", "f2", "f3", "f4"]
reference Mismatch:
previous reference ReferenceId(7): Some("yadda")
current  reference ReferenceId(7): None

tasks/coverage/typescript/tests/cases/conformance/es6/destructuring/destructuringParameterDeclaration7ES5.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["ISomething", "baz", "foo", "one", "two"]
current  scope ScopeId(0): ["baz", "foo", "one", "two"]

tasks/coverage/typescript/tests/cases/conformance/es6/destructuring/destructuringParameterDeclaration7ES5iterable.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["ISomething", "baz", "foo", "one", "two"]
current  scope ScopeId(0): ["baz", "foo", "one", "two"]

tasks/coverage/typescript/tests/cases/conformance/es6/destructuring/destructuringVoid.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["v"]
current  scope ScopeId(0): []
reference Mismatch:
previous reference ReferenceId(0): Some("v")
current  reference ReferenceId(0): None

tasks/coverage/typescript/tests/cases/conformance/es6/for-ofStatements/for-of58.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["X", "Y", "arr"]
current  scope ScopeId(0): []
reference Mismatch:
previous reference ReferenceId(2): Some("arr")
current  reference ReferenceId(0): None

tasks/coverage/typescript/tests/cases/conformance/es6/memberFunctionDeclarations/MemberFunctionDeclaration7_es6.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(2): ["T"]
current  scope ScopeId(2): []

tasks/coverage/typescript/tests/cases/conformance/es6/moduleExportsSystem/topLevelVarHoistingCommonJS.ts
semantic error: 'with' statements are not allowed

tasks/coverage/typescript/tests/cases/conformance/es6/modules/exportsAndImports1-amd.ts
semantic error: Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript

tasks/coverage/typescript/tests/cases/conformance/es6/modules/exportsAndImports1-es6.ts
semantic error: Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript

tasks/coverage/typescript/tests/cases/conformance/es6/modules/exportsAndImports1.ts
semantic error: Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript

tasks/coverage/typescript/tests/cases/conformance/es6/modules/exportsAndImports3-amd.ts
semantic error: Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript

tasks/coverage/typescript/tests/cases/conformance/es6/modules/exportsAndImports3-es6.ts
semantic error: Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript

tasks/coverage/typescript/tests/cases/conformance/es6/modules/exportsAndImports3.ts
semantic error: Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript

tasks/coverage/typescript/tests/cases/conformance/es6/modules/exportsAndImports4-amd.ts
semantic error: `import lib = require(...);` is only supported when compiling modules to CommonJS.
Please consider using `import lib from '...';` alongside Typescript's --allowSyntheticDefaultImports option, or add @babel/plugin-transform-modules-commonjs to your Babel config.

tasks/coverage/typescript/tests/cases/conformance/es6/modules/exportsAndImports4-es6.ts
semantic error: `import lib = require(...);` is only supported when compiling modules to CommonJS.
Please consider using `import lib from '...';` alongside Typescript's --allowSyntheticDefaultImports option, or add @babel/plugin-transform-modules-commonjs to your Babel config.

tasks/coverage/typescript/tests/cases/conformance/es6/modules/exportsAndImports4.ts
semantic error: `import lib = require(...);` is only supported when compiling modules to CommonJS.
Please consider using `import lib from '...';` alongside Typescript's --allowSyntheticDefaultImports option, or add @babel/plugin-transform-modules-commonjs to your Babel config.

tasks/coverage/typescript/tests/cases/conformance/es6/modules/exportsAndImportsWithContextualKeywordNames02.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["as"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/conformance/es6/modules/exportsAndImportsWithUnderscores4.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["_", "__", "___", "___hello", "__esmodule", "__proto", "_hi", "console"]
current  scope ScopeId(0): ["_", "__", "___", "___hello", "__esmodule", "__proto", "_hi"]
reference Mismatch:
previous reference ReferenceId(0): Some("console")
current  reference ReferenceId(0): None
reference Mismatch:
previous reference ReferenceId(1): Some("console")
current  reference ReferenceId(1): None
reference Mismatch:
previous reference ReferenceId(2): Some("console")
current  reference ReferenceId(2): None
reference Mismatch:
previous reference ReferenceId(3): Some("console")
current  reference ReferenceId(3): None
reference Mismatch:
previous reference ReferenceId(4): Some("console")
current  reference ReferenceId(4): None
reference Mismatch:
previous reference ReferenceId(5): Some("console")
current  reference ReferenceId(5): None
reference Mismatch:
previous reference ReferenceId(6): Some("console")
current  reference ReferenceId(6): None

tasks/coverage/typescript/tests/cases/conformance/es6/shorthandPropertyAssignment/objectLiteralShorthandPropertiesWithModule.ts
semantic error: Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript

tasks/coverage/typescript/tests/cases/conformance/es6/shorthandPropertyAssignment/objectLiteralShorthandPropertiesWithModuleES6.ts
semantic error: Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript

tasks/coverage/typescript/tests/cases/conformance/es6/spread/iteratorSpreadInCall11.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(1): ["T", "s"]
current  scope ScopeId(1): ["s"]

tasks/coverage/typescript/tests/cases/conformance/es6/spread/iteratorSpreadInCall12.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(1): ["T"]
current  scope ScopeId(1): []

tasks/coverage/typescript/tests/cases/conformance/es6/templates/taggedTemplateStringsWithManyCallAndMemberExpressions.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["I", "f", "x"]
current  scope ScopeId(0): ["f", "x"]

tasks/coverage/typescript/tests/cases/conformance/es6/templates/taggedTemplateStringsWithManyCallAndMemberExpressionsES6.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["I", "f", "x"]
current  scope ScopeId(0): ["f", "x"]

tasks/coverage/typescript/tests/cases/conformance/es6/templates/taggedTemplateStringsWithTypedTags.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["I", "f"]
current  scope ScopeId(0): ["f"]

tasks/coverage/typescript/tests/cases/conformance/es6/templates/taggedTemplateStringsWithTypedTagsES6.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["I", "f"]
current  scope ScopeId(0): ["f"]

tasks/coverage/typescript/tests/cases/conformance/es6/templates/taggedTemplatesWithTypeArguments1.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Stuff", "T", "a", "b", "c", "obj"]
current  scope ScopeId(0): ["a", "b", "c"]
reference Mismatch:
previous reference ReferenceId(27): Some("obj")
current  reference ReferenceId(8): None
reference Mismatch:
previous reference ReferenceId(34): Some("obj")
current  reference ReferenceId(14): None

tasks/coverage/typescript/tests/cases/conformance/es6/yieldExpressions/generatorOverloads5.ts
semantic error: Semantic Collector failed after transform
Missing SymbolId: M
Missing SymbolId: _M
Missing ReferenceId: M
Missing ReferenceId: M

tasks/coverage/typescript/tests/cases/conformance/es6/yieldExpressions/generatorTypeCheck62.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Nothing1", "Nothing2", "Nothing3", "State", "StrategicState", "Strategy", "strategy"]
current  scope ScopeId(0): ["Nothing1", "Nothing2", "Nothing3", "strategy"]
Bindings Mismatch:
previous scope ScopeId(2): ["T", "gen", "stratName"]
current  scope ScopeId(1): ["gen", "stratName"]

tasks/coverage/typescript/tests/cases/conformance/es7/exponentiationOperator/exponentiationOperatorWithEnum.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(1): ["E", "a", "b"]
current  scope ScopeId(1): ["E"]

tasks/coverage/typescript/tests/cases/conformance/es7/exponentiationOperator/exponentiationOperatorWithEnumUnion.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(1): ["E", "a", "b"]
current  scope ScopeId(1): ["E"]
Bindings Mismatch:
previous scope ScopeId(2): ["F", "c", "d"]
current  scope ScopeId(2): ["F"]

tasks/coverage/typescript/tests/cases/conformance/esDecorators/classDeclaration/accessors/esDecorators-classDeclaration-accessors-nonStatic.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["C", "dec", "method3"]
current  scope ScopeId(0): ["C", "method3"]
reference Mismatch:
previous reference ReferenceId(0): Some("dec")
current  reference ReferenceId(0): None
reference Mismatch:
previous reference ReferenceId(1): Some("dec")
current  reference ReferenceId(1): None
reference Mismatch:
previous reference ReferenceId(2): Some("dec")
current  reference ReferenceId(2): None
reference Mismatch:
previous reference ReferenceId(3): Some("dec")
current  reference ReferenceId(3): None
reference Mismatch:
previous reference ReferenceId(4): Some("dec")
current  reference ReferenceId(4): None
reference Mismatch:
previous reference ReferenceId(6): Some("dec")
current  reference ReferenceId(6): None

tasks/coverage/typescript/tests/cases/conformance/esDecorators/classDeclaration/accessors/esDecorators-classDeclaration-accessors-nonStaticPrivate.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["C", "dec"]
current  scope ScopeId(0): ["C"]
reference Mismatch:
previous reference ReferenceId(0): Some("dec")
current  reference ReferenceId(0): None
reference Mismatch:
previous reference ReferenceId(1): Some("dec")
current  reference ReferenceId(1): None

tasks/coverage/typescript/tests/cases/conformance/esDecorators/classDeclaration/accessors/esDecorators-classDeclaration-accessors-static.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["C", "dec", "method3"]
current  scope ScopeId(0): ["C", "method3"]
reference Mismatch:
previous reference ReferenceId(0): Some("dec")
current  reference ReferenceId(0): None
reference Mismatch:
previous reference ReferenceId(1): Some("dec")
current  reference ReferenceId(1): None
reference Mismatch:
previous reference ReferenceId(2): Some("dec")
current  reference ReferenceId(2): None
reference Mismatch:
previous reference ReferenceId(3): Some("dec")
current  reference ReferenceId(3): None
reference Mismatch:
previous reference ReferenceId(4): Some("dec")
current  reference ReferenceId(4): None
reference Mismatch:
previous reference ReferenceId(6): Some("dec")
current  reference ReferenceId(6): None

tasks/coverage/typescript/tests/cases/conformance/esDecorators/classDeclaration/accessors/esDecorators-classDeclaration-accessors-staticPrivate.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["C", "D", "dec"]
current  scope ScopeId(0): ["C", "D"]
reference Mismatch:
previous reference ReferenceId(0): Some("dec")
current  reference ReferenceId(0): None
reference Mismatch:
previous reference ReferenceId(1): Some("dec")
current  reference ReferenceId(1): None
reference Mismatch:
previous reference ReferenceId(2): Some("dec")
current  reference ReferenceId(2): None

tasks/coverage/typescript/tests/cases/conformance/esDecorators/classDeclaration/classSuper/esDecorators-classDeclaration-classSuper.1.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["C", "dec", "method"]
current  scope ScopeId(0): ["C", "method"]
reference Mismatch:
previous reference ReferenceId(0): Some("dec")
current  reference ReferenceId(0): None

tasks/coverage/typescript/tests/cases/conformance/esDecorators/classDeclaration/classSuper/esDecorators-classDeclaration-classSuper.2.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["C1", "C2", "C3", "dec"]
current  scope ScopeId(0): ["C1", "C2", "C3"]
reference Mismatch:
previous reference ReferenceId(0): Some("dec")
current  reference ReferenceId(0): None
reference Mismatch:
previous reference ReferenceId(1): Some("dec")
current  reference ReferenceId(1): None
reference Mismatch:
previous reference ReferenceId(2): Some("dec")
current  reference ReferenceId(2): None

tasks/coverage/typescript/tests/cases/conformance/esDecorators/classDeclaration/classSuper/esDecorators-classDeclaration-classSuper.3.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["C", "dec", "x"]
current  scope ScopeId(0): ["C", "x"]
reference Mismatch:
previous reference ReferenceId(0): Some("dec")
current  reference ReferenceId(0): None

tasks/coverage/typescript/tests/cases/conformance/esDecorators/classDeclaration/classSuper/esDecorators-classDeclaration-classSuper.4.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["C", "dec", "method"]
current  scope ScopeId(0): ["C", "method"]
reference Mismatch:
previous reference ReferenceId(0): Some("dec")
current  reference ReferenceId(0): None

tasks/coverage/typescript/tests/cases/conformance/esDecorators/classDeclaration/classSuper/esDecorators-classDeclaration-classSuper.5.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["C1", "C2", "C3", "dec", "x"]
current  scope ScopeId(0): ["C1", "C2", "C3", "x"]
reference Mismatch:
previous reference ReferenceId(0): Some("dec")
current  reference ReferenceId(0): None
reference Mismatch:
previous reference ReferenceId(2): Some("dec")
current  reference ReferenceId(2): None
reference Mismatch:
previous reference ReferenceId(4): Some("dec")
current  reference ReferenceId(4): None

tasks/coverage/typescript/tests/cases/conformance/esDecorators/classDeclaration/classSuper/esDecorators-classDeclaration-classSuper.6.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["C", "dec"]
current  scope ScopeId(0): ["C"]
reference Mismatch:
previous reference ReferenceId(0): Some("dec")
current  reference ReferenceId(0): None

tasks/coverage/typescript/tests/cases/conformance/esDecorators/classDeclaration/classThisReference/esDecorators-classDeclaration-classThisReference.es5.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["C", "dec"]
current  scope ScopeId(0): ["C"]
reference Mismatch:
previous reference ReferenceId(0): Some("dec")
current  reference ReferenceId(0): None

tasks/coverage/typescript/tests/cases/conformance/esDecorators/classDeclaration/classThisReference/esDecorators-classDeclaration-classThisReference.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["C", "dec"]
current  scope ScopeId(0): ["C"]
reference Mismatch:
previous reference ReferenceId(0): Some("dec")
current  reference ReferenceId(0): None

tasks/coverage/typescript/tests/cases/conformance/esDecorators/classDeclaration/esDecorators-classDeclaration-commentPreservation.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["C", "dec"]
current  scope ScopeId(0): ["C"]
reference Mismatch:
previous reference ReferenceId(0): Some("dec")
current  reference ReferenceId(0): None
reference Mismatch:
previous reference ReferenceId(1): Some("dec")
current  reference ReferenceId(1): None
reference Mismatch:
previous reference ReferenceId(2): Some("dec")
current  reference ReferenceId(2): None
reference Mismatch:
previous reference ReferenceId(3): Some("dec")
current  reference ReferenceId(3): None
reference Mismatch:
previous reference ReferenceId(4): Some("dec")
current  reference ReferenceId(4): None
reference Mismatch:
previous reference ReferenceId(5): Some("dec")
current  reference ReferenceId(5): None
reference Mismatch:
previous reference ReferenceId(6): Some("dec")
current  reference ReferenceId(6): None
reference Mismatch:
previous reference ReferenceId(7): Some("dec")
current  reference ReferenceId(7): None
reference Mismatch:
previous reference ReferenceId(8): Some("dec")
current  reference ReferenceId(8): None
reference Mismatch:
previous reference ReferenceId(9): Some("dec")
current  reference ReferenceId(9): None
reference Mismatch:
previous reference ReferenceId(10): Some("dec")
current  reference ReferenceId(10): None
reference Mismatch:
previous reference ReferenceId(11): Some("dec")
current  reference ReferenceId(11): None
reference Mismatch:
previous reference ReferenceId(12): Some("dec")
current  reference ReferenceId(12): None
reference Mismatch:
previous reference ReferenceId(13): Some("dec")
current  reference ReferenceId(13): None
reference Mismatch:
previous reference ReferenceId(14): Some("dec")
current  reference ReferenceId(14): None
reference Mismatch:
previous reference ReferenceId(15): Some("dec")
current  reference ReferenceId(15): None
reference Mismatch:
previous reference ReferenceId(16): Some("dec")
current  reference ReferenceId(16): None
reference Mismatch:
previous reference ReferenceId(17): Some("dec")
current  reference ReferenceId(17): None
reference Mismatch:
previous reference ReferenceId(18): Some("dec")
current  reference ReferenceId(18): None
reference Mismatch:
previous reference ReferenceId(19): Some("dec")
current  reference ReferenceId(19): None
reference Mismatch:
previous reference ReferenceId(20): Some("dec")
current  reference ReferenceId(20): None
reference Mismatch:
previous reference ReferenceId(21): Some("dec")
current  reference ReferenceId(21): None

tasks/coverage/typescript/tests/cases/conformance/esDecorators/classDeclaration/esDecorators-classDeclaration-commonjs-classNamespaceMerge.ts
semantic error: Semantic Collector failed after transform
Missing SymbolId: _Example
Missing ReferenceId: _Example
Missing ReferenceId: Example
Missing ReferenceId: Example

tasks/coverage/typescript/tests/cases/conformance/esDecorators/classDeclaration/esDecorators-classDeclaration-commonjs.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Example", "deco"]
current  scope ScopeId(0): ["Example"]
reference Mismatch:
previous reference ReferenceId(0): Some("deco")
current  reference ReferenceId(0): None

tasks/coverage/typescript/tests/cases/conformance/esDecorators/classDeclaration/esDecorators-classDeclaration-multipleDecorators.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["C", "dec1", "dec2"]
current  scope ScopeId(0): ["C"]
reference Mismatch:
previous reference ReferenceId(0): Some("dec1")
current  reference ReferenceId(0): None
reference Mismatch:
previous reference ReferenceId(1): Some("dec2")
current  reference ReferenceId(1): None

tasks/coverage/typescript/tests/cases/conformance/esDecorators/classDeclaration/esDecorators-classDeclaration-outerThisReference.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["A", "B", "C", "dec", "f"]
current  scope ScopeId(0): ["A", "B", "C"]
reference Mismatch:
previous reference ReferenceId(0): Some("dec")
current  reference ReferenceId(0): None
reference Mismatch:
previous reference ReferenceId(1): Some("dec")
current  reference ReferenceId(1): None
reference Mismatch:
previous reference ReferenceId(2): Some("dec")
current  reference ReferenceId(2): None
reference Mismatch:
previous reference ReferenceId(3): Some("f")
current  reference ReferenceId(3): None
reference Mismatch:
previous reference ReferenceId(4): Some("dec")
current  reference ReferenceId(4): None
reference Mismatch:
previous reference ReferenceId(5): Some("f")
current  reference ReferenceId(5): None
reference Mismatch:
previous reference ReferenceId(6): Some("dec")
current  reference ReferenceId(6): None
reference Mismatch:
previous reference ReferenceId(7): Some("dec")
current  reference ReferenceId(7): None

tasks/coverage/typescript/tests/cases/conformance/esDecorators/classDeclaration/esDecorators-classDeclaration-parameterProperties.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["C", "bound"]
current  scope ScopeId(0): ["C"]
reference Mismatch:
previous reference ReferenceId(0): Some("bound")
current  reference ReferenceId(1): None

tasks/coverage/typescript/tests/cases/conformance/esDecorators/classDeclaration/esDecorators-classDeclaration-setFunctionName.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["C", "dec"]
current  scope ScopeId(0): ["C"]
reference Mismatch:
previous reference ReferenceId(0): Some("dec")
current  reference ReferenceId(0): None

tasks/coverage/typescript/tests/cases/conformance/esDecorators/classDeclaration/esDecorators-classDeclaration-simpleTransformation.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["C", "dec"]
current  scope ScopeId(0): ["C"]
reference Mismatch:
previous reference ReferenceId(0): Some("dec")
current  reference ReferenceId(0): None

tasks/coverage/typescript/tests/cases/conformance/esDecorators/classDeclaration/fields/esDecorators-classDeclaration-fields-nonStatic.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["C", "dec", "field3"]
current  scope ScopeId(0): ["C", "field3"]
reference Mismatch:
previous reference ReferenceId(0): Some("dec")
current  reference ReferenceId(0): None
reference Mismatch:
previous reference ReferenceId(1): Some("dec")
current  reference ReferenceId(1): None
reference Mismatch:
previous reference ReferenceId(2): Some("dec")
current  reference ReferenceId(2): None

tasks/coverage/typescript/tests/cases/conformance/esDecorators/classDeclaration/fields/esDecorators-classDeclaration-fields-nonStaticAccessor.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["C", "dec", "field3"]
current  scope ScopeId(0): ["C", "field3"]
reference Mismatch:
previous reference ReferenceId(0): Some("dec")
current  reference ReferenceId(0): None
reference Mismatch:
previous reference ReferenceId(1): Some("dec")
current  reference ReferenceId(1): None
reference Mismatch:
previous reference ReferenceId(2): Some("dec")
current  reference ReferenceId(2): None

tasks/coverage/typescript/tests/cases/conformance/esDecorators/classDeclaration/fields/esDecorators-classDeclaration-fields-nonStaticPrivate.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["C", "dec"]
current  scope ScopeId(0): ["C"]
reference Mismatch:
previous reference ReferenceId(0): Some("dec")
current  reference ReferenceId(0): None

tasks/coverage/typescript/tests/cases/conformance/esDecorators/classDeclaration/fields/esDecorators-classDeclaration-fields-nonStaticPrivateAccessor.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["C", "dec"]
current  scope ScopeId(0): ["C"]
reference Mismatch:
previous reference ReferenceId(0): Some("dec")
current  reference ReferenceId(0): None

tasks/coverage/typescript/tests/cases/conformance/esDecorators/classDeclaration/fields/esDecorators-classDeclaration-fields-static.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["C", "dec", "field3"]
current  scope ScopeId(0): ["C", "field3"]
reference Mismatch:
previous reference ReferenceId(0): Some("dec")
current  reference ReferenceId(0): None
reference Mismatch:
previous reference ReferenceId(1): Some("dec")
current  reference ReferenceId(1): None
reference Mismatch:
previous reference ReferenceId(2): Some("dec")
current  reference ReferenceId(2): None

tasks/coverage/typescript/tests/cases/conformance/esDecorators/classDeclaration/fields/esDecorators-classDeclaration-fields-staticAccessor.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["C", "D", "dec", "field3"]
current  scope ScopeId(0): ["C", "D", "field3"]
reference Mismatch:
previous reference ReferenceId(0): Some("dec")
current  reference ReferenceId(0): None
reference Mismatch:
previous reference ReferenceId(1): Some("dec")
current  reference ReferenceId(1): None
reference Mismatch:
previous reference ReferenceId(2): Some("dec")
current  reference ReferenceId(2): None
reference Mismatch:
previous reference ReferenceId(4): Some("dec")
current  reference ReferenceId(4): None

tasks/coverage/typescript/tests/cases/conformance/esDecorators/classDeclaration/fields/esDecorators-classDeclaration-fields-staticPrivate.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["C", "D", "dec"]
current  scope ScopeId(0): ["C", "D"]
reference Mismatch:
previous reference ReferenceId(0): Some("dec")
current  reference ReferenceId(0): None
reference Mismatch:
previous reference ReferenceId(1): Some("dec")
current  reference ReferenceId(1): None

tasks/coverage/typescript/tests/cases/conformance/esDecorators/classDeclaration/fields/esDecorators-classDeclaration-fields-staticPrivateAccessor.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["C", "D", "dec"]
current  scope ScopeId(0): ["C", "D"]
reference Mismatch:
previous reference ReferenceId(0): Some("dec")
current  reference ReferenceId(0): None
reference Mismatch:
previous reference ReferenceId(1): Some("dec")
current  reference ReferenceId(1): None

tasks/coverage/typescript/tests/cases/conformance/esDecorators/classDeclaration/methods/esDecorators-classDeclaration-methods-nonStatic.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["C", "dec", "method3"]
current  scope ScopeId(0): ["C", "method3"]
reference Mismatch:
previous reference ReferenceId(0): Some("dec")
current  reference ReferenceId(0): None
reference Mismatch:
previous reference ReferenceId(1): Some("dec")
current  reference ReferenceId(1): None
reference Mismatch:
previous reference ReferenceId(2): Some("dec")
current  reference ReferenceId(2): None

tasks/coverage/typescript/tests/cases/conformance/esDecorators/classDeclaration/methods/esDecorators-classDeclaration-methods-nonStaticPrivate.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["C", "dec"]
current  scope ScopeId(0): ["C"]
reference Mismatch:
previous reference ReferenceId(0): Some("dec")
current  reference ReferenceId(0): None

tasks/coverage/typescript/tests/cases/conformance/esDecorators/classDeclaration/methods/esDecorators-classDeclaration-methods-static.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["C", "dec", "method3"]
current  scope ScopeId(0): ["C", "method3"]
reference Mismatch:
previous reference ReferenceId(0): Some("dec")
current  reference ReferenceId(0): None
reference Mismatch:
previous reference ReferenceId(1): Some("dec")
current  reference ReferenceId(1): None
reference Mismatch:
previous reference ReferenceId(2): Some("dec")
current  reference ReferenceId(2): None

tasks/coverage/typescript/tests/cases/conformance/esDecorators/classDeclaration/methods/esDecorators-classDeclaration-methods-staticPrivate.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["C", "D", "dec"]
current  scope ScopeId(0): ["C", "D"]
reference Mismatch:
previous reference ReferenceId(0): Some("dec")
current  reference ReferenceId(0): None
reference Mismatch:
previous reference ReferenceId(1): Some("dec")
current  reference ReferenceId(1): None

tasks/coverage/typescript/tests/cases/conformance/esDecorators/classExpression/classSuper/esDecorators-classExpression-classSuper.1.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["dec", "method"]
current  scope ScopeId(0): ["method"]
reference Mismatch:
previous reference ReferenceId(0): Some("dec")
current  reference ReferenceId(0): None

tasks/coverage/typescript/tests/cases/conformance/esDecorators/classExpression/classSuper/esDecorators-classExpression-classSuper.2.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["dec"]
current  scope ScopeId(0): []
reference Mismatch:
previous reference ReferenceId(0): Some("dec")
current  reference ReferenceId(0): None
reference Mismatch:
previous reference ReferenceId(1): Some("dec")
current  reference ReferenceId(1): None
reference Mismatch:
previous reference ReferenceId(2): Some("dec")
current  reference ReferenceId(2): None

tasks/coverage/typescript/tests/cases/conformance/esDecorators/classExpression/classSuper/esDecorators-classExpression-classSuper.3.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["dec", "x"]
current  scope ScopeId(0): ["x"]
reference Mismatch:
previous reference ReferenceId(0): Some("dec")
current  reference ReferenceId(0): None

tasks/coverage/typescript/tests/cases/conformance/esDecorators/classExpression/classSuper/esDecorators-classExpression-classSuper.4.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["dec", "method"]
current  scope ScopeId(0): ["method"]
reference Mismatch:
previous reference ReferenceId(0): Some("dec")
current  reference ReferenceId(0): None

tasks/coverage/typescript/tests/cases/conformance/esDecorators/classExpression/classSuper/esDecorators-classExpression-classSuper.5.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["dec", "x"]
current  scope ScopeId(0): ["x"]
reference Mismatch:
previous reference ReferenceId(0): Some("dec")
current  reference ReferenceId(0): None
reference Mismatch:
previous reference ReferenceId(2): Some("dec")
current  reference ReferenceId(2): None
reference Mismatch:
previous reference ReferenceId(4): Some("dec")
current  reference ReferenceId(4): None

tasks/coverage/typescript/tests/cases/conformance/esDecorators/classExpression/classSuper/esDecorators-classExpression-classSuper.6.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["dec"]
current  scope ScopeId(0): []
reference Mismatch:
previous reference ReferenceId(0): Some("dec")
current  reference ReferenceId(0): None

tasks/coverage/typescript/tests/cases/conformance/esDecorators/classExpression/esDecorators-classExpression-commentPreservation.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["dec"]
current  scope ScopeId(0): []
reference Mismatch:
previous reference ReferenceId(0): Some("dec")
current  reference ReferenceId(0): None
reference Mismatch:
previous reference ReferenceId(1): Some("dec")
current  reference ReferenceId(1): None
reference Mismatch:
previous reference ReferenceId(2): Some("dec")
current  reference ReferenceId(2): None
reference Mismatch:
previous reference ReferenceId(3): Some("dec")
current  reference ReferenceId(3): None
reference Mismatch:
previous reference ReferenceId(4): Some("dec")
current  reference ReferenceId(4): None
reference Mismatch:
previous reference ReferenceId(5): Some("dec")
current  reference ReferenceId(5): None
reference Mismatch:
previous reference ReferenceId(6): Some("dec")
current  reference ReferenceId(6): None
reference Mismatch:
previous reference ReferenceId(7): Some("dec")
current  reference ReferenceId(7): None
reference Mismatch:
previous reference ReferenceId(8): Some("dec")
current  reference ReferenceId(8): None
reference Mismatch:
previous reference ReferenceId(9): Some("dec")
current  reference ReferenceId(9): None
reference Mismatch:
previous reference ReferenceId(10): Some("dec")
current  reference ReferenceId(10): None
reference Mismatch:
previous reference ReferenceId(11): Some("dec")
current  reference ReferenceId(11): None
reference Mismatch:
previous reference ReferenceId(12): Some("dec")
current  reference ReferenceId(12): None
reference Mismatch:
previous reference ReferenceId(13): Some("dec")
current  reference ReferenceId(13): None
reference Mismatch:
previous reference ReferenceId(14): Some("dec")
current  reference ReferenceId(14): None
reference Mismatch:
previous reference ReferenceId(15): Some("dec")
current  reference ReferenceId(15): None
reference Mismatch:
previous reference ReferenceId(16): Some("dec")
current  reference ReferenceId(16): None
reference Mismatch:
previous reference ReferenceId(17): Some("dec")
current  reference ReferenceId(17): None
reference Mismatch:
previous reference ReferenceId(18): Some("dec")
current  reference ReferenceId(18): None
reference Mismatch:
previous reference ReferenceId(19): Some("dec")
current  reference ReferenceId(19): None
reference Mismatch:
previous reference ReferenceId(20): Some("dec")
current  reference ReferenceId(20): None
reference Mismatch:
previous reference ReferenceId(21): Some("dec")
current  reference ReferenceId(21): None

tasks/coverage/typescript/tests/cases/conformance/esDecorators/classExpression/namedEvaluation/esDecorators-classExpression-namedEvaluation.1.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["dec", "x"]
current  scope ScopeId(0): ["x"]
reference Mismatch:
previous reference ReferenceId(1): Some("dec")
current  reference ReferenceId(1): None
reference Mismatch:
previous reference ReferenceId(3): Some("dec")
current  reference ReferenceId(3): None
reference Mismatch:
previous reference ReferenceId(5): Some("dec")
current  reference ReferenceId(5): None
reference Mismatch:
previous reference ReferenceId(7): Some("dec")
current  reference ReferenceId(7): None
reference Mismatch:
previous reference ReferenceId(9): Some("dec")
current  reference ReferenceId(9): None
reference Mismatch:
previous reference ReferenceId(11): Some("dec")
current  reference ReferenceId(11): None
reference Mismatch:
previous reference ReferenceId(13): Some("dec")
current  reference ReferenceId(13): None
reference Mismatch:
previous reference ReferenceId(15): Some("dec")
current  reference ReferenceId(15): None

tasks/coverage/typescript/tests/cases/conformance/esDecorators/classExpression/namedEvaluation/esDecorators-classExpression-namedEvaluation.10.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["dec", "f"]
current  scope ScopeId(0): []
reference Mismatch:
previous reference ReferenceId(0): Some("dec")
current  reference ReferenceId(0): None
reference Mismatch:
previous reference ReferenceId(1): Some("dec")
current  reference ReferenceId(1): None
reference Mismatch:
previous reference ReferenceId(2): Some("dec")
current  reference ReferenceId(2): None
reference Mismatch:
previous reference ReferenceId(3): Some("dec")
current  reference ReferenceId(3): None
reference Mismatch:
previous reference ReferenceId(4): Some("dec")
current  reference ReferenceId(4): None
reference Mismatch:
previous reference ReferenceId(5): Some("f")
current  reference ReferenceId(5): None
reference Mismatch:
previous reference ReferenceId(6): Some("dec")
current  reference ReferenceId(6): None
reference Mismatch:
previous reference ReferenceId(7): Some("dec")
current  reference ReferenceId(7): None
reference Mismatch:
previous reference ReferenceId(8): Some("dec")
current  reference ReferenceId(8): None
reference Mismatch:
previous reference ReferenceId(9): Some("dec")
current  reference ReferenceId(9): None
reference Mismatch:
previous reference ReferenceId(10): Some("dec")
current  reference ReferenceId(10): None
reference Mismatch:
previous reference ReferenceId(11): Some("dec")
current  reference ReferenceId(11): None
reference Mismatch:
previous reference ReferenceId(12): Some("dec")
current  reference ReferenceId(12): None
reference Mismatch:
previous reference ReferenceId(13): Some("dec")
current  reference ReferenceId(13): None
reference Mismatch:
previous reference ReferenceId(14): Some("f")
current  reference ReferenceId(14): None
reference Mismatch:
previous reference ReferenceId(15): Some("dec")
current  reference ReferenceId(15): None
reference Mismatch:
previous reference ReferenceId(16): Some("dec")
current  reference ReferenceId(16): None
reference Mismatch:
previous reference ReferenceId(17): Some("dec")
current  reference ReferenceId(17): None
reference Mismatch:
previous reference ReferenceId(18): Some("dec")
current  reference ReferenceId(18): None
reference Mismatch:
previous reference ReferenceId(19): Some("dec")
current  reference ReferenceId(19): None

tasks/coverage/typescript/tests/cases/conformance/esDecorators/classExpression/namedEvaluation/esDecorators-classExpression-namedEvaluation.11.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["dec"]
current  scope ScopeId(0): []
reference Mismatch:
previous reference ReferenceId(0): Some("dec")
current  reference ReferenceId(0): None
reference Mismatch:
previous reference ReferenceId(1): Some("dec")
current  reference ReferenceId(1): None
reference Mismatch:
previous reference ReferenceId(2): Some("dec")
current  reference ReferenceId(2): None
reference Mismatch:
previous reference ReferenceId(3): Some("dec")
current  reference ReferenceId(3): None

tasks/coverage/typescript/tests/cases/conformance/esDecorators/classExpression/namedEvaluation/esDecorators-classExpression-namedEvaluation.2.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["dec", "f", "x"]
current  scope ScopeId(0): ["f", "x"]
reference Mismatch:
previous reference ReferenceId(0): Some("dec")
current  reference ReferenceId(0): None
reference Mismatch:
previous reference ReferenceId(1): Some("dec")
current  reference ReferenceId(1): None
reference Mismatch:
previous reference ReferenceId(2): Some("dec")
current  reference ReferenceId(2): None
reference Mismatch:
previous reference ReferenceId(3): Some("dec")
current  reference ReferenceId(3): None
reference Mismatch:
previous reference ReferenceId(4): Some("dec")
current  reference ReferenceId(4): None
reference Mismatch:
previous reference ReferenceId(5): Some("dec")
current  reference ReferenceId(5): None
reference Mismatch:
previous reference ReferenceId(6): Some("dec")
current  reference ReferenceId(6): None
reference Mismatch:
previous reference ReferenceId(7): Some("dec")
current  reference ReferenceId(7): None
reference Mismatch:
previous reference ReferenceId(8): Some("dec")
current  reference ReferenceId(8): None
reference Mismatch:
previous reference ReferenceId(9): Some("dec")
current  reference ReferenceId(9): None
reference Mismatch:
previous reference ReferenceId(11): Some("dec")
current  reference ReferenceId(11): None
reference Mismatch:
previous reference ReferenceId(13): Some("dec")
current  reference ReferenceId(13): None
reference Mismatch:
previous reference ReferenceId(14): Some("dec")
current  reference ReferenceId(14): None
reference Mismatch:
previous reference ReferenceId(15): Some("dec")
current  reference ReferenceId(15): None
reference Mismatch:
previous reference ReferenceId(16): Some("dec")
current  reference ReferenceId(16): None

tasks/coverage/typescript/tests/cases/conformance/esDecorators/classExpression/namedEvaluation/esDecorators-classExpression-namedEvaluation.3.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["dec", "x1", "x2"]
current  scope ScopeId(0): ["x1", "x2"]
reference Mismatch:
previous reference ReferenceId(0): Some("dec")
current  reference ReferenceId(0): None
reference Mismatch:
previous reference ReferenceId(1): Some("dec")
current  reference ReferenceId(1): None
reference Mismatch:
previous reference ReferenceId(2): Some("dec")
current  reference ReferenceId(2): None
reference Mismatch:
previous reference ReferenceId(3): Some("dec")
current  reference ReferenceId(3): None
reference Mismatch:
previous reference ReferenceId(4): Some("dec")
current  reference ReferenceId(4): None
reference Mismatch:
previous reference ReferenceId(5): Some("dec")
current  reference ReferenceId(5): None

tasks/coverage/typescript/tests/cases/conformance/esDecorators/classExpression/namedEvaluation/esDecorators-classExpression-namedEvaluation.4.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["dec", "obj"]
current  scope ScopeId(0): []
reference Mismatch:
previous reference ReferenceId(0): Some("dec")
current  reference ReferenceId(0): None
reference Mismatch:
previous reference ReferenceId(1): Some("obj")
current  reference ReferenceId(1): None
reference Mismatch:
previous reference ReferenceId(2): Some("dec")
current  reference ReferenceId(2): None
reference Mismatch:
previous reference ReferenceId(3): Some("obj")
current  reference ReferenceId(3): None
reference Mismatch:
previous reference ReferenceId(4): Some("dec")
current  reference ReferenceId(4): None
reference Mismatch:
previous reference ReferenceId(5): Some("obj")
current  reference ReferenceId(5): None
reference Mismatch:
previous reference ReferenceId(6): Some("dec")
current  reference ReferenceId(6): None
reference Mismatch:
previous reference ReferenceId(7): Some("obj")
current  reference ReferenceId(7): None
reference Mismatch:
previous reference ReferenceId(8): Some("dec")
current  reference ReferenceId(8): None
reference Mismatch:
previous reference ReferenceId(9): Some("obj")
current  reference ReferenceId(9): None
reference Mismatch:
previous reference ReferenceId(10): Some("dec")
current  reference ReferenceId(10): None
reference Mismatch:
previous reference ReferenceId(11): Some("obj")
current  reference ReferenceId(11): None

tasks/coverage/typescript/tests/cases/conformance/esDecorators/classExpression/namedEvaluation/esDecorators-classExpression-namedEvaluation.5.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["dec", "obj", "x"]
current  scope ScopeId(0): []
reference Mismatch:
previous reference ReferenceId(0): Some("x")
current  reference ReferenceId(0): None
reference Mismatch:
previous reference ReferenceId(1): Some("dec")
current  reference ReferenceId(1): None
reference Mismatch:
previous reference ReferenceId(2): Some("obj")
current  reference ReferenceId(2): None
reference Mismatch:
previous reference ReferenceId(3): Some("x")
current  reference ReferenceId(3): None
reference Mismatch:
previous reference ReferenceId(4): Some("dec")
current  reference ReferenceId(4): None
reference Mismatch:
previous reference ReferenceId(5): Some("obj")
current  reference ReferenceId(5): None

tasks/coverage/typescript/tests/cases/conformance/esDecorators/classExpression/namedEvaluation/esDecorators-classExpression-namedEvaluation.6.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["dec", "obj", "x"]
current  scope ScopeId(0): []
reference Mismatch:
previous reference ReferenceId(0): Some("x")
current  reference ReferenceId(0): None
reference Mismatch:
previous reference ReferenceId(1): Some("dec")
current  reference ReferenceId(1): None
reference Mismatch:
previous reference ReferenceId(2): Some("obj")
current  reference ReferenceId(2): None
reference Mismatch:
previous reference ReferenceId(3): Some("x")
current  reference ReferenceId(3): None
reference Mismatch:
previous reference ReferenceId(4): Some("dec")
current  reference ReferenceId(4): None
reference Mismatch:
previous reference ReferenceId(5): Some("obj")
current  reference ReferenceId(5): None

tasks/coverage/typescript/tests/cases/conformance/esDecorators/classExpression/namedEvaluation/esDecorators-classExpression-namedEvaluation.7.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["dec", "obj", "x"]
current  scope ScopeId(0): []
reference Mismatch:
previous reference ReferenceId(0): Some("x")
current  reference ReferenceId(0): None
reference Mismatch:
previous reference ReferenceId(1): Some("dec")
current  reference ReferenceId(1): None
reference Mismatch:
previous reference ReferenceId(2): Some("obj")
current  reference ReferenceId(2): None
reference Mismatch:
previous reference ReferenceId(3): Some("x")
current  reference ReferenceId(3): None
reference Mismatch:
previous reference ReferenceId(4): Some("dec")
current  reference ReferenceId(4): None
reference Mismatch:
previous reference ReferenceId(5): Some("obj")
current  reference ReferenceId(5): None

tasks/coverage/typescript/tests/cases/conformance/esDecorators/classExpression/namedEvaluation/esDecorators-classExpression-namedEvaluation.8.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["dec"]
current  scope ScopeId(0): []
reference Mismatch:
previous reference ReferenceId(0): Some("dec")
current  reference ReferenceId(0): None

tasks/coverage/typescript/tests/cases/conformance/esDecorators/classExpression/namedEvaluation/esDecorators-classExpression-namedEvaluation.9.ts
semantic error: `export = <value>;` is only supported when compiling modules to CommonJS.
Please consider using `export default <value>;`, or add @babel/plugin-transform-modules-commonjs to your Babel config.

tasks/coverage/typescript/tests/cases/conformance/esDecorators/esDecorators-contextualTypes.2.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(4): ["Args", "Return", "This", "bound", "source"]
current  scope ScopeId(4): ["bound", "source"]

tasks/coverage/typescript/tests/cases/conformance/esDecorators/esDecorators-decoratorExpression.1.ts
semantic error: Expected a semicolon or an implicit semicolon after a statement, but found none

tasks/coverage/typescript/tests/cases/conformance/esDecorators/esDecorators-decoratorExpression.2.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["T", "g", "h", "x"]
current  scope ScopeId(0): []
reference Mismatch:
previous reference ReferenceId(0): Some("x")
current  reference ReferenceId(0): None
reference Mismatch:
previous reference ReferenceId(1): Some("x")
current  reference ReferenceId(1): None
reference Mismatch:
previous reference ReferenceId(2): Some("x")
current  reference ReferenceId(2): None
reference Mismatch:
previous reference ReferenceId(3): Some("g")
current  reference ReferenceId(3): None
reference Mismatch:
previous reference ReferenceId(4): Some("g")
current  reference ReferenceId(4): None
reference Mismatch:
previous reference ReferenceId(5): Some("h")
current  reference ReferenceId(5): None
reference Mismatch:
previous reference ReferenceId(6): Some("x")
current  reference ReferenceId(6): None
reference Mismatch:
previous reference ReferenceId(7): Some("x")
current  reference ReferenceId(7): None
reference Mismatch:
previous reference ReferenceId(8): Some("x")
current  reference ReferenceId(8): None
reference Mismatch:
previous reference ReferenceId(9): Some("x")
current  reference ReferenceId(9): None
reference Mismatch:
previous reference ReferenceId(10): Some("x")
current  reference ReferenceId(10): None
reference Mismatch:
previous reference ReferenceId(11): Some("x")
current  reference ReferenceId(11): None
reference Mismatch:
previous reference ReferenceId(12): Some("x")
current  reference ReferenceId(12): None
reference Mismatch:
previous reference ReferenceId(13): Some("x")
current  reference ReferenceId(13): None
reference Mismatch:
previous reference ReferenceId(14): Some("x")
current  reference ReferenceId(14): None
reference Mismatch:
previous reference ReferenceId(15): Some("x")
current  reference ReferenceId(15): None
reference Mismatch:
previous reference ReferenceId(16): Some("g")
current  reference ReferenceId(16): None
reference Mismatch:
previous reference ReferenceId(17): Some("g")
current  reference ReferenceId(17): None
reference Mismatch:
previous reference ReferenceId(18): Some("h")
current  reference ReferenceId(18): None
reference Mismatch:
previous reference ReferenceId(19): Some("x")
current  reference ReferenceId(19): None
reference Mismatch:
previous reference ReferenceId(20): Some("x")
current  reference ReferenceId(20): None
reference Mismatch:
previous reference ReferenceId(21): Some("x")
current  reference ReferenceId(21): None
reference Mismatch:
previous reference ReferenceId(22): Some("x")
current  reference ReferenceId(22): None
reference Mismatch:
previous reference ReferenceId(23): Some("x")
current  reference ReferenceId(23): None
reference Mismatch:
previous reference ReferenceId(24): Some("x")
current  reference ReferenceId(24): None
reference Mismatch:
previous reference ReferenceId(25): Some("x")
current  reference ReferenceId(25): None

tasks/coverage/typescript/tests/cases/conformance/esDecorators/esDecorators-decoratorExpression.3.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["T", "g"]
current  scope ScopeId(0): []
reference Mismatch:
previous reference ReferenceId(0): Some("g")
current  reference ReferenceId(0): None
reference Mismatch:
previous reference ReferenceId(1): Some("g")
current  reference ReferenceId(1): None

tasks/coverage/typescript/tests/cases/conformance/esDecorators/esDecorators-preservesThis.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["C", "D", "instance"]
current  scope ScopeId(0): ["C", "D"]
reference Mismatch:
previous reference ReferenceId(5): Some("instance")
current  reference ReferenceId(0): None
reference Mismatch:
previous reference ReferenceId(6): Some("instance")
current  reference ReferenceId(1): None
reference Mismatch:
previous reference ReferenceId(7): Some("instance")
current  reference ReferenceId(2): None

tasks/coverage/typescript/tests/cases/conformance/esDecorators/metadata/esDecoratorsMetadata5.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["C", "metadata"]
current  scope ScopeId(0): ["C"]
reference Mismatch:
previous reference ReferenceId(0): Some("metadata")
current  reference ReferenceId(0): None

tasks/coverage/typescript/tests/cases/conformance/expressions/arrayLiterals/arrayLiteralInference.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(1): ["AdvancedList", "AppType", "Composite", "HeaderDetail", "HeaderMultiDetail", "ListOnly", "ModuleSettings", "Relationship", "Report", "Standard"]
current  scope ScopeId(1): ["AppType"]
Bindings Mismatch:
previous scope ScopeId(2): ["AppStyle", "MiniApp", "PivotTable", "Standard", "Tree", "TreeEntity"]
current  scope ScopeId(2): ["AppStyle"]

tasks/coverage/typescript/tests/cases/conformance/expressions/arrayLiterals/arrayLiterals2ES5.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["a0", "a1", "a2", "a3", "a4", "a5", "b0", "b1", "c0", "c1", "c2", "c3", "d0", "d1", "d2", "d3", "d4", "d5", "d6", "d7", "d8", "d9", "myArray", "myArray2", "temp", "temp1", "temp2", "temp3", "temp4"]
current  scope ScopeId(0): ["a0", "a1", "a2", "a3", "a4", "a5", "b0", "b1", "c0", "c1", "c2", "c3", "d0", "d1", "d2", "d3", "d4", "d5", "d6", "d7", "d8", "d9", "temp", "temp1", "temp2", "temp3", "temp4"]

tasks/coverage/typescript/tests/cases/conformance/expressions/arrayLiterals/arrayLiterals2ES6.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["a0", "a1", "a2", "a3", "a4", "a5", "b0", "b1", "c0", "c1", "c2", "c3", "d0", "d1", "d2", "d3", "d4", "d5", "d6", "d7", "d8", "d9", "myArray", "myArray2", "temp", "temp1", "temp2"]
current  scope ScopeId(0): ["a0", "a1", "a2", "a3", "a4", "a5", "b0", "b1", "c0", "c1", "c2", "c3", "d0", "d1", "d2", "d3", "d4", "d5", "d6", "d7", "d8", "d9", "temp", "temp1", "temp2"]

tasks/coverage/typescript/tests/cases/conformance/expressions/asOperator/asOpEmitParens.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["x"]
current  scope ScopeId(0): []
reference Mismatch:
previous reference ReferenceId(0): Some("x")
current  reference ReferenceId(0): None
reference Mismatch:
previous reference ReferenceId(1): Some("x")
current  reference ReferenceId(1): None
reference Mismatch:
previous reference ReferenceId(2): Some("x")
current  reference ReferenceId(2): None

tasks/coverage/typescript/tests/cases/conformance/expressions/assignmentOperator/assignmentGenericLookupTypeNarrowing.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(3): ["K", "element", "key", "x"]
current  scope ScopeId(1): ["element", "key", "x"]

tasks/coverage/typescript/tests/cases/conformance/expressions/assignmentOperator/assignmentTypeNarrowing.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["AOrArrA", "a", "arr", "x"]
current  scope ScopeId(0): ["a", "arr", "x"]

tasks/coverage/typescript/tests/cases/conformance/expressions/binaryOperators/additionOperator/additionOperatorWithAnyAndEveryType.ts
semantic error: Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript

tasks/coverage/typescript/tests/cases/conformance/expressions/binaryOperators/additionOperator/additionOperatorWithConstrainedTypeParameter.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(1): ["K", "T", "k", "n", "v"]
current  scope ScopeId(1): ["k", "n", "v"]
Bindings Mismatch:
previous scope ScopeId(2): ["K", "T", "k", "n", "vs"]
current  scope ScopeId(2): ["k", "n", "vs"]

tasks/coverage/typescript/tests/cases/conformance/expressions/binaryOperators/additionOperator/additionOperatorWithNumberAndEnum.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(1): ["E", "a", "b"]
current  scope ScopeId(1): ["E"]
Bindings Mismatch:
previous scope ScopeId(2): ["F", "c", "d"]
current  scope ScopeId(2): ["F"]

tasks/coverage/typescript/tests/cases/conformance/expressions/binaryOperators/additionOperator/additionOperatorWithStringAndEveryType.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(1): ["E", "a", "b", "c"]
current  scope ScopeId(1): ["E"]

tasks/coverage/typescript/tests/cases/conformance/expressions/binaryOperators/arithmeticOperator/arithmeticOperatorWithEnum.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(1): ["E", "a", "b"]
current  scope ScopeId(1): ["E"]

tasks/coverage/typescript/tests/cases/conformance/expressions/binaryOperators/arithmeticOperator/arithmeticOperatorWithEnumUnion.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(1): ["E", "a", "b"]
current  scope ScopeId(1): ["E"]
Bindings Mismatch:
previous scope ScopeId(2): ["F", "c", "d"]
current  scope ScopeId(2): ["F"]

tasks/coverage/typescript/tests/cases/conformance/expressions/binaryOperators/comparisonOperator/comparisonOperatorWithIdenticalObjects.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["A1", "A2", "A3", "A4", "A5", "A6", "B1", "B2", "B3", "B4", "B5", "B6", "Base", "a1", "a2", "a3", "a4", "a5", "a6", "b1", "b2", "b3", "b4", "b5", "b6", "base1", "base2", "r1a1", "r1a2", "r1a3", "r1a4", "r1a5", "r1a6", "r1a7", "r1b1", "r1b2", "r1b3", "r1b4", "r1b5", "r1b6", "r1b7", "r2a1", "r2a2", "r2a3", "r2a4", "r2a5", "r2a6", "r2a7", "r2b1", "r2b2", "r2b3", "r2b4", "r2b5", "r2b6", "r2b7", "r3a1", "r3a2", "r3a3", "r3a4", "r3a5", "r3a6", "r3a7", "r3b1", "r3b2", "r3b3", "r3b4", "r3b5", "r3b6", "r3b7", "r4a1", "r4a2", "r4a3", "r4a4", "r4a5", "r4a6", "r4a7", "r4b1", "r4b2", "r4b3", "r4b4", "r4b5", "r4b6", "r4b7", "r5a1", "r5a2", "r5a3", "r5a4", "r5a5", "r5a6", "r5a7", "r5b1", "r5b2", "r5b3", "r5b4", "r5b5", "r5b6", "r5b7", "r6a1", "r6a2", "r6a3", "r6a4", "r6a5", "r6a6", "r6a7", "r6b1", "r6b2", "r6b3", "r6b4", "r6b5", "r6b6", "r6b7", "r7a1", "r7a2", "r7a3", "r7a4", "r7a5", "r7a6", "r7a7", "r7b1", "r7b2", "r7b3", "r7b4", "r7b5", "r7b6", "r7b7", "r8a1", "r8a2", "r8a3", "r8a4", "r8a5", "r8a6", "r8a7", "r8b1", "r8b2", "r8b3", "r8b4", "r8b5", "r8b6", "r8b7"]
current  scope ScopeId(0): ["A1", "A2", "B1", "B2", "Base", "a1", "a2", "a3", "a4", "a5", "a6", "b1", "b2", "b3", "b4", "b5", "b6", "base1", "base2", "r1a1", "r1a2", "r1a3", "r1a4", "r1a5", "r1a6", "r1a7", "r1b1", "r1b2", "r1b3", "r1b4", "r1b5", "r1b6", "r1b7", "r2a1", "r2a2", "r2a3", "r2a4", "r2a5", "r2a6", "r2a7", "r2b1", "r2b2", "r2b3", "r2b4", "r2b5", "r2b6", "r2b7", "r3a1", "r3a2", "r3a3", "r3a4", "r3a5", "r3a6", "r3a7", "r3b1", "r3b2", "r3b3", "r3b4", "r3b5", "r3b6", "r3b7", "r4a1", "r4a2", "r4a3", "r4a4", "r4a5", "r4a6", "r4a7", "r4b1", "r4b2", "r4b3", "r4b4", "r4b5", "r4b6", "r4b7", "r5a1", "r5a2", "r5a3", "r5a4", "r5a5", "r5a6", "r5a7", "r5b1", "r5b2", "r5b3", "r5b4", "r5b5", "r5b6", "r5b7", "r6a1", "r6a2", "r6a3", "r6a4", "r6a5", "r6a6", "r6a7", "r6b1", "r6b2", "r6b3", "r6b4", "r6b5", "r6b6", "r6b7", "r7a1", "r7a2", "r7a3", "r7a4", "r7a5", "r7a6", "r7a7", "r7b1", "r7b2", "r7b3", "r7b4", "r7b5", "r7b6", "r7b7", "r8a1", "r8a2", "r8a3", "r8a4", "r8a5", "r8a6", "r8a7", "r8b1", "r8b2", "r8b3", "r8b4", "r8b5", "r8b6", "r8b7"]

tasks/coverage/typescript/tests/cases/conformance/expressions/binaryOperators/comparisonOperator/comparisonOperatorWithIdenticalTypeParameter.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(1): ["T", "r1", "r2", "r3", "r4", "r5", "r6", "r7", "r8", "t"]
current  scope ScopeId(1): ["r1", "r2", "r3", "r4", "r5", "r6", "r7", "r8", "t"]

tasks/coverage/typescript/tests/cases/conformance/expressions/binaryOperators/comparisonOperator/comparisonOperatorWithNumericLiteral.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["BrandedNum", "x"]
current  scope ScopeId(0): ["x"]

tasks/coverage/typescript/tests/cases/conformance/expressions/binaryOperators/comparisonOperator/comparisonOperatorWithOneOperandIsAny.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(1): ["E", "a", "b", "c"]
current  scope ScopeId(1): ["E"]
Bindings Mismatch:
previous scope ScopeId(2): ["T", "foo_r1", "foo_r2", "foo_r3", "foo_r4", "foo_r5", "foo_r6", "foo_r7", "foo_r8", "t"]
current  scope ScopeId(2): ["foo_r1", "foo_r2", "foo_r3", "foo_r4", "foo_r5", "foo_r6", "foo_r7", "foo_r8", "t"]

tasks/coverage/typescript/tests/cases/conformance/expressions/binaryOperators/comparisonOperator/comparisonOperatorWithOneOperandIsUndefined.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(1): ["E", "a", "b", "c"]
current  scope ScopeId(1): ["E"]
Bindings Mismatch:
previous scope ScopeId(2): ["T", "foo_r1", "foo_r2", "foo_r3", "foo_r4", "foo_r5", "foo_r6", "foo_r7", "foo_r8", "t"]
current  scope ScopeId(2): ["foo_r1", "foo_r2", "foo_r3", "foo_r4", "foo_r5", "foo_r6", "foo_r7", "foo_r8", "t"]

tasks/coverage/typescript/tests/cases/conformance/expressions/binaryOperators/comparisonOperator/comparisonOperatorWithSubtypeEnumAndNumber.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(1): ["E", "a", "b", "c"]
current  scope ScopeId(1): ["E"]

tasks/coverage/typescript/tests/cases/conformance/expressions/binaryOperators/comparisonOperator/comparisonOperatorWithSubtypeObjectOnOptionalProperty.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["I", "J", "a", "b", "ra1", "ra2", "rb1", "rb2", "rc1", "rc2", "rd1", "rd2", "re1", "re2", "rf1", "rf2", "rg1", "rg2", "rh1", "rh2"]
current  scope ScopeId(0): ["a", "b", "ra1", "ra2", "rb1", "rb2", "rc1", "rc2", "rd1", "rd2", "re1", "re2", "rf1", "rf2", "rg1", "rg2", "rh1", "rh2"]

tasks/coverage/typescript/tests/cases/conformance/expressions/binaryOperators/instanceofOperator/instanceofOperatorWithLHSIsTypeParameter.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(1): ["T", "r", "t", "x"]
current  scope ScopeId(1): ["r", "t", "x"]

tasks/coverage/typescript/tests/cases/conformance/expressions/binaryOperators/instanceofOperator/instanceofOperatorWithRHSHasSymbolHasInstance.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["HasInstanceOf", "HasInstanceOf1", "HasInstanceOf2", "Line", "Point", "Point3D", "Point3D2", "Rhs14", "Rhs15", "lhs0", "lhs1", "lhs2", "lhs3", "lhs4", "obj", "rhs0", "rhs1", "rhs14", "rhs15", "rhs2", "rhs3", "rhs4", "rhs5", "rhs6"]
current  scope ScopeId(0): []
reference Mismatch:
previous reference ReferenceId(53): Some("lhs0")
current  reference ReferenceId(0): None
reference Mismatch:
previous reference ReferenceId(54): Some("rhs0")
current  reference ReferenceId(1): None
reference Mismatch:
previous reference ReferenceId(55): Some("lhs0")
current  reference ReferenceId(2): None
reference Mismatch:
previous reference ReferenceId(56): Some("lhs0")
current  reference ReferenceId(3): None
reference Mismatch:
previous reference ReferenceId(57): Some("rhs1")
current  reference ReferenceId(4): None
reference Mismatch:
previous reference ReferenceId(58): Some("lhs0")
current  reference ReferenceId(5): None
reference Mismatch:
previous reference ReferenceId(59): Some("lhs0")
current  reference ReferenceId(6): None
reference Mismatch:
previous reference ReferenceId(60): Some("rhs2")
current  reference ReferenceId(7): None
reference Mismatch:
previous reference ReferenceId(61): Some("lhs0")
current  reference ReferenceId(8): None
reference Mismatch:
previous reference ReferenceId(62): Some("lhs0")
current  reference ReferenceId(9): None
reference Mismatch:
previous reference ReferenceId(63): Some("rhs3")
current  reference ReferenceId(10): None
reference Mismatch:
previous reference ReferenceId(64): Some("lhs0")
current  reference ReferenceId(11): None
reference Mismatch:
previous reference ReferenceId(65): Some("lhs0")
current  reference ReferenceId(12): None
reference Mismatch:
previous reference ReferenceId(66): Some("rhs4")
current  reference ReferenceId(13): None
reference Mismatch:
previous reference ReferenceId(67): Some("lhs0")
current  reference ReferenceId(14): None
reference Mismatch:
previous reference ReferenceId(68): Some("lhs0")
current  reference ReferenceId(15): None
reference Mismatch:
previous reference ReferenceId(69): Some("rhs5")
current  reference ReferenceId(16): None
reference Mismatch:
previous reference ReferenceId(70): Some("lhs0")
current  reference ReferenceId(17): None
reference Mismatch:
previous reference ReferenceId(71): Some("lhs0")
current  reference ReferenceId(18): None
reference Mismatch:
previous reference ReferenceId(72): Some("rhs6")
current  reference ReferenceId(19): None
reference Mismatch:
previous reference ReferenceId(73): Some("lhs0")
current  reference ReferenceId(20): None
reference Mismatch:
previous reference ReferenceId(74): Some("lhs0")
current  reference ReferenceId(21): None
reference Mismatch:
previous reference ReferenceId(76): Some("lhs0")
current  reference ReferenceId(23): None
reference Mismatch:
previous reference ReferenceId(77): Some("lhs0")
current  reference ReferenceId(24): None
reference Mismatch:
previous reference ReferenceId(79): Some("lhs0")
current  reference ReferenceId(26): None
reference Mismatch:
previous reference ReferenceId(80): Some("lhs0")
current  reference ReferenceId(27): None
reference Mismatch:
previous reference ReferenceId(82): Some("lhs0")
current  reference ReferenceId(29): None
reference Mismatch:
previous reference ReferenceId(83): Some("lhs0")
current  reference ReferenceId(30): None
reference Mismatch:
previous reference ReferenceId(85): Some("lhs0")
current  reference ReferenceId(32): None
reference Mismatch:
previous reference ReferenceId(86): Some("lhs0")
current  reference ReferenceId(33): None
reference Mismatch:
previous reference ReferenceId(88): Some("lhs0")
current  reference ReferenceId(35): None
reference Mismatch:
previous reference ReferenceId(89): Some("lhs0")
current  reference ReferenceId(36): None
reference Mismatch:
previous reference ReferenceId(91): Some("lhs0")
current  reference ReferenceId(38): None
reference Mismatch:
previous reference ReferenceId(92): Some("lhs0")
current  reference ReferenceId(39): None
reference Mismatch:
previous reference ReferenceId(94): Some("lhs0")
current  reference ReferenceId(41): None
reference Mismatch:
previous reference ReferenceId(95): Some("lhs1")
current  reference ReferenceId(42): None
reference Mismatch:
previous reference ReferenceId(96): Some("rhs0")
current  reference ReferenceId(43): None
reference Mismatch:
previous reference ReferenceId(97): Some("lhs1")
current  reference ReferenceId(44): None
reference Mismatch:
previous reference ReferenceId(98): Some("lhs1")
current  reference ReferenceId(45): None
reference Mismatch:
previous reference ReferenceId(99): Some("rhs1")
current  reference ReferenceId(46): None
reference Mismatch:
previous reference ReferenceId(100): Some("lhs1")
current  reference ReferenceId(47): None
reference Mismatch:
previous reference ReferenceId(101): Some("lhs1")
current  reference ReferenceId(48): None
reference Mismatch:
previous reference ReferenceId(102): Some("rhs2")
current  reference ReferenceId(49): None
reference Mismatch:
previous reference ReferenceId(103): Some("lhs1")
current  reference ReferenceId(50): None
reference Mismatch:
previous reference ReferenceId(104): Some("lhs1")
current  reference ReferenceId(51): None
reference Mismatch:
previous reference ReferenceId(106): Some("lhs1")
current  reference ReferenceId(53): None
reference Mismatch:
previous reference ReferenceId(107): Some("lhs1")
current  reference ReferenceId(54): None
reference Mismatch:
previous reference ReferenceId(109): Some("lhs1")
current  reference ReferenceId(56): None
reference Mismatch:
previous reference ReferenceId(110): Some("lhs1")
current  reference ReferenceId(57): None
reference Mismatch:
previous reference ReferenceId(112): Some("lhs1")
current  reference ReferenceId(59): None
reference Mismatch:
previous reference ReferenceId(113): Some("lhs2")
current  reference ReferenceId(60): None
reference Mismatch:
previous reference ReferenceId(114): Some("rhs0")
current  reference ReferenceId(61): None
reference Mismatch:
previous reference ReferenceId(115): Some("lhs2")
current  reference ReferenceId(62): None
reference Mismatch:
previous reference ReferenceId(116): Some("lhs2")
current  reference ReferenceId(63): None
reference Mismatch:
previous reference ReferenceId(117): Some("rhs1")
current  reference ReferenceId(64): None
reference Mismatch:
previous reference ReferenceId(118): Some("lhs2")
current  reference ReferenceId(65): None
reference Mismatch:
previous reference ReferenceId(119): Some("lhs2")
current  reference ReferenceId(66): None
reference Mismatch:
previous reference ReferenceId(120): Some("rhs2")
current  reference ReferenceId(67): None
reference Mismatch:
previous reference ReferenceId(121): Some("lhs2")
current  reference ReferenceId(68): None
reference Mismatch:
previous reference ReferenceId(122): Some("lhs2")
current  reference ReferenceId(69): None
reference Mismatch:
previous reference ReferenceId(123): Some("rhs3")
current  reference ReferenceId(70): None
reference Mismatch:
previous reference ReferenceId(124): Some("lhs2")
current  reference ReferenceId(71): None
reference Mismatch:
previous reference ReferenceId(125): Some("lhs2")
current  reference ReferenceId(72): None
reference Mismatch:
previous reference ReferenceId(126): Some("rhs4")
current  reference ReferenceId(73): None
reference Mismatch:
previous reference ReferenceId(127): Some("lhs2")
current  reference ReferenceId(74): None
reference Mismatch:
previous reference ReferenceId(128): Some("lhs2")
current  reference ReferenceId(75): None
reference Mismatch:
previous reference ReferenceId(129): Some("rhs5")
current  reference ReferenceId(76): None
reference Mismatch:
previous reference ReferenceId(130): Some("lhs2")
current  reference ReferenceId(77): None
reference Mismatch:
previous reference ReferenceId(131): Some("lhs2")
current  reference ReferenceId(78): None
reference Mismatch:
previous reference ReferenceId(133): Some("lhs2")
current  reference ReferenceId(80): None
reference Mismatch:
previous reference ReferenceId(134): Some("lhs2")
current  reference ReferenceId(81): None
reference Mismatch:
previous reference ReferenceId(136): Some("lhs2")
current  reference ReferenceId(83): None
reference Mismatch:
previous reference ReferenceId(137): Some("lhs2")
current  reference ReferenceId(84): None
reference Mismatch:
previous reference ReferenceId(139): Some("lhs2")
current  reference ReferenceId(86): None
reference Mismatch:
previous reference ReferenceId(140): Some("lhs2")
current  reference ReferenceId(87): None
reference Mismatch:
previous reference ReferenceId(142): Some("lhs2")
current  reference ReferenceId(89): None
reference Mismatch:
previous reference ReferenceId(143): Some("lhs2")
current  reference ReferenceId(90): None
reference Mismatch:
previous reference ReferenceId(145): Some("lhs2")
current  reference ReferenceId(92): None
reference Mismatch:
previous reference ReferenceId(146): Some("lhs2")
current  reference ReferenceId(93): None
reference Mismatch:
previous reference ReferenceId(148): Some("lhs2")
current  reference ReferenceId(95): None
reference Mismatch:
previous reference ReferenceId(149): Some("lhs3")
current  reference ReferenceId(96): None
reference Mismatch:
previous reference ReferenceId(150): Some("rhs0")
current  reference ReferenceId(97): None
reference Mismatch:
previous reference ReferenceId(151): Some("lhs3")
current  reference ReferenceId(98): None
reference Mismatch:
previous reference ReferenceId(152): Some("lhs3")
current  reference ReferenceId(99): None
reference Mismatch:
previous reference ReferenceId(153): Some("rhs1")
current  reference ReferenceId(100): None
reference Mismatch:
previous reference ReferenceId(154): Some("lhs3")
current  reference ReferenceId(101): None
reference Mismatch:
previous reference ReferenceId(155): Some("lhs3")
current  reference ReferenceId(102): None
reference Mismatch:
previous reference ReferenceId(156): Some("rhs2")
current  reference ReferenceId(103): None
reference Mismatch:
previous reference ReferenceId(157): Some("lhs3")
current  reference ReferenceId(104): None
reference Mismatch:
previous reference ReferenceId(158): Some("lhs3")
current  reference ReferenceId(105): None
reference Mismatch:
previous reference ReferenceId(159): Some("rhs3")
current  reference ReferenceId(106): None
reference Mismatch:
previous reference ReferenceId(160): Some("lhs3")
current  reference ReferenceId(107): None
reference Mismatch:
previous reference ReferenceId(161): Some("lhs3")
current  reference ReferenceId(108): None
reference Mismatch:
previous reference ReferenceId(162): Some("rhs4")
current  reference ReferenceId(109): None
reference Mismatch:
previous reference ReferenceId(163): Some("lhs3")
current  reference ReferenceId(110): None
reference Mismatch:
previous reference ReferenceId(164): Some("lhs3")
current  reference ReferenceId(111): None
reference Mismatch:
previous reference ReferenceId(165): Some("rhs5")
current  reference ReferenceId(112): None
reference Mismatch:
previous reference ReferenceId(166): Some("lhs3")
current  reference ReferenceId(113): None
reference Mismatch:
previous reference ReferenceId(167): Some("lhs3")
current  reference ReferenceId(114): None
reference Mismatch:
previous reference ReferenceId(168): Some("rhs6")
current  reference ReferenceId(115): None
reference Mismatch:
previous reference ReferenceId(169): Some("lhs3")
current  reference ReferenceId(116): None
reference Mismatch:
previous reference ReferenceId(170): Some("lhs3")
current  reference ReferenceId(117): None
reference Mismatch:
previous reference ReferenceId(172): Some("lhs3")
current  reference ReferenceId(119): None
reference Mismatch:
previous reference ReferenceId(173): Some("lhs3")
current  reference ReferenceId(120): None
reference Mismatch:
previous reference ReferenceId(175): Some("lhs3")
current  reference ReferenceId(122): None
reference Mismatch:
previous reference ReferenceId(176): Some("lhs3")
current  reference ReferenceId(123): None
reference Mismatch:
previous reference ReferenceId(178): Some("lhs3")
current  reference ReferenceId(125): None
reference Mismatch:
previous reference ReferenceId(179): Some("lhs3")
current  reference ReferenceId(126): None
reference Mismatch:
previous reference ReferenceId(181): Some("lhs3")
current  reference ReferenceId(128): None
reference Mismatch:
previous reference ReferenceId(182): Some("lhs3")
current  reference ReferenceId(129): None
reference Mismatch:
previous reference ReferenceId(184): Some("lhs3")
current  reference ReferenceId(131): None
reference Mismatch:
previous reference ReferenceId(185): Some("lhs3")
current  reference ReferenceId(132): None
reference Mismatch:
previous reference ReferenceId(187): Some("lhs3")
current  reference ReferenceId(134): None
reference Mismatch:
previous reference ReferenceId(188): Some("lhs3")
current  reference ReferenceId(135): None
reference Mismatch:
previous reference ReferenceId(190): Some("lhs3")
current  reference ReferenceId(137): None
reference Mismatch:
previous reference ReferenceId(191): Some("lhs4")
current  reference ReferenceId(138): None
reference Mismatch:
previous reference ReferenceId(192): Some("rhs0")
current  reference ReferenceId(139): None
reference Mismatch:
previous reference ReferenceId(193): Some("lhs4")
current  reference ReferenceId(140): None
reference Mismatch:
previous reference ReferenceId(194): Some("lhs4")
current  reference ReferenceId(141): None
reference Mismatch:
previous reference ReferenceId(195): Some("rhs1")
current  reference ReferenceId(142): None
reference Mismatch:
previous reference ReferenceId(196): Some("lhs4")
current  reference ReferenceId(143): None
reference Mismatch:
previous reference ReferenceId(197): Some("lhs4")
current  reference ReferenceId(144): None
reference Mismatch:
previous reference ReferenceId(198): Some("rhs2")
current  reference ReferenceId(145): None
reference Mismatch:
previous reference ReferenceId(199): Some("lhs4")
current  reference ReferenceId(146): None
reference Mismatch:
previous reference ReferenceId(200): Some("lhs4")
current  reference ReferenceId(147): None
reference Mismatch:
previous reference ReferenceId(201): Some("rhs3")
current  reference ReferenceId(148): None
reference Mismatch:
previous reference ReferenceId(202): Some("lhs4")
current  reference ReferenceId(149): None
reference Mismatch:
previous reference ReferenceId(203): Some("lhs4")
current  reference ReferenceId(150): None
reference Mismatch:
previous reference ReferenceId(204): Some("rhs4")
current  reference ReferenceId(151): None
reference Mismatch:
previous reference ReferenceId(205): Some("lhs4")
current  reference ReferenceId(152): None
reference Mismatch:
previous reference ReferenceId(206): Some("lhs4")
current  reference ReferenceId(153): None
reference Mismatch:
previous reference ReferenceId(207): Some("rhs5")
current  reference ReferenceId(154): None
reference Mismatch:
previous reference ReferenceId(208): Some("lhs4")
current  reference ReferenceId(155): None
reference Mismatch:
previous reference ReferenceId(209): Some("lhs4")
current  reference ReferenceId(156): None
reference Mismatch:
previous reference ReferenceId(211): Some("lhs4")
current  reference ReferenceId(158): None
reference Mismatch:
previous reference ReferenceId(212): Some("lhs4")
current  reference ReferenceId(159): None
reference Mismatch:
previous reference ReferenceId(214): Some("lhs4")
current  reference ReferenceId(161): None
reference Mismatch:
previous reference ReferenceId(215): Some("lhs4")
current  reference ReferenceId(162): None
reference Mismatch:
previous reference ReferenceId(217): Some("lhs4")
current  reference ReferenceId(164): None
reference Mismatch:
previous reference ReferenceId(218): Some("lhs4")
current  reference ReferenceId(165): None
reference Mismatch:
previous reference ReferenceId(220): Some("lhs4")
current  reference ReferenceId(167): None
reference Mismatch:
previous reference ReferenceId(221): Some("lhs4")
current  reference ReferenceId(168): None
reference Mismatch:
previous reference ReferenceId(223): Some("lhs4")
current  reference ReferenceId(170): None
reference Mismatch:
previous reference ReferenceId(224): Some("lhs4")
current  reference ReferenceId(171): None
reference Mismatch:
previous reference ReferenceId(226): Some("lhs4")
current  reference ReferenceId(173): None
reference Mismatch:
previous reference ReferenceId(238): Some("obj")
current  reference ReferenceId(174): None
reference Mismatch:
previous reference ReferenceId(240): Some("obj")
current  reference ReferenceId(176): None
reference Mismatch:
previous reference ReferenceId(241): Some("obj")
current  reference ReferenceId(177): None
reference Mismatch:
previous reference ReferenceId(243): Some("obj")
current  reference ReferenceId(179): None
reference Mismatch:
previous reference ReferenceId(247): Some("lhs0")
current  reference ReferenceId(180): None
reference Mismatch:
previous reference ReferenceId(248): Some("rhs14")
current  reference ReferenceId(181): None
reference Mismatch:
previous reference ReferenceId(249): Some("lhs0")
current  reference ReferenceId(182): None
reference Mismatch:
previous reference ReferenceId(257): Some("lhs0")
current  reference ReferenceId(183): None
reference Mismatch:
previous reference ReferenceId(258): Some("rhs15")
current  reference ReferenceId(184): None
reference Mismatch:
previous reference ReferenceId(259): Some("lhs0")
current  reference ReferenceId(185): None

tasks/coverage/typescript/tests/cases/conformance/expressions/binaryOperators/instanceofOperator/instanceofOperatorWithRHSIsSubtypeOfFunction.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["I", "f1", "f2", "f3", "f4", "r1", "r2", "r3", "r4", "r5", "r6", "x"]
current  scope ScopeId(0): ["f1", "f2", "f3", "f4", "r1", "r2", "r3", "r4", "r5", "r6", "x"]

tasks/coverage/typescript/tests/cases/conformance/expressions/binaryOperators/logicalAndOperator/logicalAndOperatorWithTypeParameters.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(1): ["T", "U", "V", "a", "r1", "r10", "r2", "r3", "r4", "r5", "r6", "r7", "r8", "r9", "t", "u", "v"]
current  scope ScopeId(1): ["a", "r1", "r10", "r2", "r3", "r4", "r5", "r6", "r7", "r8", "r9", "t", "u", "v"]

tasks/coverage/typescript/tests/cases/conformance/expressions/binaryOperators/logicalOrOperator/logicalOrOperatorWithTypeParameters.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(1): ["T", "U", "r1", "r2", "r3", "r4", "t", "u"]
current  scope ScopeId(1): ["r1", "r2", "r3", "r4", "t", "u"]
Bindings Mismatch:
previous scope ScopeId(2): ["T", "U", "V", "r1", "r3", "r4", "r5", "r6", "t", "u", "v"]
current  scope ScopeId(2): ["r1", "r3", "r4", "r5", "r6", "t", "u", "v"]
Bindings Mismatch:
previous scope ScopeId(3): ["T", "U", "r1", "r2", "r3", "r4", "t", "u"]
current  scope ScopeId(3): ["r1", "r2", "r3", "r4", "t", "u"]

tasks/coverage/typescript/tests/cases/conformance/expressions/commaOperator/commaOperatorOtherValidOperation.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(3): ["T1", "T2", "resultIsT1", "x", "y"]
current  scope ScopeId(3): ["resultIsT1", "x", "y"]

tasks/coverage/typescript/tests/cases/conformance/expressions/contextualTyping/functionExpressionContextualTyping1.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(1): ["E", "blue", "red"]
current  scope ScopeId(1): ["E"]
Bindings Mismatch:
previous scope ScopeId(3): ["T"]
current  scope ScopeId(3): []
Bindings Mismatch:
previous scope ScopeId(15): ["T", "U"]
current  scope ScopeId(15): []

tasks/coverage/typescript/tests/cases/conformance/expressions/contextualTyping/generatedContextualTyping.ts
semantic error: Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript
Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript
Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript
Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript
Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript
Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript
Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript
Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript
Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript
Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript
Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript
Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript

tasks/coverage/typescript/tests/cases/conformance/expressions/contextualTyping/parenthesizedContexualTyping3.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(3): ["T", "g", "tempStrs", "x"]
current  scope ScopeId(1): ["g", "tempStrs", "x"]

tasks/coverage/typescript/tests/cases/conformance/expressions/contextualTyping/superCallParameterContextualTyping1.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(1): ["T1", "T2"]
current  scope ScopeId(1): []

tasks/coverage/typescript/tests/cases/conformance/expressions/contextualTyping/superCallParameterContextualTyping3.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["C", "CBase", "ContextualType"]
current  scope ScopeId(0): ["C", "CBase"]
Bindings Mismatch:
previous scope ScopeId(3): ["T"]
current  scope ScopeId(1): []

tasks/coverage/typescript/tests/cases/conformance/expressions/contextualTyping/taggedTemplateContextualTyping1.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["FuncType", "tempTag1"]
current  scope ScopeId(0): ["tempTag1"]
Bindings Mismatch:
previous scope ScopeId(4): ["T", "rest"]
current  scope ScopeId(1): ["rest"]
Bindings Mismatch:
previous scope ScopeId(9): ["T", "y"]
current  scope ScopeId(6): ["y"]
Bindings Mismatch:
previous scope ScopeId(10): ["T", "x"]
current  scope ScopeId(7): ["x"]

tasks/coverage/typescript/tests/cases/conformance/expressions/contextualTyping/taggedTemplateContextualTyping2.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["FuncType1", "FuncType2", "tempTag2"]
current  scope ScopeId(0): ["tempTag2"]

tasks/coverage/typescript/tests/cases/conformance/expressions/elementAccess/stringEnumInElementAccess01.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["E", "Item", "e", "item", "snb"]
current  scope ScopeId(0): ["E", "snb"]
Bindings Mismatch:
previous scope ScopeId(1): ["A", "B", "C", "E"]
current  scope ScopeId(1): ["E"]
reference Mismatch:
previous reference ReferenceId(2): Some("item")
current  reference ReferenceId(5): None
reference Mismatch:
previous reference ReferenceId(3): Some("e")
current  reference ReferenceId(6): None

tasks/coverage/typescript/tests/cases/conformance/expressions/functionCalls/callWithSpread.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["C", "D", "X", "a", "foo", "obj", "xa", "z"]
current  scope ScopeId(0): ["C", "D", "a", "foo", "obj", "xa", "z"]

tasks/coverage/typescript/tests/cases/conformance/expressions/functionCalls/callWithSpreadES6.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["C", "D", "X", "a", "foo", "obj", "xa", "z"]
current  scope ScopeId(0): ["C", "D", "a", "foo", "obj", "xa", "z"]

tasks/coverage/typescript/tests/cases/conformance/expressions/functionCalls/newWithSpread.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["A", "B", "C", "D", "a", "b", "c", "d", "e", "f", "f2", "g", "h", "i"]
current  scope ScopeId(0): ["B", "a", "b", "c", "d", "e", "f", "f2", "g", "h", "i"]

tasks/coverage/typescript/tests/cases/conformance/expressions/functionCalls/newWithSpreadES5.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["A", "B", "C", "D", "a", "b", "c", "d", "e", "f", "f2", "g", "h", "i"]
current  scope ScopeId(0): ["B", "a", "b", "c", "d", "e", "f", "f2", "g", "h", "i"]

tasks/coverage/typescript/tests/cases/conformance/expressions/functionCalls/newWithSpreadES6.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["A", "B", "C", "D", "a", "b", "c", "d", "e", "f", "f2", "g", "h", "i"]
current  scope ScopeId(0): ["B", "a", "b", "c", "d", "e", "f", "f2", "g", "h", "i"]

tasks/coverage/typescript/tests/cases/conformance/expressions/functionCalls/typeArgumentInferenceTransitiveConstraints.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(1): ["A", "B", "C", "a", "b", "c"]
current  scope ScopeId(1): ["a", "b", "c"]

tasks/coverage/typescript/tests/cases/conformance/expressions/functions/typeOfThisInFunctionExpression.ts
semantic error: Semantic Collector failed after transform
Missing SymbolId: M
Missing SymbolId: _M
Missing ReferenceId: M
Missing ReferenceId: M

tasks/coverage/typescript/tests/cases/conformance/expressions/functions/voidParamAssignmentCompatibility.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Obj", "gg", "o"]
current  scope ScopeId(0): ["gg"]
reference Mismatch:
previous reference ReferenceId(4): Some("o")
current  reference ReferenceId(2): None

tasks/coverage/typescript/tests/cases/conformance/expressions/newOperator/newOperatorConformance.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(4): ["T"]
current  scope ScopeId(4): []
Bindings Mismatch:
previous scope ScopeId(10): ["T", "p", "s"]
current  scope ScopeId(6): ["p", "s"]
Bindings Mismatch:
previous scope ScopeId(12): ["T", "p", "s"]
current  scope ScopeId(7): ["p", "s"]

tasks/coverage/typescript/tests/cases/conformance/expressions/nullishCoalescingOperator/nullishCoalescingOperator1.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["I", "a1", "a2", "a3", "a4", "aa1", "aa2", "aa3", "aa4", "b1", "b2", "b3", "b4", "bb1", "bb2", "bb3", "bb4", "c1", "c2", "c3", "c4", "cc1", "cc2", "cc3", "cc4", "d1", "d2", "d3", "d4", "dd1", "dd2", "dd3", "dd4", "maybeBool"]
current  scope ScopeId(0): ["aa1", "aa2", "aa3", "aa4", "bb1", "bb2", "bb3", "bb4", "cc1", "cc2", "cc3", "cc4", "dd1", "dd2", "dd3", "dd4", "maybeBool"]
reference Mismatch:
previous reference ReferenceId(4): Some("a1")
current  reference ReferenceId(0): None
reference Mismatch:
previous reference ReferenceId(5): Some("a2")
current  reference ReferenceId(1): None
reference Mismatch:
previous reference ReferenceId(6): Some("a3")
current  reference ReferenceId(2): None
reference Mismatch:
previous reference ReferenceId(7): Some("a4")
current  reference ReferenceId(3): None
reference Mismatch:
previous reference ReferenceId(8): Some("b1")
current  reference ReferenceId(4): None
reference Mismatch:
previous reference ReferenceId(9): Some("b2")
current  reference ReferenceId(5): None
reference Mismatch:
previous reference ReferenceId(10): Some("b3")
current  reference ReferenceId(6): None
reference Mismatch:
previous reference ReferenceId(11): Some("b4")
current  reference ReferenceId(7): None
reference Mismatch:
previous reference ReferenceId(12): Some("c1")
current  reference ReferenceId(8): None
reference Mismatch:
previous reference ReferenceId(13): Some("c2")
current  reference ReferenceId(9): None
reference Mismatch:
previous reference ReferenceId(14): Some("c3")
current  reference ReferenceId(10): None
reference Mismatch:
previous reference ReferenceId(15): Some("c4")
current  reference ReferenceId(11): None
reference Mismatch:
previous reference ReferenceId(16): Some("d1")
current  reference ReferenceId(12): None
reference Mismatch:
previous reference ReferenceId(17): Some("d2")
current  reference ReferenceId(13): None
reference Mismatch:
previous reference ReferenceId(18): Some("d3")
current  reference ReferenceId(14): None
reference Mismatch:
previous reference ReferenceId(19): Some("d4")
current  reference ReferenceId(15): None

tasks/coverage/typescript/tests/cases/conformance/expressions/nullishCoalescingOperator/nullishCoalescingOperator2.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["a1", "a2", "a3", "a4", "a5", "a6", "a7", "a8", "a9", "aa1", "aa2", "aa3", "aa4", "aa5", "aa6", "aa7", "aa8", "aa9"]
current  scope ScopeId(0): ["aa1", "aa2", "aa3", "aa4", "aa5", "aa6", "aa7", "aa8", "aa9"]
reference Mismatch:
previous reference ReferenceId(1): Some("a1")
current  reference ReferenceId(0): None
reference Mismatch:
previous reference ReferenceId(2): Some("a2")
current  reference ReferenceId(1): None
reference Mismatch:
previous reference ReferenceId(3): Some("a3")
current  reference ReferenceId(2): None
reference Mismatch:
previous reference ReferenceId(4): Some("a4")
current  reference ReferenceId(3): None
reference Mismatch:
previous reference ReferenceId(5): Some("a5")
current  reference ReferenceId(4): None
reference Mismatch:
previous reference ReferenceId(6): Some("a6")
current  reference ReferenceId(5): None
reference Mismatch:
previous reference ReferenceId(7): Some("a7")
current  reference ReferenceId(6): None
reference Mismatch:
previous reference ReferenceId(8): Some("a8")
current  reference ReferenceId(7): None
reference Mismatch:
previous reference ReferenceId(9): Some("a9")
current  reference ReferenceId(8): None

tasks/coverage/typescript/tests/cases/conformance/expressions/nullishCoalescingOperator/nullishCoalescingOperator3.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["a1", "a2", "a3", "a4", "a5", "a6", "aa1"]
current  scope ScopeId(0): ["aa1"]
reference Mismatch:
previous reference ReferenceId(1): Some("a1")
current  reference ReferenceId(0): None
reference Mismatch:
previous reference ReferenceId(2): Some("a2")
current  reference ReferenceId(1): None
reference Mismatch:
previous reference ReferenceId(3): Some("a3")
current  reference ReferenceId(2): None
reference Mismatch:
previous reference ReferenceId(4): Some("a4")
current  reference ReferenceId(3): None
reference Mismatch:
previous reference ReferenceId(5): Some("a5")
current  reference ReferenceId(4): None
reference Mismatch:
previous reference ReferenceId(6): Some("a6")
current  reference ReferenceId(5): None

tasks/coverage/typescript/tests/cases/conformance/expressions/nullishCoalescingOperator/nullishCoalescingOperator7.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["a", "b", "c", "f", "foo1", "foo2", "foo3"]
current  scope ScopeId(0): ["f", "foo1", "foo2", "foo3"]
reference Mismatch:
previous reference ReferenceId(0): Some("a")
current  reference ReferenceId(0): None
reference Mismatch:
previous reference ReferenceId(1): Some("a")
current  reference ReferenceId(1): None
reference Mismatch:
previous reference ReferenceId(2): Some("a")
current  reference ReferenceId(2): None
reference Mismatch:
previous reference ReferenceId(3): Some("b")
current  reference ReferenceId(3): None
reference Mismatch:
previous reference ReferenceId(4): Some("c")
current  reference ReferenceId(4): None
reference Mismatch:
previous reference ReferenceId(5): Some("a")
current  reference ReferenceId(5): None
reference Mismatch:
previous reference ReferenceId(6): Some("b")
current  reference ReferenceId(6): None
reference Mismatch:
previous reference ReferenceId(7): Some("c")
current  reference ReferenceId(7): None

tasks/coverage/typescript/tests/cases/conformance/expressions/nullishCoalescingOperator/nullishCoalescingOperator8.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["a", "b", "n1", "n2", "n3"]
current  scope ScopeId(0): ["n1", "n2", "n3"]
reference Mismatch:
previous reference ReferenceId(0): Some("a")
current  reference ReferenceId(0): None
reference Mismatch:
previous reference ReferenceId(1): Some("a")
current  reference ReferenceId(1): None
reference Mismatch:
previous reference ReferenceId(2): Some("a")
current  reference ReferenceId(2): None
reference Mismatch:
previous reference ReferenceId(3): Some("b")
current  reference ReferenceId(3): None
reference Mismatch:
previous reference ReferenceId(4): Some("b")
current  reference ReferenceId(4): None

tasks/coverage/typescript/tests/cases/conformance/expressions/nullishCoalescingOperator/nullishCoalescingOperator9.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["f", "g", "gg"]
current  scope ScopeId(0): ["g", "gg"]
reference Mismatch:
previous reference ReferenceId(0): Some("f")
current  reference ReferenceId(0): None
reference Mismatch:
previous reference ReferenceId(2): Some("f")
current  reference ReferenceId(2): None

tasks/coverage/typescript/tests/cases/conformance/expressions/nullishCoalescingOperator/nullishCoalescingOperator_es2020.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["a", "a1", "a2", "a3", "a4", "a5", "a6", "a7", "a8", "a9", "aa1", "aa2", "aa3", "aa4", "aa5", "aa6", "aa7", "aa8", "aa9", "b", "c", "x1", "x2", "x3", "x4", "x5", "x6", "y1", "y2", "y3", "y4", "y5", "y6"]
current  scope ScopeId(0): ["aa1", "aa2", "aa3", "aa4", "aa5", "aa6", "aa7", "aa8", "aa9", "x1", "x2", "x3", "x4", "x5", "x6", "y1", "y2", "y3", "y4", "y5", "y6"]
reference Mismatch:
previous reference ReferenceId(1): Some("a1")
current  reference ReferenceId(0): None
reference Mismatch:
previous reference ReferenceId(2): Some("a2")
current  reference ReferenceId(1): None
reference Mismatch:
previous reference ReferenceId(3): Some("a3")
current  reference ReferenceId(2): None
reference Mismatch:
previous reference ReferenceId(4): Some("a4")
current  reference ReferenceId(3): None
reference Mismatch:
previous reference ReferenceId(5): Some("a5")
current  reference ReferenceId(4): None
reference Mismatch:
previous reference ReferenceId(6): Some("a6")
current  reference ReferenceId(5): None
reference Mismatch:
previous reference ReferenceId(7): Some("a7")
current  reference ReferenceId(6): None
reference Mismatch:
previous reference ReferenceId(8): Some("a8")
current  reference ReferenceId(7): None
reference Mismatch:
previous reference ReferenceId(9): Some("a9")
current  reference ReferenceId(8): None
reference Mismatch:
previous reference ReferenceId(10): Some("a")
current  reference ReferenceId(9): None
reference Mismatch:
previous reference ReferenceId(11): Some("b")
current  reference ReferenceId(10): None
reference Mismatch:
previous reference ReferenceId(12): Some("c")
current  reference ReferenceId(11): None
reference Mismatch:
previous reference ReferenceId(13): Some("c")
current  reference ReferenceId(12): None
reference Mismatch:
previous reference ReferenceId(14): Some("a")
current  reference ReferenceId(13): None
reference Mismatch:
previous reference ReferenceId(15): Some("b")
current  reference ReferenceId(14): None
reference Mismatch:
previous reference ReferenceId(16): Some("a")
current  reference ReferenceId(15): None
reference Mismatch:
previous reference ReferenceId(17): Some("b")
current  reference ReferenceId(16): None
reference Mismatch:
previous reference ReferenceId(18): Some("c")
current  reference ReferenceId(17): None
reference Mismatch:
previous reference ReferenceId(19): Some("c")
current  reference ReferenceId(18): None
reference Mismatch:
previous reference ReferenceId(20): Some("a")
current  reference ReferenceId(19): None
reference Mismatch:
previous reference ReferenceId(21): Some("b")
current  reference ReferenceId(20): None
reference Mismatch:
previous reference ReferenceId(22): Some("a")
current  reference ReferenceId(21): None
reference Mismatch:
previous reference ReferenceId(23): Some("b")
current  reference ReferenceId(22): None
reference Mismatch:
previous reference ReferenceId(24): Some("c")
current  reference ReferenceId(23): None
reference Mismatch:
previous reference ReferenceId(25): Some("c")
current  reference ReferenceId(24): None
reference Mismatch:
previous reference ReferenceId(26): Some("a")
current  reference ReferenceId(25): None
reference Mismatch:
previous reference ReferenceId(27): Some("b")
current  reference ReferenceId(26): None
reference Mismatch:
previous reference ReferenceId(28): Some("a")
current  reference ReferenceId(27): None
reference Mismatch:
previous reference ReferenceId(29): Some("b")
current  reference ReferenceId(28): None
reference Mismatch:
previous reference ReferenceId(30): Some("c")
current  reference ReferenceId(29): None
reference Mismatch:
previous reference ReferenceId(31): Some("c")
current  reference ReferenceId(30): None
reference Mismatch:
previous reference ReferenceId(32): Some("a")
current  reference ReferenceId(31): None
reference Mismatch:
previous reference ReferenceId(33): Some("b")
current  reference ReferenceId(32): None
reference Mismatch:
previous reference ReferenceId(34): Some("a")
current  reference ReferenceId(33): None
reference Mismatch:
previous reference ReferenceId(35): Some("b")
current  reference ReferenceId(34): None
reference Mismatch:
previous reference ReferenceId(36): Some("c")
current  reference ReferenceId(35): None
reference Mismatch:
previous reference ReferenceId(37): Some("c")
current  reference ReferenceId(36): None
reference Mismatch:
previous reference ReferenceId(38): Some("a")
current  reference ReferenceId(37): None
reference Mismatch:
previous reference ReferenceId(39): Some("b")
current  reference ReferenceId(38): None
reference Mismatch:
previous reference ReferenceId(40): Some("a")
current  reference ReferenceId(39): None
reference Mismatch:
previous reference ReferenceId(41): Some("b")
current  reference ReferenceId(40): None
reference Mismatch:
previous reference ReferenceId(42): Some("c")
current  reference ReferenceId(41): None
reference Mismatch:
previous reference ReferenceId(43): Some("c")
current  reference ReferenceId(42): None
reference Mismatch:
previous reference ReferenceId(44): Some("a")
current  reference ReferenceId(43): None
reference Mismatch:
previous reference ReferenceId(45): Some("b")
current  reference ReferenceId(44): None

tasks/coverage/typescript/tests/cases/conformance/expressions/nullishCoalescingOperator/nullishCoalescingOperator_not_strict.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["a1", "a2", "a3", "a4", "a5", "a6", "a7", "a8", "a9", "aa1", "aa2", "aa3", "aa4", "aa5", "aa6", "aa7", "aa8", "aa9"]
current  scope ScopeId(0): ["aa1", "aa2", "aa3", "aa4", "aa5", "aa6", "aa7", "aa8", "aa9"]
reference Mismatch:
previous reference ReferenceId(1): Some("a1")
current  reference ReferenceId(0): None
reference Mismatch:
previous reference ReferenceId(2): Some("a2")
current  reference ReferenceId(1): None
reference Mismatch:
previous reference ReferenceId(3): Some("a3")
current  reference ReferenceId(2): None
reference Mismatch:
previous reference ReferenceId(4): Some("a4")
current  reference ReferenceId(3): None
reference Mismatch:
previous reference ReferenceId(5): Some("a5")
current  reference ReferenceId(4): None
reference Mismatch:
previous reference ReferenceId(6): Some("a6")
current  reference ReferenceId(5): None
reference Mismatch:
previous reference ReferenceId(7): Some("a7")
current  reference ReferenceId(6): None
reference Mismatch:
previous reference ReferenceId(8): Some("a8")
current  reference ReferenceId(7): None
reference Mismatch:
previous reference ReferenceId(9): Some("a9")
current  reference ReferenceId(8): None

tasks/coverage/typescript/tests/cases/conformance/expressions/optionalChaining/callChain/callChain.2.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["o1", "o2", "o3"]
current  scope ScopeId(0): []
reference Mismatch:
previous reference ReferenceId(0): Some("o1")
current  reference ReferenceId(0): None
reference Mismatch:
previous reference ReferenceId(1): Some("o2")
current  reference ReferenceId(1): None
reference Mismatch:
previous reference ReferenceId(2): Some("o3")
current  reference ReferenceId(2): None

tasks/coverage/typescript/tests/cases/conformance/expressions/optionalChaining/callChain/callChain.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["T", "o1", "o2", "o3", "o4", "o5", "v"]
current  scope ScopeId(0): ["v"]
reference Mismatch:
previous reference ReferenceId(0): Some("o1")
current  reference ReferenceId(0): None
reference Mismatch:
previous reference ReferenceId(1): Some("o1")
current  reference ReferenceId(1): None
reference Mismatch:
previous reference ReferenceId(2): Some("o1")
current  reference ReferenceId(2): None
reference Mismatch:
previous reference ReferenceId(3): Some("o1")
current  reference ReferenceId(3): None
reference Mismatch:
previous reference ReferenceId(4): Some("o2")
current  reference ReferenceId(4): None
reference Mismatch:
previous reference ReferenceId(5): Some("o2")
current  reference ReferenceId(5): None
reference Mismatch:
previous reference ReferenceId(6): Some("o2")
current  reference ReferenceId(6): None
reference Mismatch:
previous reference ReferenceId(7): Some("o2")
current  reference ReferenceId(7): None
reference Mismatch:
previous reference ReferenceId(8): Some("o2")
current  reference ReferenceId(8): None
reference Mismatch:
previous reference ReferenceId(9): Some("o2")
current  reference ReferenceId(9): None
reference Mismatch:
previous reference ReferenceId(10): Some("o2")
current  reference ReferenceId(10): None
reference Mismatch:
previous reference ReferenceId(11): Some("o2")
current  reference ReferenceId(11): None
reference Mismatch:
previous reference ReferenceId(12): Some("o3")
current  reference ReferenceId(12): None
reference Mismatch:
previous reference ReferenceId(13): Some("o3")
current  reference ReferenceId(13): None
reference Mismatch:
previous reference ReferenceId(14): Some("o3")
current  reference ReferenceId(14): None
reference Mismatch:
previous reference ReferenceId(15): Some("o3")
current  reference ReferenceId(15): None
reference Mismatch:
previous reference ReferenceId(16): Some("o3")
current  reference ReferenceId(16): None
reference Mismatch:
previous reference ReferenceId(17): Some("o3")
current  reference ReferenceId(17): None
reference Mismatch:
previous reference ReferenceId(18): Some("o3")
current  reference ReferenceId(18): None
reference Mismatch:
previous reference ReferenceId(19): Some("o3")
current  reference ReferenceId(19): None
reference Mismatch:
previous reference ReferenceId(20): Some("o3")
current  reference ReferenceId(20): None
reference Mismatch:
previous reference ReferenceId(21): Some("o3")
current  reference ReferenceId(21): None
reference Mismatch:
previous reference ReferenceId(22): Some("o3")
current  reference ReferenceId(22): None
reference Mismatch:
previous reference ReferenceId(23): Some("o3")
current  reference ReferenceId(23): None
reference Mismatch:
previous reference ReferenceId(27): Some("o4")
current  reference ReferenceId(24): None
reference Mismatch:
previous reference ReferenceId(29): Some("o5")
current  reference ReferenceId(26): None
reference Mismatch:
previous reference ReferenceId(30): Some("o2")
current  reference ReferenceId(27): None
reference Mismatch:
previous reference ReferenceId(31): Some("o2")
current  reference ReferenceId(28): None

tasks/coverage/typescript/tests/cases/conformance/expressions/optionalChaining/callChain/callChainInference.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Y", "value"]
current  scope ScopeId(0): []
reference Mismatch:
previous reference ReferenceId(3): Some("value")
current  reference ReferenceId(0): None
reference Mismatch:
previous reference ReferenceId(4): Some("value")
current  reference ReferenceId(1): None
reference Mismatch:
previous reference ReferenceId(5): Some("value")
current  reference ReferenceId(2): None

tasks/coverage/typescript/tests/cases/conformance/expressions/optionalChaining/callChain/parentheses.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["o1", "o2", "o3", "o4"]
current  scope ScopeId(0): []
reference Mismatch:
previous reference ReferenceId(0): Some("o1")
current  reference ReferenceId(0): None
reference Mismatch:
previous reference ReferenceId(1): Some("o1")
current  reference ReferenceId(1): None
reference Mismatch:
previous reference ReferenceId(2): Some("o2")
current  reference ReferenceId(2): None
reference Mismatch:
previous reference ReferenceId(3): Some("o1")
current  reference ReferenceId(3): None
reference Mismatch:
previous reference ReferenceId(4): Some("o3")
current  reference ReferenceId(4): None
reference Mismatch:
previous reference ReferenceId(5): Some("o1")
current  reference ReferenceId(5): None
reference Mismatch:
previous reference ReferenceId(6): Some("o4")
current  reference ReferenceId(6): None
reference Mismatch:
previous reference ReferenceId(7): Some("o1")
current  reference ReferenceId(7): None

tasks/coverage/typescript/tests/cases/conformance/expressions/optionalChaining/elementAccessChain/elementAccessChain.2.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["o1", "o2", "o3"]
current  scope ScopeId(0): []
reference Mismatch:
previous reference ReferenceId(0): Some("o1")
current  reference ReferenceId(0): None
reference Mismatch:
previous reference ReferenceId(1): Some("o2")
current  reference ReferenceId(1): None
reference Mismatch:
previous reference ReferenceId(2): Some("o2")
current  reference ReferenceId(2): None
reference Mismatch:
previous reference ReferenceId(3): Some("o3")
current  reference ReferenceId(3): None
reference Mismatch:
previous reference ReferenceId(4): Some("o3")
current  reference ReferenceId(4): None

tasks/coverage/typescript/tests/cases/conformance/expressions/optionalChaining/elementAccessChain/elementAccessChain.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["T", "o1", "o2", "o3", "o4", "o5", "o6"]
current  scope ScopeId(0): []
reference Mismatch:
previous reference ReferenceId(0): Some("o1")
current  reference ReferenceId(0): None
reference Mismatch:
previous reference ReferenceId(1): Some("o2")
current  reference ReferenceId(1): None
reference Mismatch:
previous reference ReferenceId(2): Some("o2")
current  reference ReferenceId(2): None
reference Mismatch:
previous reference ReferenceId(3): Some("o3")
current  reference ReferenceId(3): None
reference Mismatch:
previous reference ReferenceId(4): Some("o3")
current  reference ReferenceId(4): None
reference Mismatch:
previous reference ReferenceId(5): Some("o4")
current  reference ReferenceId(5): None
reference Mismatch:
previous reference ReferenceId(6): Some("o4")
current  reference ReferenceId(6): None
reference Mismatch:
previous reference ReferenceId(7): Some("o5")
current  reference ReferenceId(7): None
reference Mismatch:
previous reference ReferenceId(8): Some("o5")
current  reference ReferenceId(8): None
reference Mismatch:
previous reference ReferenceId(9): Some("o5")
current  reference ReferenceId(9): None
reference Mismatch:
previous reference ReferenceId(10): Some("o5")
current  reference ReferenceId(10): None
reference Mismatch:
previous reference ReferenceId(11): Some("o6")
current  reference ReferenceId(11): None
reference Mismatch:
previous reference ReferenceId(12): Some("o2")
current  reference ReferenceId(12): None
reference Mismatch:
previous reference ReferenceId(13): Some("o2")
current  reference ReferenceId(13): None
reference Mismatch:
previous reference ReferenceId(14): Some("o2")
current  reference ReferenceId(14): None
reference Mismatch:
previous reference ReferenceId(15): Some("o2")
current  reference ReferenceId(15): None

tasks/coverage/typescript/tests/cases/conformance/expressions/optionalChaining/optionalChainingInference.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["b1", "b2", "b3", "b4", "b5", "b6", "b7", "b8", "fnu", "ofnu", "osu", "su", "v1", "v2", "v3", "v4", "v5", "v6", "v7", "v8"]
current  scope ScopeId(0): ["b1", "b2", "b3", "b4", "b5", "b6", "b7", "b8", "v1", "v2", "v3", "v4", "v5", "v6", "v7", "v8"]
reference Mismatch:
previous reference ReferenceId(2): Some("su")
current  reference ReferenceId(0): None
reference Mismatch:
previous reference ReferenceId(5): Some("su")
current  reference ReferenceId(3): None
reference Mismatch:
previous reference ReferenceId(8): Some("su")
current  reference ReferenceId(6): None
reference Mismatch:
previous reference ReferenceId(11): Some("fnu")
current  reference ReferenceId(9): None
reference Mismatch:
previous reference ReferenceId(14): Some("su")
current  reference ReferenceId(12): None
reference Mismatch:
previous reference ReferenceId(17): Some("osu")
current  reference ReferenceId(15): None
reference Mismatch:
previous reference ReferenceId(20): Some("osu")
current  reference ReferenceId(18): None
reference Mismatch:
previous reference ReferenceId(23): Some("ofnu")
current  reference ReferenceId(21): None

tasks/coverage/typescript/tests/cases/conformance/expressions/optionalChaining/propertyAccessChain/propertyAccessChain.2.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["o1", "o2", "o3"]
current  scope ScopeId(0): []
reference Mismatch:
previous reference ReferenceId(0): Some("o1")
current  reference ReferenceId(0): None
reference Mismatch:
previous reference ReferenceId(1): Some("o2")
current  reference ReferenceId(1): None
reference Mismatch:
previous reference ReferenceId(2): Some("o3")
current  reference ReferenceId(2): None

tasks/coverage/typescript/tests/cases/conformance/expressions/optionalChaining/propertyAccessChain/propertyAccessChain.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["T", "o1", "o2", "o3", "o4", "o5", "o6"]
current  scope ScopeId(0): []
reference Mismatch:
previous reference ReferenceId(0): Some("o1")
current  reference ReferenceId(0): None
reference Mismatch:
previous reference ReferenceId(1): Some("o2")
current  reference ReferenceId(1): None
reference Mismatch:
previous reference ReferenceId(2): Some("o3")
current  reference ReferenceId(2): None
reference Mismatch:
previous reference ReferenceId(3): Some("o4")
current  reference ReferenceId(3): None
reference Mismatch:
previous reference ReferenceId(4): Some("o5")
current  reference ReferenceId(4): None
reference Mismatch:
previous reference ReferenceId(5): Some("o6")
current  reference ReferenceId(5): None
reference Mismatch:
previous reference ReferenceId(6): Some("o1")
current  reference ReferenceId(6): None
reference Mismatch:
previous reference ReferenceId(7): Some("o2")
current  reference ReferenceId(7): None
reference Mismatch:
previous reference ReferenceId(8): Some("o2")
current  reference ReferenceId(8): None

tasks/coverage/typescript/tests/cases/conformance/expressions/typeAssertions/constAssertionOnEnum.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(1): ["A", "B", "Foo"]
current  scope ScopeId(1): ["Foo"]

tasks/coverage/typescript/tests/cases/conformance/expressions/typeGuards/TypeGuardWithEnumUnion.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(1): ["B", "Color", "G", "R"]
current  scope ScopeId(1): ["Color"]

tasks/coverage/typescript/tests/cases/conformance/expressions/typeGuards/typeGuardFunction.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["A", "B", "C", "D", "I1", "a", "b", "f1", "obj", "subType", "union", "union2", "union3"]
current  scope ScopeId(0): ["A", "B", "C", "D", "a", "b", "f1", "obj", "subType", "union", "union2", "union3"]

tasks/coverage/typescript/tests/cases/conformance/expressions/typeGuards/typeGuardIntersectionTypes.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["A", "B", "Beast", "Legged", "Winged", "X", "Y", "Z", "beastFoo", "f1", "hasLegs", "hasWings", "identifyBeast", "isB", "union"]
current  scope ScopeId(0): ["beastFoo", "f1", "hasLegs", "hasWings", "identifyBeast", "isB", "union"]

tasks/coverage/typescript/tests/cases/conformance/expressions/typeGuards/typeGuardNarrowsPrimitiveIntersection.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Tag", "Tag2", "value"]
current  scope ScopeId(0): ["Tag2", "value"]

tasks/coverage/typescript/tests/cases/conformance/expressions/typeGuards/typeGuardOfFormInstanceOfOnInterface.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["C1", "C2", "D1", "c1", "c1Orc2", "c2", "c2Ord1", "d1", "num", "r2", "str", "strOrNum"]
current  scope ScopeId(0): ["c1", "c1Orc2", "c2", "c2Ord1", "d1", "num", "r2", "str", "strOrNum"]

tasks/coverage/typescript/tests/cases/conformance/expressions/typeGuards/typeGuardOfFormIsTypeOnInterfaces.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["C1", "C2", "D1", "c1", "c1Orc2", "c2", "c2Ord1", "d1", "isC1", "isC2", "isD1", "num", "r2", "str", "strOrNum"]
current  scope ScopeId(0): ["c1", "c1Orc2", "c2", "c2Ord1", "d1", "isC1", "isC2", "isD1", "num", "r2", "str", "strOrNum"]

tasks/coverage/typescript/tests/cases/conformance/expressions/typeGuards/typeGuardOfFormTypeOfFunction.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(7): ["T", "x"]
current  scope ScopeId(7): ["x"]
Bindings Mismatch:
previous scope ScopeId(22): ["K", "T", "keys", "obj"]
current  scope ScopeId(22): ["keys", "obj"]
Bindings Mismatch:
previous scope ScopeId(25): ["S", "reducer", "rootReducer"]
current  scope ScopeId(25): ["reducer", "rootReducer"]

tasks/coverage/typescript/tests/cases/conformance/expressions/typeGuards/typeGuardOfFromPropNameInUnionType.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["A", "AWithOptionalProp", "B", "BWithOptionalProp", "C", "ClassWithUnionProp", "D", "InMemberOfClass", "Indexed", "NestedClassWithProp", "SelfAssert", "anonymousClasses", "f", "inParenthesizedExpression", "inProperty", "innestedProperty", "multipleClasses", "namedClasses", "positiveTestClassesWithOptionalProperties"]
current  scope ScopeId(0): ["A", "AWithOptionalProp", "B", "BWithOptionalProp", "C", "ClassWithUnionProp", "D", "InMemberOfClass", "NestedClassWithProp", "SelfAssert", "anonymousClasses", "f", "inParenthesizedExpression", "inProperty", "innestedProperty", "multipleClasses", "namedClasses", "positiveTestClassesWithOptionalProperties"]

tasks/coverage/typescript/tests/cases/conformance/expressions/typeGuards/typeGuardsInFunctionAndModuleBlock.ts
semantic error: Semantic Collector failed after transform
Missing SymbolId: m
Missing SymbolId: _m
Missing SymbolId: m2
Missing SymbolId: _m2
Missing ReferenceId: m2
Missing ReferenceId: m2
Missing ReferenceId: m
Missing ReferenceId: m
Missing SymbolId: m1
Missing SymbolId: _m3
Missing SymbolId: m2
Missing SymbolId: _m4
Missing SymbolId: m3
Missing SymbolId: _m5
Missing ReferenceId: m3
Missing ReferenceId: m3
Missing ReferenceId: _m4
Missing ReferenceId: _m4
Missing ReferenceId: m2
Missing ReferenceId: m2
Missing ReferenceId: m1
Missing ReferenceId: m1

tasks/coverage/typescript/tests/cases/conformance/expressions/typeGuards/typeGuardsInModule.ts
semantic error: Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript
Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript
Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript
Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript

tasks/coverage/typescript/tests/cases/conformance/expressions/typeGuards/typePredicateASI.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["I"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/conformance/expressions/typeSatisfaction/typeSatisfaction_contextualTyping1.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Predicates", "p"]
current  scope ScopeId(0): ["p"]

tasks/coverage/typescript/tests/cases/conformance/expressions/typeSatisfaction/typeSatisfaction_contextualTyping3.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["StringOrNumberFunc", "fn", "obj", "obj2"]
current  scope ScopeId(0): ["fn", "obj", "obj2"]

tasks/coverage/typescript/tests/cases/conformance/expressions/typeSatisfaction/typeSatisfaction_ensureInterfaceImpl.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Movable", "car"]
current  scope ScopeId(0): ["car"]

tasks/coverage/typescript/tests/cases/conformance/expressions/typeSatisfaction/typeSatisfaction_propertyValueConformance1.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Facts", "M", "m", "x", "x2"]
current  scope ScopeId(0): ["m", "x", "x2"]

tasks/coverage/typescript/tests/cases/conformance/expressions/typeSatisfaction/typeSatisfaction_propertyValueConformance2.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Facts", "M", "m", "x", "x2"]
current  scope ScopeId(0): ["m", "x", "x2"]

tasks/coverage/typescript/tests/cases/conformance/expressions/unaryOperators/bitwiseNotOperator/bitwiseNotOperatorWithBooleanType.ts
semantic error: Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript

tasks/coverage/typescript/tests/cases/conformance/expressions/unaryOperators/bitwiseNotOperator/bitwiseNotOperatorWithEnumType.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(1): ["", "A", "B", "ENUM1"]
current  scope ScopeId(1): ["ENUM1"]

tasks/coverage/typescript/tests/cases/conformance/expressions/unaryOperators/bitwiseNotOperator/bitwiseNotOperatorWithNumberType.ts
semantic error: Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript

tasks/coverage/typescript/tests/cases/conformance/expressions/unaryOperators/bitwiseNotOperator/bitwiseNotOperatorWithStringType.ts
semantic error: Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript

tasks/coverage/typescript/tests/cases/conformance/expressions/unaryOperators/decrementOperator/decrementOperatorWithAnyOtherType.ts
semantic error: Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript

tasks/coverage/typescript/tests/cases/conformance/expressions/unaryOperators/decrementOperator/decrementOperatorWithNumberType.ts
semantic error: Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript

tasks/coverage/typescript/tests/cases/conformance/expressions/unaryOperators/incrementOperator/incrementOperatorWithAnyOtherType.ts
semantic error: Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript

tasks/coverage/typescript/tests/cases/conformance/expressions/unaryOperators/incrementOperator/incrementOperatorWithNumberType.ts
semantic error: Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript

tasks/coverage/typescript/tests/cases/conformance/expressions/unaryOperators/voidOperator/voidOperatorWithBooleanType.ts
semantic error: Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript

tasks/coverage/typescript/tests/cases/conformance/expressions/unaryOperators/voidOperator/voidOperatorWithEnumType.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(2): ["", "A", "B", "ENUM1"]
current  scope ScopeId(2): ["ENUM1"]

tasks/coverage/typescript/tests/cases/conformance/expressions/unaryOperators/voidOperator/voidOperatorWithNumberType.ts
semantic error: Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript

tasks/coverage/typescript/tests/cases/conformance/expressions/unaryOperators/voidOperator/voidOperatorWithStringType.ts
semantic error: Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript

tasks/coverage/typescript/tests/cases/conformance/externalModules/amdImportAsPrimaryExpression.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(1): ["A", "B", "C", "E1"]
current  scope ScopeId(1): ["E1"]

tasks/coverage/typescript/tests/cases/conformance/externalModules/amdImportNotAsPrimaryExpression.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["C1", "E1", "I1", "M1"]
current  scope ScopeId(0): ["C1", "E1"]
Bindings Mismatch:
previous scope ScopeId(5): ["A", "B", "C", "E1"]
current  scope ScopeId(2): ["E1"]

tasks/coverage/typescript/tests/cases/conformance/externalModules/asiPreventsParsingAsAmbientExternalModule02.ts
semantic error: Semantic Collector failed after transform
Missing SymbolId: container
Missing SymbolId: _container
Missing ReferenceId: container
Missing ReferenceId: container

tasks/coverage/typescript/tests/cases/conformance/externalModules/commonJSImportAsPrimaryExpression.ts
semantic error: `import lib = require(...);` is only supported when compiling modules to CommonJS.
Please consider using `import lib from '...';` alongside Typescript's --allowSyntheticDefaultImports option, or add @babel/plugin-transform-modules-commonjs to your Babel config.

tasks/coverage/typescript/tests/cases/conformance/externalModules/commonJSImportNotAsPrimaryExpression.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["C1", "E1", "I1", "M1"]
current  scope ScopeId(0): ["C1", "E1"]
Bindings Mismatch:
previous scope ScopeId(5): ["A", "B", "C", "E1"]
current  scope ScopeId(2): ["E1"]

tasks/coverage/typescript/tests/cases/conformance/externalModules/es6/es6modulekindWithES5Target12.ts
semantic error: Semantic Collector failed after transform
Missing SymbolId: _C
Missing ReferenceId: _C
Missing ReferenceId: C
Missing ReferenceId: C
Missing SymbolId: _E
Missing ReferenceId: _E
Missing ReferenceId: E
Missing ReferenceId: E
Missing SymbolId: _E2
Missing ReferenceId: _E2
Missing ReferenceId: E
Missing ReferenceId: E
Missing SymbolId: _N2
Missing ReferenceId: _N2
Missing ReferenceId: N
Missing ReferenceId: N
Missing SymbolId: _F
Missing ReferenceId: _F
Missing ReferenceId: F
Missing ReferenceId: F

tasks/coverage/typescript/tests/cases/conformance/externalModules/es6/es6modulekindWithES5Target5.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(1): ["E1", "value1"]
current  scope ScopeId(1): ["E1"]
Bindings Mismatch:
previous scope ScopeId(2): ["E2", "value1"]
current  scope ScopeId(2): ["E2"]

tasks/coverage/typescript/tests/cases/conformance/externalModules/es6/es6modulekindWithES5Target7.ts
semantic error: Semantic Collector failed after transform
Missing SymbolId: N
Missing SymbolId: _N
Missing ReferenceId: N
Missing ReferenceId: N

tasks/coverage/typescript/tests/cases/conformance/externalModules/esnext/esnextmodulekindWithES5Target12.ts
semantic error: Semantic Collector failed after transform
Missing SymbolId: _C
Missing ReferenceId: _C
Missing ReferenceId: C
Missing ReferenceId: C
Missing SymbolId: _E
Missing ReferenceId: _E
Missing ReferenceId: E
Missing ReferenceId: E
Missing SymbolId: _E2
Missing ReferenceId: _E2
Missing ReferenceId: E
Missing ReferenceId: E
Missing SymbolId: _N2
Missing ReferenceId: _N2
Missing ReferenceId: N
Missing ReferenceId: N
Missing SymbolId: _F
Missing ReferenceId: _F
Missing ReferenceId: F
Missing ReferenceId: F

tasks/coverage/typescript/tests/cases/conformance/externalModules/esnext/esnextmodulekindWithES5Target5.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(1): ["E1", "value1"]
current  scope ScopeId(1): ["E1"]
Bindings Mismatch:
previous scope ScopeId(2): ["E2", "value1"]
current  scope ScopeId(2): ["E2"]

tasks/coverage/typescript/tests/cases/conformance/externalModules/esnext/esnextmodulekindWithES5Target7.ts
semantic error: Semantic Collector failed after transform
Missing SymbolId: N
Missing SymbolId: _N
Missing ReferenceId: N
Missing ReferenceId: N

tasks/coverage/typescript/tests/cases/conformance/externalModules/exportAssignDottedName.ts
semantic error: `import lib = require(...);` is only supported when compiling modules to CommonJS.
Please consider using `import lib from '...';` alongside Typescript's --allowSyntheticDefaultImports option, or add @babel/plugin-transform-modules-commonjs to your Babel config.
`export = <value>;` is only supported when compiling modules to CommonJS.
Please consider using `export default <value>;`, or add @babel/plugin-transform-modules-commonjs to your Babel config.

tasks/coverage/typescript/tests/cases/conformance/externalModules/exportAssignImportedIdentifier.ts
semantic error: `import lib = require(...);` is only supported when compiling modules to CommonJS.
Please consider using `import lib from '...';` alongside Typescript's --allowSyntheticDefaultImports option, or add @babel/plugin-transform-modules-commonjs to your Babel config.
`export = <value>;` is only supported when compiling modules to CommonJS.
Please consider using `export default <value>;`, or add @babel/plugin-transform-modules-commonjs to your Babel config.

tasks/coverage/typescript/tests/cases/conformance/externalModules/exportAssignTypes.ts
semantic error: `export = <value>;` is only supported when compiling modules to CommonJS.
Please consider using `export default <value>;`, or add @babel/plugin-transform-modules-commonjs to your Babel config.

tasks/coverage/typescript/tests/cases/conformance/externalModules/exportAssignmentCircularModules.ts
semantic error: Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript
`import lib = require(...);` is only supported when compiling modules to CommonJS.
Please consider using `import lib from '...';` alongside Typescript's --allowSyntheticDefaultImports option, or add @babel/plugin-transform-modules-commonjs to your Babel config.
`export = <value>;` is only supported when compiling modules to CommonJS.
Please consider using `export default <value>;`, or add @babel/plugin-transform-modules-commonjs to your Babel config.

tasks/coverage/typescript/tests/cases/conformance/externalModules/exportAssignmentGenericType.ts
semantic error: `export = <value>;` is only supported when compiling modules to CommonJS.
Please consider using `export default <value>;`, or add @babel/plugin-transform-modules-commonjs to your Babel config.

tasks/coverage/typescript/tests/cases/conformance/externalModules/exportAssignmentMergedInterface.ts
semantic error: `export = <value>;` is only supported when compiling modules to CommonJS.
Please consider using `export default <value>;`, or add @babel/plugin-transform-modules-commonjs to your Babel config.

tasks/coverage/typescript/tests/cases/conformance/externalModules/exportAssignmentMergedModule.ts
semantic error: Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript
Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript
`export = <value>;` is only supported when compiling modules to CommonJS.
Please consider using `export default <value>;`, or add @babel/plugin-transform-modules-commonjs to your Babel config.

tasks/coverage/typescript/tests/cases/conformance/externalModules/exportAssignmentTopLevelClodule.ts
semantic error: Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript
`export = <value>;` is only supported when compiling modules to CommonJS.
Please consider using `export default <value>;`, or add @babel/plugin-transform-modules-commonjs to your Babel config.

tasks/coverage/typescript/tests/cases/conformance/externalModules/exportAssignmentTopLevelEnumdule.ts
semantic error: Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript
`export = <value>;` is only supported when compiling modules to CommonJS.
Please consider using `export default <value>;`, or add @babel/plugin-transform-modules-commonjs to your Babel config.

tasks/coverage/typescript/tests/cases/conformance/externalModules/exportAssignmentTopLevelFundule.ts
semantic error: Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript
`export = <value>;` is only supported when compiling modules to CommonJS.
Please consider using `export default <value>;`, or add @babel/plugin-transform-modules-commonjs to your Babel config.

tasks/coverage/typescript/tests/cases/conformance/externalModules/exportAssignmentTopLevelIdentifier.ts
semantic error: Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript
`export = <value>;` is only supported when compiling modules to CommonJS.
Please consider using `export default <value>;`, or add @babel/plugin-transform-modules-commonjs to your Babel config.

tasks/coverage/typescript/tests/cases/conformance/externalModules/exportDeclaredModule.ts
semantic error: `export = <value>;` is only supported when compiling modules to CommonJS.
Please consider using `export default <value>;`, or add @babel/plugin-transform-modules-commonjs to your Babel config.

tasks/coverage/typescript/tests/cases/conformance/externalModules/exportNonVisibleType.ts
semantic error: `export = <value>;` is only supported when compiling modules to CommonJS.
Please consider using `export default <value>;`, or add @babel/plugin-transform-modules-commonjs to your Babel config.

tasks/coverage/typescript/tests/cases/conformance/externalModules/exportTypeMergedWithExportStarAsNamespace.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["MyType", "Something", "myValue"]
current  scope ScopeId(0): ["Something", "myValue"]

tasks/coverage/typescript/tests/cases/conformance/externalModules/globalAugmentationModuleResolution.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["global"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/conformance/externalModules/importImportOnlyModule.ts
semantic error: `import lib = require(...);` is only supported when compiling modules to CommonJS.
Please consider using `import lib from '...';` alongside Typescript's --allowSyntheticDefaultImports option, or add @babel/plugin-transform-modules-commonjs to your Babel config.

tasks/coverage/typescript/tests/cases/conformance/externalModules/moduleResolutionWithExtensions.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["a"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/conformance/externalModules/moduleScoping.ts
semantic error: `import lib = require(...);` is only supported when compiling modules to CommonJS.
Please consider using `import lib from '...';` alongside Typescript's --allowSyntheticDefaultImports option, or add @babel/plugin-transform-modules-commonjs to your Babel config.

tasks/coverage/typescript/tests/cases/conformance/externalModules/nameDelimitedBySlashes.ts
semantic error: `import lib = require(...);` is only supported when compiling modules to CommonJS.
Please consider using `import lib from '...';` alongside Typescript's --allowSyntheticDefaultImports option, or add @babel/plugin-transform-modules-commonjs to your Babel config.

tasks/coverage/typescript/tests/cases/conformance/externalModules/nameWithFileExtension.ts
semantic error: `import lib = require(...);` is only supported when compiling modules to CommonJS.
Please consider using `import lib from '...';` alongside Typescript's --allowSyntheticDefaultImports option, or add @babel/plugin-transform-modules-commonjs to your Babel config.

tasks/coverage/typescript/tests/cases/conformance/externalModules/nameWithRelativePaths.ts
semantic error: Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript

tasks/coverage/typescript/tests/cases/conformance/externalModules/reexportClassDefinition.ts
semantic error: `export = <value>;` is only supported when compiling modules to CommonJS.
Please consider using `export default <value>;`, or add @babel/plugin-transform-modules-commonjs to your Babel config.

tasks/coverage/typescript/tests/cases/conformance/externalModules/relativePathToDeclarationFile.ts
semantic error: `import lib = require(...);` is only supported when compiling modules to CommonJS.
Please consider using `import lib from '...';` alongside Typescript's --allowSyntheticDefaultImports option, or add @babel/plugin-transform-modules-commonjs to your Babel config.
`import lib = require(...);` is only supported when compiling modules to CommonJS.
Please consider using `import lib from '...';` alongside Typescript's --allowSyntheticDefaultImports option, or add @babel/plugin-transform-modules-commonjs to your Babel config.
`import lib = require(...);` is only supported when compiling modules to CommonJS.
Please consider using `import lib from '...';` alongside Typescript's --allowSyntheticDefaultImports option, or add @babel/plugin-transform-modules-commonjs to your Babel config.

tasks/coverage/typescript/tests/cases/conformance/externalModules/topLevelAmbientModule.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["foo"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/conformance/externalModules/topLevelAwait.1.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["C", "C1", "C2", "C3", "_await", "dec", "x", "y"]
current  scope ScopeId(0): ["C", "C1", "C2", "C3", "x", "y"]
reference Mismatch:
previous reference ReferenceId(11): Some("dec")
current  reference ReferenceId(11): None

tasks/coverage/typescript/tests/cases/conformance/externalModules/topLevelAwait.2.ts
semantic error: Semantic Collector failed after transform
Missing SymbolId: await

tasks/coverage/typescript/tests/cases/conformance/externalModules/topLevelFileModule.ts
semantic error: `import lib = require(...);` is only supported when compiling modules to CommonJS.
Please consider using `import lib from '...';` alongside Typescript's --allowSyntheticDefaultImports option, or add @babel/plugin-transform-modules-commonjs to your Babel config.
`import lib = require(...);` is only supported when compiling modules to CommonJS.
Please consider using `import lib from '...';` alongside Typescript's --allowSyntheticDefaultImports option, or add @babel/plugin-transform-modules-commonjs to your Babel config.

tasks/coverage/typescript/tests/cases/conformance/externalModules/typeAndNamespaceExportMerge.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Drink"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/conformance/externalModules/typeOnly/ambient.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["A", "ns"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/conformance/externalModules/typeOnly/cjsImportInES2015.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["SpecialError", "handleError"]
current  scope ScopeId(0): ["handleError"]

tasks/coverage/typescript/tests/cases/conformance/externalModules/typeOnly/exportDeclaration.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["A", "a"]
current  scope ScopeId(0): ["A"]

tasks/coverage/typescript/tests/cases/conformance/externalModules/typeOnly/exportDeclaration_moduleSpecifier-isolatedModules.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["A"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/conformance/externalModules/typeOnly/implementsClause.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Component"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/conformance/externalModules/typeOnly/importDefaultNamedType.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["type"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/conformance/externalModules/typeOnly/importDefaultNamedType2.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["from"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/conformance/externalModules/typeOnly/importDefaultNamedType3.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["from"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/conformance/externalModules/typeOnly/mergedWithLocalValue.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["A"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/conformance/externalModules/typeOnly/namespaceImportTypeQuery2.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["A"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/conformance/externalModules/typeOnly/nestedNamespace.ts
semantic error: Semantic Collector failed after transform
Missing SymbolId: types
Missing SymbolId: _types
Missing ReferenceId: _types
Missing ReferenceId: A
Missing ReferenceId: types
Missing ReferenceId: types

tasks/coverage/typescript/tests/cases/conformance/externalModules/typeOnly/preserveValueImports.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["D", "b", "c"]
current  scope ScopeId(0): ["b", "c"]

tasks/coverage/typescript/tests/cases/conformance/externalModules/typeOnly/preserveValueImports_errors.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["A"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/conformance/externalModules/typeOnly/typeQuery.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["A", "AConstructor"]
current  scope ScopeId(0): ["AConstructor"]

tasks/coverage/typescript/tests/cases/conformance/externalModules/typeOnlyMerge1.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["A"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/conformance/externalModules/verbatimModuleSyntaxConstEnum.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(1): ["A", "E"]
current  scope ScopeId(1): ["E"]

tasks/coverage/typescript/tests/cases/conformance/externalModules/verbatimModuleSyntaxConstEnumUsage.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(1): ["Foo", "a", "b", "c"]
current  scope ScopeId(1): ["Foo"]

tasks/coverage/typescript/tests/cases/conformance/externalModules/verbatimModuleSyntaxRestrictionsESM.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Typey"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/conformance/functions/strictBindCallApply2.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Foo", "Test", "fb", "fn"]
current  scope ScopeId(0): ["fb", "fn"]

tasks/coverage/typescript/tests/cases/conformance/generators/generatorReturnTypeIndirectReferenceToGlobalType.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["I1", "f1"]
current  scope ScopeId(0): ["f1"]

tasks/coverage/typescript/tests/cases/conformance/generators/generatorYieldContextualType.ts
semantic error: Semantic Collector failed after transform
Missing SymbolId: _Directive
Missing ReferenceId: _Directive
Missing ReferenceId: is
Missing ReferenceId: Directive
Missing ReferenceId: Directive
Missing SymbolId: StepResult
Missing SymbolId: _StepResult
Missing ReferenceId: _StepResult
Missing ReferenceId: StepResult
Missing ReferenceId: StepResult

tasks/coverage/typescript/tests/cases/conformance/importAttributes/importAttributes7.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["a", "f"]
current  scope ScopeId(0): ["f"]

tasks/coverage/typescript/tests/cases/conformance/importAttributes/importAttributes8.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["a"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/conformance/inferFromBindingPattern.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Person", "SelectProps", "SelectResult", "any", "foo", "isAny", "isStringTuple", "john", "nufinspecial", "person", "personAgain", "whatever", "x", "x1", "x2", "x3"]
current  scope ScopeId(0): ["any", "foo", "isAny", "isStringTuple", "john", "nufinspecial", "person", "personAgain", "whatever", "x", "x1", "x2", "x3"]
Bindings Mismatch:
previous scope ScopeId(4): ["T"]
current  scope ScopeId(1): []

tasks/coverage/typescript/tests/cases/conformance/interfaces/declarationMerging/genericAndNonGenericInterfaceWithTheSameName2.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["M", "M2", "N"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/conformance/interfaces/declarationMerging/mergeThreeInterfaces.ts
semantic error: Semantic Collector failed after transform
Missing SymbolId: M
Missing SymbolId: _M
Missing ReferenceId: M
Missing ReferenceId: M

tasks/coverage/typescript/tests/cases/conformance/interfaces/declarationMerging/mergeThreeInterfaces2.ts
semantic error: Semantic Collector failed after transform
Missing SymbolId: M2
Missing SymbolId: _M
Missing ReferenceId: M2
Missing ReferenceId: M2
Missing SymbolId: _M2
Missing ReferenceId: M2
Missing ReferenceId: M2
Missing SymbolId: _M3
Missing SymbolId: M3
Missing SymbolId: _M4
Missing ReferenceId: M3
Missing ReferenceId: M3
Missing ReferenceId: _M3
Missing ReferenceId: _M3
Missing ReferenceId: M2
Missing ReferenceId: M2
Missing SymbolId: _M5
Missing SymbolId: M3
Missing SymbolId: _M6
Missing ReferenceId: M3
Missing ReferenceId: M3
Missing ReferenceId: _M5
Missing ReferenceId: _M5
Missing ReferenceId: M2
Missing ReferenceId: M2
Missing SymbolId: _M7
Missing SymbolId: M3
Missing SymbolId: _M8
Missing ReferenceId: M3
Missing ReferenceId: M3
Missing ReferenceId: _M7
Missing ReferenceId: _M7
Missing ReferenceId: M2
Missing ReferenceId: M2

tasks/coverage/typescript/tests/cases/conformance/interfaces/declarationMerging/mergeTwoInterfaces.ts
semantic error: Semantic Collector failed after transform
Missing SymbolId: M
Missing SymbolId: _M
Missing ReferenceId: M
Missing ReferenceId: M

tasks/coverage/typescript/tests/cases/conformance/interfaces/declarationMerging/mergeTwoInterfaces2.ts
semantic error: Semantic Collector failed after transform
Missing SymbolId: M2
Missing SymbolId: _M
Missing ReferenceId: M2
Missing ReferenceId: M2
Missing SymbolId: _M2
Missing ReferenceId: M2
Missing ReferenceId: M2
Missing SymbolId: _M3
Missing SymbolId: M3
Missing SymbolId: _M4
Missing ReferenceId: M3
Missing ReferenceId: M3
Missing ReferenceId: _M3
Missing ReferenceId: _M3
Missing ReferenceId: M2
Missing ReferenceId: M2
Missing SymbolId: _M5
Missing SymbolId: M3
Missing SymbolId: _M6
Missing ReferenceId: M3
Missing ReferenceId: M3
Missing ReferenceId: _M5
Missing ReferenceId: _M5
Missing ReferenceId: M2
Missing ReferenceId: M2

tasks/coverage/typescript/tests/cases/conformance/interfaces/declarationMerging/mergedInterfacesWithConflictingPropertyNames2.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["A", "M", "M2", "M3"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/conformance/interfaces/declarationMerging/mergedInterfacesWithIndexers.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["A", "a", "r", "r2", "r3"]
current  scope ScopeId(0): ["a", "r", "r2", "r3"]

tasks/coverage/typescript/tests/cases/conformance/interfaces/declarationMerging/mergedInterfacesWithMultipleBases.ts
semantic error: Semantic Collector failed after transform
Missing SymbolId: M
Missing SymbolId: _M
Missing ReferenceId: M
Missing ReferenceId: M

tasks/coverage/typescript/tests/cases/conformance/interfaces/declarationMerging/mergedInterfacesWithMultipleBases2.ts
semantic error: Semantic Collector failed after transform
Missing SymbolId: M
Missing SymbolId: _M
Missing ReferenceId: M
Missing ReferenceId: M

tasks/coverage/typescript/tests/cases/conformance/interfaces/declarationMerging/mergedInterfacesWithMultipleBases3.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["A", "C", "C2", "C3", "C4", "D"]
current  scope ScopeId(0): ["C", "C2", "C3", "C4", "D"]
Bindings Mismatch:
previous scope ScopeId(1): ["T"]
current  scope ScopeId(1): []
Bindings Mismatch:
previous scope ScopeId(2): ["T"]
current  scope ScopeId(2): []
Bindings Mismatch:
previous scope ScopeId(3): ["T"]
current  scope ScopeId(3): []
Bindings Mismatch:
previous scope ScopeId(4): ["T"]
current  scope ScopeId(4): []

tasks/coverage/typescript/tests/cases/conformance/interfaces/declarationMerging/twoMergedInterfacesWithDifferingOverloads.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["A", "B", "C", "D", "b", "c", "d", "r", "r2", "r3"]
current  scope ScopeId(0): ["b", "c", "d", "r", "r2", "r3"]

tasks/coverage/typescript/tests/cases/conformance/interfaces/declarationMerging/twoMergedInterfacesWithDifferingOverloads2.ts
semantic error: Semantic Collector failed after transform
Missing SymbolId: G
Missing SymbolId: _G
Missing ReferenceId: G
Missing ReferenceId: G

tasks/coverage/typescript/tests/cases/conformance/interfaces/interfaceDeclarations/asiPreventsParsingAsInterface03.ts
semantic error: Semantic Collector failed after transform
Missing SymbolId: n
Missing SymbolId: _n
Missing ReferenceId: n
Missing ReferenceId: n

tasks/coverage/typescript/tests/cases/conformance/interfaces/interfaceDeclarations/derivedInterfaceDoesNotHideBaseSignatures.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Base", "Derived"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/conformance/interfaces/interfaceDeclarations/interfaceExtendsObjectIntersection.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["C1", "C2", "C20", "C21", "C22", "C23", "C3", "C4", "C5", "C6", "C7", "Constructor", "EX", "I1", "I10", "I11", "I12", "I13", "I2", "I20", "I21", "I22", "I23", "I3", "I4", "I5", "I6", "I7", "Identifiable", "NX", "T1", "T10", "T11", "T12", "T13", "T2", "T3", "T4", "T5", "T6", "T7"]
current  scope ScopeId(0): ["C1", "C2", "C20", "C21", "C22", "C23", "C3", "C4", "C5", "C6", "C7"]

tasks/coverage/typescript/tests/cases/conformance/interfaces/interfaceDeclarations/interfaceThatHidesBaseProperty.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Base", "Derived"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/conformance/interfaces/interfaceDeclarations/interfaceWithCallAndConstructSignature.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Foo", "f", "r", "r2"]
current  scope ScopeId(0): ["f", "r", "r2"]

tasks/coverage/typescript/tests/cases/conformance/interfaces/interfaceDeclarations/interfaceWithCallSignaturesThatHidesBaseSignature.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Derived", "Foo", "d", "r"]
current  scope ScopeId(0): ["d", "r"]

tasks/coverage/typescript/tests/cases/conformance/interfaces/interfaceDeclarations/interfaceWithCallSignaturesThatHidesBaseSignature2.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Derived", "Foo", "d", "r"]
current  scope ScopeId(0): ["d", "r"]

tasks/coverage/typescript/tests/cases/conformance/interfaces/interfaceDeclarations/interfaceWithConstructSignaturesThatHidesBaseSignature.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Derived", "Foo", "d", "r"]
current  scope ScopeId(0): ["d", "r"]

tasks/coverage/typescript/tests/cases/conformance/interfaces/interfaceDeclarations/interfaceWithConstructSignaturesThatHidesBaseSignature2.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Derived", "Foo", "d", "r"]
current  scope ScopeId(0): ["d", "r"]

tasks/coverage/typescript/tests/cases/conformance/interfaces/interfaceDeclarations/interfaceWithOverloadedCallAndConstructSignatures.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Foo", "f", "r1", "r2", "r3", "r4"]
current  scope ScopeId(0): ["f", "r1", "r2", "r3", "r4"]

tasks/coverage/typescript/tests/cases/conformance/interfaces/interfaceDeclarations/interfaceWithPropertyOfEveryType.ts
semantic error: Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript

tasks/coverage/typescript/tests/cases/conformance/interfaces/interfaceDeclarations/interfaceWithSpecializedCallAndConstructSignatures.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Foo", "f", "r", "r2", "r3", "r4"]
current  scope ScopeId(0): ["f", "r", "r2", "r3", "r4"]

tasks/coverage/typescript/tests/cases/conformance/interfaces/interfacesExtendingClasses/interfaceExtendingClass.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Foo", "I", "f", "i", "r1", "r2", "r3"]
current  scope ScopeId(0): ["Foo", "f", "i", "r1", "r2", "r3"]

tasks/coverage/typescript/tests/cases/conformance/internalModules/DeclarationMerging/AmbientModuleAndNonAmbientClassWithSameNameAndCommonRoot.ts
semantic error: Semantic Collector failed after transform
Missing SymbolId: A
Missing SymbolId: _A
Missing ReferenceId: _A
Missing ReferenceId: Point
Missing ReferenceId: A
Missing ReferenceId: A

tasks/coverage/typescript/tests/cases/conformance/internalModules/DeclarationMerging/ClassAndModuleThatMergeWithStaticFunctionAndNonExportedFunctionThatShareAName.ts
semantic error: Semantic Collector failed after transform
Missing SymbolId: _Point
Missing ReferenceId: Point
Missing ReferenceId: Point
Missing SymbolId: A
Missing SymbolId: _A
Missing ReferenceId: _A
Missing ReferenceId: Point
Missing SymbolId: _Point2
Missing ReferenceId: Point
Missing ReferenceId: Point
Missing ReferenceId: _A
Missing ReferenceId: _A
Missing ReferenceId: A
Missing ReferenceId: A

tasks/coverage/typescript/tests/cases/conformance/internalModules/DeclarationMerging/ClassAndModuleThatMergeWithStaticVariableAndNonExportedVarThatShareAName.ts
semantic error: Semantic Collector failed after transform
Missing SymbolId: _Point
Missing ReferenceId: Point
Missing ReferenceId: Point
Missing SymbolId: A
Missing SymbolId: _A
Missing ReferenceId: _A
Missing ReferenceId: Point
Missing SymbolId: _Point2
Missing ReferenceId: Point
Missing ReferenceId: Point
Missing ReferenceId: _A
Missing ReferenceId: _A
Missing ReferenceId: A
Missing ReferenceId: A

tasks/coverage/typescript/tests/cases/conformance/internalModules/DeclarationMerging/EnumAndModuleWithSameNameAndCommonRoot.ts
semantic error: Semantic Collector failed after transform
Missing SymbolId: _enumdule
Missing ReferenceId: _enumdule
Missing ReferenceId: Point
Missing ReferenceId: enumdule
Missing ReferenceId: enumdule

tasks/coverage/typescript/tests/cases/conformance/internalModules/DeclarationMerging/FunctionAndModuleWithSameNameAndDifferentCommonRoot.ts
semantic error: Semantic Collector failed after transform
Missing SymbolId: A
Missing SymbolId: _A
Missing ReferenceId: _A
Missing ReferenceId: Point
Missing ReferenceId: A
Missing ReferenceId: A

tasks/coverage/typescript/tests/cases/conformance/internalModules/DeclarationMerging/ModuleAndEnumWithSameNameAndCommonRoot.ts
semantic error: Semantic Collector failed after transform
Missing SymbolId: enumdule
Missing SymbolId: _enumdule
Missing ReferenceId: _enumdule
Missing ReferenceId: Point
Missing ReferenceId: enumdule
Missing ReferenceId: enumdule

tasks/coverage/typescript/tests/cases/conformance/internalModules/DeclarationMerging/TwoInternalModulesThatMergeEachWithExportedAndNonExportedClassesOfTheSameName.ts
semantic error: Semantic Collector failed after transform
Missing SymbolId: A
Missing SymbolId: _A
Missing ReferenceId: _A
Missing ReferenceId: Point
Missing ReferenceId: A
Missing ReferenceId: A
Missing SymbolId: _A2
Missing ReferenceId: A
Missing ReferenceId: A
Missing SymbolId: X
Missing SymbolId: _X
Missing SymbolId: Y
Missing SymbolId: _Y
Missing SymbolId: Z
Missing SymbolId: _Z
Missing ReferenceId: _Z
Missing ReferenceId: Line
Missing ReferenceId: Z
Missing ReferenceId: Z
Missing ReferenceId: _Y
Missing ReferenceId: _Y
Missing ReferenceId: Y
Missing ReferenceId: Y
Missing ReferenceId: _X
Missing ReferenceId: _X
Missing ReferenceId: X
Missing ReferenceId: X
Missing SymbolId: _X2
Missing SymbolId: Y
Missing SymbolId: _Y2
Missing SymbolId: Z
Missing SymbolId: _Z2
Missing ReferenceId: Z
Missing ReferenceId: Z
Missing ReferenceId: _Y2
Missing ReferenceId: _Y2
Missing ReferenceId: Y
Missing ReferenceId: Y
Missing ReferenceId: _X2
Missing ReferenceId: _X2
Missing ReferenceId: X
Missing ReferenceId: X

tasks/coverage/typescript/tests/cases/conformance/internalModules/DeclarationMerging/TwoInternalModulesThatMergeEachWithExportedAndNonExportedInterfacesOfTheSameName.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["A", "X", "l", "p"]
current  scope ScopeId(0): ["l", "p"]

tasks/coverage/typescript/tests/cases/conformance/internalModules/DeclarationMerging/TwoInternalModulesThatMergeEachWithExportedAndNonExportedLocalVarsOfTheSameName.ts
semantic error: Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript

tasks/coverage/typescript/tests/cases/conformance/internalModules/DeclarationMerging/TwoInternalModulesThatMergeEachWithExportedInterfacesOfTheSameName.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["A", "X", "l", "p"]
current  scope ScopeId(0): ["l", "p"]

tasks/coverage/typescript/tests/cases/conformance/internalModules/DeclarationMerging/TwoInternalModulesThatMergeEachWithExportedModulesOfTheSameName.ts
semantic error: Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript
Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript

tasks/coverage/typescript/tests/cases/conformance/internalModules/DeclarationMerging/TwoInternalModulesWithTheSameNameAndDifferentCommonRoot.ts
semantic error: Semantic Collector failed after transform
Missing SymbolId: Root
Missing SymbolId: _Root
Missing SymbolId: A
Missing SymbolId: _A
Missing SymbolId: Utils
Missing SymbolId: _Utils
Missing ReferenceId: _Utils
Missing ReferenceId: mirror
Missing ReferenceId: Utils
Missing ReferenceId: Utils
Missing ReferenceId: _A
Missing ReferenceId: _A
Missing ReferenceId: A
Missing ReferenceId: A
Missing ReferenceId: _Root
Missing ReferenceId: _Root
Missing ReferenceId: Root
Missing ReferenceId: Root

tasks/coverage/typescript/tests/cases/conformance/internalModules/DeclarationMerging/TwoInternalModulesWithTheSameNameAndSameCommonRoot.ts
semantic error: Semantic Collector failed after transform
Missing SymbolId: A
Missing SymbolId: _A
Missing SymbolId: Utils
Missing SymbolId: _Utils
Missing ReferenceId: _Utils
Missing ReferenceId: mirror
Missing ReferenceId: Utils
Missing ReferenceId: Utils
Missing ReferenceId: _A
Missing ReferenceId: _A
Missing ReferenceId: A
Missing ReferenceId: A

tasks/coverage/typescript/tests/cases/conformance/internalModules/codeGeneration/exportCodeGen.ts
semantic error: Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript
Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript

tasks/coverage/typescript/tests/cases/conformance/internalModules/codeGeneration/importStatements.ts
semantic error: Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript

tasks/coverage/typescript/tests/cases/conformance/internalModules/codeGeneration/nameCollision.ts
semantic error: Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript

tasks/coverage/typescript/tests/cases/conformance/internalModules/exportDeclarations/ExportClassWhichExtendsInterfaceWithInaccessibleType.ts
semantic error: Semantic Collector failed after transform
Missing SymbolId: A
Missing SymbolId: _A
Missing ReferenceId: _A
Missing ReferenceId: Point2d
Missing ReferenceId: A
Missing ReferenceId: A

tasks/coverage/typescript/tests/cases/conformance/internalModules/exportDeclarations/ExportClassWithAccessibleTypesInTypeParameterConstraintsClassHeritageListMemberTypeAnnotations.ts
semantic error: Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript
Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript

tasks/coverage/typescript/tests/cases/conformance/internalModules/exportDeclarations/ExportClassWithInaccessibleTypeInIndexerTypeAnnotations.ts
semantic error: Semantic Collector failed after transform
Missing SymbolId: A
Missing SymbolId: _A
Missing ReferenceId: _A
Missing ReferenceId: points
Missing ReferenceId: A
Missing ReferenceId: A

tasks/coverage/typescript/tests/cases/conformance/internalModules/exportDeclarations/ExportClassWithInaccessibleTypeInTypeParameterConstraint.ts
semantic error: Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript
Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript

tasks/coverage/typescript/tests/cases/conformance/internalModules/exportDeclarations/ExportFunctionWithAccessibleTypesInParameterAndReturnTypeAnnotation.ts
semantic error: Semantic Collector failed after transform
Missing SymbolId: A
Missing SymbolId: _A
Missing ReferenceId: _A
Missing ReferenceId: Point
Missing ReferenceId: _A
Missing ReferenceId: Line
Missing ReferenceId: _A
Missing ReferenceId: fromOrigin
Missing ReferenceId: A
Missing ReferenceId: A

tasks/coverage/typescript/tests/cases/conformance/internalModules/exportDeclarations/ExportFunctionWithInaccessibleTypesInParameterTypeAnnotation.ts
semantic error: Semantic Collector failed after transform
Missing SymbolId: A
Missing SymbolId: _A
Missing ReferenceId: _A
Missing ReferenceId: Line
Missing ReferenceId: _A
Missing ReferenceId: fromOrigin
Missing ReferenceId: A
Missing ReferenceId: A

tasks/coverage/typescript/tests/cases/conformance/internalModules/exportDeclarations/ExportFunctionWithInaccessibleTypesInReturnTypeAnnotation.ts
semantic error: Semantic Collector failed after transform
Missing SymbolId: A
Missing SymbolId: _A
Missing ReferenceId: _A
Missing ReferenceId: Point
Missing ReferenceId: _A
Missing ReferenceId: fromOrigin
Missing ReferenceId: A
Missing ReferenceId: A

tasks/coverage/typescript/tests/cases/conformance/internalModules/exportDeclarations/ExportInterfaceWithAccessibleTypesInTypeParameterConstraintsClassHeritageListMemberTypeAnnotations.ts
semantic error: Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript
Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript

tasks/coverage/typescript/tests/cases/conformance/internalModules/exportDeclarations/ExportInterfaceWithInaccessibleTypeInIndexerTypeAnnotations.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["A"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/conformance/internalModules/exportDeclarations/ExportInterfaceWithInaccessibleTypeInTypeParameterConstraint.ts
semantic error: Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript
Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript

tasks/coverage/typescript/tests/cases/conformance/internalModules/exportDeclarations/ExportModuleWithAccessibleTypesOnItsExportedMembers.ts
semantic error: Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript

tasks/coverage/typescript/tests/cases/conformance/internalModules/exportDeclarations/ExportObjectLiteralAndObjectTypeLiteralWithAccessibleTypesInMemberTypeAnnotations.ts
semantic error: Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript
Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript

tasks/coverage/typescript/tests/cases/conformance/internalModules/exportDeclarations/ExportObjectLiteralAndObjectTypeLiteralWithAccessibleTypesInNestedMemberTypeAnnotations.ts
semantic error: Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript

tasks/coverage/typescript/tests/cases/conformance/internalModules/exportDeclarations/ExportVariableOfGenericTypeWithInaccessibleTypeAsTypeArgument.ts
semantic error: Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript
Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript

tasks/coverage/typescript/tests/cases/conformance/internalModules/exportDeclarations/ExportVariableWithAccessibleTypeInTypeAnnotation.ts
semantic error: Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript

tasks/coverage/typescript/tests/cases/conformance/internalModules/exportDeclarations/ExportVariableWithInaccessibleTypeInTypeAnnotation.ts
semantic error: Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript
Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript

tasks/coverage/typescript/tests/cases/conformance/internalModules/importDeclarations/exportImportAlias.ts
semantic error: Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript
Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript

tasks/coverage/typescript/tests/cases/conformance/internalModules/importDeclarations/importAliasIdentifiers.ts
semantic error: Semantic Collector failed after transform
Missing SymbolId: moduleA
Missing SymbolId: _moduleA
Missing ReferenceId: _moduleA
Missing ReferenceId: Point
Missing ReferenceId: moduleA
Missing ReferenceId: moduleA
Missing SymbolId: alias
Missing SymbolId: _clodule
Missing ReferenceId: clodule
Missing ReferenceId: clodule
Missing SymbolId: clolias
Missing SymbolId: _fundule
Missing ReferenceId: fundule
Missing ReferenceId: fundule
Missing SymbolId: funlias

tasks/coverage/typescript/tests/cases/conformance/internalModules/moduleBody/moduleWithStatementsOfEveryKind.ts
semantic error: Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript
Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript
Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript
Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript

tasks/coverage/typescript/tests/cases/conformance/internalModules/moduleDeclarations/asiPreventsParsingAsNamespace03.ts
semantic error: Semantic Collector failed after transform
Missing SymbolId: container
Missing SymbolId: _container
Missing ReferenceId: container
Missing ReferenceId: container

tasks/coverage/typescript/tests/cases/conformance/internalModules/moduleDeclarations/asiPreventsParsingAsNamespace05.ts
semantic error: Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript

tasks/coverage/typescript/tests/cases/conformance/internalModules/moduleDeclarations/instantiatedModule.ts
semantic error: Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript

tasks/coverage/typescript/tests/cases/conformance/internalModules/moduleDeclarations/nestedModules.ts
semantic error: Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript

tasks/coverage/typescript/tests/cases/conformance/internalModules/moduleDeclarations/nonInstantiatedModule.ts
semantic error: Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript

tasks/coverage/typescript/tests/cases/conformance/internalModules/moduleDeclarations/reExportAliasMakesInstantiated.ts
semantic error: Semantic Collector failed after transform
Missing SymbolId: test1

tasks/coverage/typescript/tests/cases/conformance/jsdoc/constructorTagOnClassConstructor.ts
semantic error: Cannot use export statement outside a module
Cannot use export statement outside a module

tasks/coverage/typescript/tests/cases/conformance/jsdoc/importTag1.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Foo"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/conformance/jsdoc/importTag2.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Foo"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/conformance/jsdoc/importTag3.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Foo"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/conformance/jsdoc/importTag6.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["A", "B"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/conformance/jsdoc/importTag7.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["A", "B"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/conformance/jsdoc/importTag8.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["A", "B"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/conformance/jsdoc/importTag9.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["A", "B"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/conformance/jsdoc/inferThis.ts
semantic error: Cannot use export statement outside a module

tasks/coverage/typescript/tests/cases/conformance/jsdoc/jsdocAugments_qualifiedName.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["B", "a"]
current  scope ScopeId(0): ["B"]

tasks/coverage/typescript/tests/cases/conformance/jsdoc/jsdocLinkTag1.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["A"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/conformance/jsdoc/jsdocLinkTag2.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["A", "B"]
current  scope ScopeId(0): ["B"]

tasks/coverage/typescript/tests/cases/conformance/jsdoc/jsdocLinkTag3.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["A"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/conformance/jsdoc/jsdocLinkTag4.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["A"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/conformance/jsdoc/jsdocLinkTag5.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["A"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/conformance/jsdoc/jsdocParseMatchingBackticks.ts
semantic error: Cannot use export statement outside a module

tasks/coverage/typescript/tests/cases/conformance/jsdoc/jsdocTwoLineTypedef.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["LoadCallback"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/conformance/jsdoc/overloadTag3.ts
semantic error: Cannot use export statement outside a module

tasks/coverage/typescript/tests/cases/conformance/jsdoc/typeParameterExtendsUnionConstraintDistributed.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["A", "B", "f", "f2"]
current  scope ScopeId(0): ["f", "f2"]
Bindings Mismatch:
previous scope ScopeId(2): ["T", "a"]
current  scope ScopeId(1): ["a"]
Bindings Mismatch:
previous scope ScopeId(4): ["T", "U", "ab"]
current  scope ScopeId(2): ["ab"]

tasks/coverage/typescript/tests/cases/conformance/jsx/checkJsxChildrenProperty1.tsx
semantic error: Semantic Collector failed after transform
Missing SymbolId: React
Missing ReferenceId: require

tasks/coverage/typescript/tests/cases/conformance/jsx/checkJsxChildrenProperty10.tsx
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Button", "JSX", "_jsxFileName", "_reactJsxRuntime", "k1", "k2", "k3", "k4"]
current  scope ScopeId(0): ["Button", "_jsxFileName", "_reactJsxRuntime", "k1", "k2", "k3", "k4"]

tasks/coverage/typescript/tests/cases/conformance/jsx/checkJsxChildrenProperty11.tsx
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Button", "JSX", "_jsxFileName", "_reactJsxRuntime", "k1", "k2", "k3", "k4"]
current  scope ScopeId(0): ["Button", "_jsxFileName", "_reactJsxRuntime", "k1", "k2", "k3", "k4"]

tasks/coverage/typescript/tests/cases/conformance/jsx/checkJsxChildrenProperty12.tsx
semantic error: Semantic Collector failed after transform
Missing SymbolId: React
Missing ReferenceId: require

tasks/coverage/typescript/tests/cases/conformance/jsx/checkJsxChildrenProperty16.tsx
semantic error: Semantic Collector failed after transform
Missing SymbolId: React
Missing ReferenceId: require

tasks/coverage/typescript/tests/cases/conformance/jsx/checkJsxChildrenProperty3.tsx
semantic error: Semantic Collector failed after transform
Missing SymbolId: React
Missing ReferenceId: require

tasks/coverage/typescript/tests/cases/conformance/jsx/checkJsxChildrenProperty6.tsx
semantic error: Semantic Collector failed after transform
Missing SymbolId: React
Missing ReferenceId: require

tasks/coverage/typescript/tests/cases/conformance/jsx/checkJsxChildrenProperty8.tsx
semantic error: Semantic Collector failed after transform
Missing SymbolId: React
Missing ReferenceId: require

tasks/coverage/typescript/tests/cases/conformance/jsx/checkJsxChildrenProperty9.tsx
semantic error: Semantic Collector failed after transform
Missing SymbolId: React
Missing ReferenceId: require

tasks/coverage/typescript/tests/cases/conformance/jsx/checkJsxIntersectionElementPropsType.tsx
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["C", "JSX", "_jsxFileName", "_reactJsxRuntime", "x", "y"]
current  scope ScopeId(0): ["C", "_jsxFileName", "_reactJsxRuntime", "x", "y"]
Bindings Mismatch:
previous scope ScopeId(5): ["T"]
current  scope ScopeId(1): []

tasks/coverage/typescript/tests/cases/conformance/jsx/checkJsxSubtleSkipContextSensitiveBug.tsx
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["AsyncLoader", "AsyncLoaderProps", "ErrorResult", "React", "_jsxFileName", "load", "loader"]
current  scope ScopeId(0): ["AsyncLoader", "React", "_jsxFileName", "load", "loader"]
Bindings Mismatch:
previous scope ScopeId(3): ["TResult"]
current  scope ScopeId(1): []

tasks/coverage/typescript/tests/cases/conformance/jsx/checkJsxUnionSFXContextualTypeInferredCorrectly.tsx
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["ComponentWithUnion", "HereIsTheError", "PM", "PS", "React", "_jsxFileName"]
current  scope ScopeId(0): ["ComponentWithUnion", "HereIsTheError", "React", "_jsxFileName"]

tasks/coverage/typescript/tests/cases/conformance/jsx/commentEmittingInPreserveJsx1.tsx
semantic error: Semantic Collector failed after transform
Missing SymbolId: React
Missing ReferenceId: require

tasks/coverage/typescript/tests/cases/conformance/jsx/inline/inlineJsxAndJsxFragPragmaOverridesCompilerOptions.tsx
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Fragment", "_jsxFileName", "createElement"]
current  scope ScopeId(0): ["_jsxFileName"]

tasks/coverage/typescript/tests/cases/conformance/jsx/inline/inlineJsxFactoryOverridesCompilerOption.tsx
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["_jsxFileName", "p"]
current  scope ScopeId(0): ["_jsxFileName"]

tasks/coverage/typescript/tests/cases/conformance/jsx/jsxParsingError4.tsx
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["JSX", "React", "_jsxFileName", "a", "b"]
current  scope ScopeId(0): ["_jsxFileName", "a", "b"]
reference Mismatch:
previous reference ReferenceId(1): Some("React")
current  reference ReferenceId(0): None
reference Mismatch:
previous reference ReferenceId(3): Some("React")
current  reference ReferenceId(2): None

tasks/coverage/typescript/tests/cases/conformance/jsx/jsxReactTestSuite.tsx
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Child", "Component", "Composite", "Composite2", "Namespace", "React", "_jsxFileName", "_reactJsxRuntime", "bar", "foo", "hasOwnProperty", "x", "y", "z"]
current  scope ScopeId(0): ["_jsxFileName", "_reactJsxRuntime", "x"]
reference Mismatch:
previous reference ReferenceId(44): Some("Component")
current  reference ReferenceId(11): None
reference Mismatch:
previous reference ReferenceId(2): Some("foo")
current  reference ReferenceId(12): None
reference Mismatch:
previous reference ReferenceId(3): Some("bar")
current  reference ReferenceId(15): None
reference Mismatch:
previous reference ReferenceId(51): Some("Composite")
current  reference ReferenceId(21): None
reference Mismatch:
previous reference ReferenceId(57): Some("Composite")
current  reference ReferenceId(24): None
reference Mismatch:
previous reference ReferenceId(54): Some("Composite2")
current  reference ReferenceId(26): None
reference Mismatch:
previous reference ReferenceId(78): Some("Component")
current  reference ReferenceId(48): None
reference Mismatch:
previous reference ReferenceId(81): Some("Namespace")
current  reference ReferenceId(51): None
reference Mismatch:
previous reference ReferenceId(84): Some("Namespace")
current  reference ReferenceId(54): None
reference Mismatch:
previous reference ReferenceId(87): Some("Component")
current  reference ReferenceId(57): None
reference Mismatch:
previous reference ReferenceId(90): Some("Component")
current  reference ReferenceId(61): None
reference Mismatch:
previous reference ReferenceId(95): Some("Component")
current  reference ReferenceId(66): None
reference Mismatch:
previous reference ReferenceId(16): Some("y")
current  reference ReferenceId(67): None
reference Mismatch:
previous reference ReferenceId(100): Some("Component")
current  reference ReferenceId(72): None
reference Mismatch:
previous reference ReferenceId(103): Some("Component")
current  reference ReferenceId(76): None
reference Mismatch:
previous reference ReferenceId(106): Some("Component")
current  reference ReferenceId(80): None
reference Mismatch:
previous reference ReferenceId(109): Some("Component")
current  reference ReferenceId(84): None
reference Mismatch:
previous reference ReferenceId(24): Some("y")
current  reference ReferenceId(85): None
reference Mismatch:
previous reference ReferenceId(115): Some("Component")
current  reference ReferenceId(88): None
reference Mismatch:
previous reference ReferenceId(26): Some("z")
current  reference ReferenceId(89): None
reference Mismatch:
previous reference ReferenceId(27): Some("z")
current  reference ReferenceId(90): None
reference Mismatch:
previous reference ReferenceId(112): Some("Child")
current  reference ReferenceId(92): None
reference Mismatch:
previous reference ReferenceId(118): Some("Component")
current  reference ReferenceId(96): None
reference Mismatch:
previous reference ReferenceId(31): Some("z")
current  reference ReferenceId(97): None
reference Mismatch:
previous reference ReferenceId(32): Some("z")
current  reference ReferenceId(98): None

tasks/coverage/typescript/tests/cases/conformance/jsx/jsxs/jsxJsxsCjsTransformNestedSelfClosingChild.tsx
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["React", "_jsxFileName", "_reactJsxRuntime"]
current  scope ScopeId(0): ["_jsxFileName", "_reactJsxRuntime"]

tasks/coverage/typescript/tests/cases/conformance/jsx/tsxAttributeResolution.tsx
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["JSX"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/conformance/jsx/tsxAttributeResolution16.tsx
semantic error: Semantic Collector failed after transform
Missing SymbolId: React
Missing ReferenceId: require

tasks/coverage/typescript/tests/cases/conformance/jsx/tsxAttributeResolution8.tsx
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["JSX", "_jsxFileName", "_reactJsxRuntime", "x"]
current  scope ScopeId(0): ["_jsxFileName", "_reactJsxRuntime", "x"]

tasks/coverage/typescript/tests/cases/conformance/jsx/tsxCorrectlyParseLessThanComparison1.tsx
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["JSX", "React", "ShortDetails", "_jsxFileName"]
current  scope ScopeId(0): ["ShortDetails", "_jsxFileName"]
reference Mismatch:
previous reference ReferenceId(5): Some("React")
current  reference ReferenceId(1): None

tasks/coverage/typescript/tests/cases/conformance/jsx/tsxDefaultAttributesResolution1.tsx
semantic error: Semantic Collector failed after transform
Missing SymbolId: React
Missing ReferenceId: require

tasks/coverage/typescript/tests/cases/conformance/jsx/tsxDefaultAttributesResolution2.tsx
semantic error: Semantic Collector failed after transform
Missing SymbolId: React
Missing ReferenceId: require

tasks/coverage/typescript/tests/cases/conformance/jsx/tsxDynamicTagName4.tsx
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["CustomTag", "JSX", "_jsxFileName", "_reactJsxRuntime"]
current  scope ScopeId(0): ["CustomTag", "_jsxFileName", "_reactJsxRuntime"]

tasks/coverage/typescript/tests/cases/conformance/jsx/tsxDynamicTagName6.tsx
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["JSX", "_jsxFileName", "_reactJsxRuntime", "foo", "t"]
current  scope ScopeId(0): ["_jsxFileName", "_reactJsxRuntime", "foo", "t"]

tasks/coverage/typescript/tests/cases/conformance/jsx/tsxElementResolution.tsx
semantic error: Semantic Collector failed after transform
Missing SymbolId: Dotted
Missing SymbolId: _Dotted
Missing ReferenceId: _Dotted
Missing ReferenceId: Name
Missing ReferenceId: Dotted
Missing ReferenceId: Dotted

tasks/coverage/typescript/tests/cases/conformance/jsx/tsxElementResolution13.tsx
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["JSX", "Obj1", "_jsxFileName", "_reactJsxRuntime", "obj1"]
current  scope ScopeId(0): ["_jsxFileName", "_reactJsxRuntime", "obj1"]

tasks/coverage/typescript/tests/cases/conformance/jsx/tsxElementResolution14.tsx
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["JSX", "Obj1", "_jsxFileName", "_reactJsxRuntime", "obj1"]
current  scope ScopeId(0): ["_jsxFileName", "_reactJsxRuntime", "obj1"]

tasks/coverage/typescript/tests/cases/conformance/jsx/tsxElementResolution17.tsx
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["JSX", "elements1", "elements2"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/conformance/jsx/tsxElementResolution19.tsx
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["JSX", "MyClass"]
current  scope ScopeId(0): ["MyClass"]

tasks/coverage/typescript/tests/cases/conformance/jsx/tsxElementResolution2.tsx
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["JSX", "_jsxFileName", "_reactJsxRuntime"]
current  scope ScopeId(0): ["_jsxFileName", "_reactJsxRuntime"]

tasks/coverage/typescript/tests/cases/conformance/jsx/tsxElementResolution5.tsx
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["JSX", "_jsxFileName", "_reactJsxRuntime"]
current  scope ScopeId(0): ["_jsxFileName", "_reactJsxRuntime"]

tasks/coverage/typescript/tests/cases/conformance/jsx/tsxEmit1.tsx
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["JSX", "SomeClass", "_jsxFileName", "_reactJsxRuntime", "openClosed1", "openClosed2", "openClosed3", "openClosed4", "openClosed5", "p", "selfClosed1", "selfClosed2", "selfClosed3", "selfClosed4", "selfClosed5", "selfClosed6", "selfClosed7", "whitespace1", "whitespace2", "whitespace3"]
current  scope ScopeId(0): ["SomeClass", "_jsxFileName", "_reactJsxRuntime", "openClosed1", "openClosed2", "openClosed3", "openClosed4", "openClosed5", "p", "selfClosed1", "selfClosed2", "selfClosed3", "selfClosed4", "selfClosed5", "selfClosed6", "selfClosed7", "whitespace1", "whitespace2", "whitespace3"]

tasks/coverage/typescript/tests/cases/conformance/jsx/tsxEmit2.tsx
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["JSX", "_jsxFileName", "_reactJsxRuntime", "p1", "p2", "p3", "spreads1", "spreads2", "spreads3", "spreads4", "spreads5"]
current  scope ScopeId(0): ["_jsxFileName", "_reactJsxRuntime", "p1", "p2", "p3", "spreads1", "spreads2", "spreads3", "spreads4", "spreads5"]

tasks/coverage/typescript/tests/cases/conformance/jsx/tsxEmitSpreadAttribute.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["React", "T1", "T10", "T11", "T2", "T3", "T4", "T5", "T6", "T7", "T8", "T9", "__proto__", "_jsxFileName"]
current  scope ScopeId(0): ["T1", "T10", "T11", "T2", "T3", "T4", "T5", "T6", "T7", "T8", "T9", "_jsxFileName"]
reference Mismatch:
previous reference ReferenceId(18): Some("React")
current  reference ReferenceId(0): None
reference Mismatch:
previous reference ReferenceId(20): Some("React")
current  reference ReferenceId(3): None
reference Mismatch:
previous reference ReferenceId(22): Some("React")
current  reference ReferenceId(7): None
reference Mismatch:
previous reference ReferenceId(24): Some("React")
current  reference ReferenceId(11): None
reference Mismatch:
previous reference ReferenceId(26): Some("React")
current  reference ReferenceId(15): None
reference Mismatch:
previous reference ReferenceId(28): Some("React")
current  reference ReferenceId(21): None
reference Mismatch:
previous reference ReferenceId(30): Some("React")
current  reference ReferenceId(27): None
reference Mismatch:
previous reference ReferenceId(32): Some("React")
current  reference ReferenceId(29): None
reference Mismatch:
previous reference ReferenceId(34): Some("React")
current  reference ReferenceId(31): None
reference Mismatch:
previous reference ReferenceId(15): Some("__proto__")
current  reference ReferenceId(32): None
reference Mismatch:
previous reference ReferenceId(36): Some("React")
current  reference ReferenceId(34): None
reference Mismatch:
previous reference ReferenceId(38): Some("React")
current  reference ReferenceId(36): None
reference Mismatch:
previous reference ReferenceId(16): Some("__proto__")
current  reference ReferenceId(37): None

tasks/coverage/typescript/tests/cases/conformance/jsx/tsxExternalModuleEmit2.tsx
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Foo", "Main", "React", "_jsxFileName"]
current  scope ScopeId(0): ["Main", "_jsxFileName"]
reference Mismatch:
previous reference ReferenceId(8): Some("React")
current  reference ReferenceId(0): None
reference Mismatch:
previous reference ReferenceId(7): Some("Foo")
current  reference ReferenceId(1): None
reference Mismatch:
previous reference ReferenceId(11): Some("React")
current  reference ReferenceId(4): None
reference Mismatch:
previous reference ReferenceId(10): Some("Foo")
current  reference ReferenceId(5): None

tasks/coverage/typescript/tests/cases/conformance/jsx/tsxFragmentPreserveEmit.tsx
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["JSX", "React", "_jsxFileName", "_reactJsxRuntime"]
current  scope ScopeId(0): ["_jsxFileName", "_reactJsxRuntime"]

tasks/coverage/typescript/tests/cases/conformance/jsx/tsxFragmentReactEmit.tsx
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["JSX", "React", "_jsxFileName"]
current  scope ScopeId(0): ["_jsxFileName"]
reference Mismatch:
previous reference ReferenceId(1): Some("React")
current  reference ReferenceId(0): None
reference Mismatch:
previous reference ReferenceId(0): Some("React")
current  reference ReferenceId(1): None
reference Mismatch:
previous reference ReferenceId(3): Some("React")
current  reference ReferenceId(2): None
reference Mismatch:
previous reference ReferenceId(2): Some("React")
current  reference ReferenceId(3): None
reference Mismatch:
previous reference ReferenceId(5): Some("React")
current  reference ReferenceId(4): None
reference Mismatch:
previous reference ReferenceId(4): Some("React")
current  reference ReferenceId(5): None
reference Mismatch:
previous reference ReferenceId(7): Some("React")
current  reference ReferenceId(6): None
reference Mismatch:
previous reference ReferenceId(6): Some("React")
current  reference ReferenceId(7): None
reference Mismatch:
previous reference ReferenceId(13): Some("React")
current  reference ReferenceId(8): None
reference Mismatch:
previous reference ReferenceId(8): Some("React")
current  reference ReferenceId(9): None
reference Mismatch:
previous reference ReferenceId(10): Some("React")
current  reference ReferenceId(10): None
reference Mismatch:
previous reference ReferenceId(12): Some("React")
current  reference ReferenceId(12): None
reference Mismatch:
previous reference ReferenceId(25): Some("React")
current  reference ReferenceId(14): None
reference Mismatch:
previous reference ReferenceId(14): Some("React")
current  reference ReferenceId(15): None
reference Mismatch:
previous reference ReferenceId(16): Some("React")
current  reference ReferenceId(16): None
reference Mismatch:
previous reference ReferenceId(22): Some("React")
current  reference ReferenceId(18): None
reference Mismatch:
previous reference ReferenceId(17): Some("React")
current  reference ReferenceId(19): None
reference Mismatch:
previous reference ReferenceId(19): Some("React")
current  reference ReferenceId(20): None
reference Mismatch:
previous reference ReferenceId(21): Some("React")
current  reference ReferenceId(22): None
reference Mismatch:
previous reference ReferenceId(24): Some("React")
current  reference ReferenceId(24): None
reference Mismatch:
previous reference ReferenceId(27): Some("React")
current  reference ReferenceId(26): None
reference Mismatch:
previous reference ReferenceId(26): Some("React")
current  reference ReferenceId(27): None

tasks/coverage/typescript/tests/cases/conformance/jsx/tsxGenericAttributesType1.tsx
semantic error: Semantic Collector failed after transform
Missing SymbolId: React
Missing ReferenceId: require

tasks/coverage/typescript/tests/cases/conformance/jsx/tsxGenericAttributesType2.tsx
semantic error: Semantic Collector failed after transform
Missing SymbolId: React
Missing ReferenceId: require

tasks/coverage/typescript/tests/cases/conformance/jsx/tsxGenericAttributesType3.tsx
semantic error: Semantic Collector failed after transform
Missing SymbolId: React
Missing ReferenceId: require

tasks/coverage/typescript/tests/cases/conformance/jsx/tsxGenericAttributesType4.tsx
semantic error: Semantic Collector failed after transform
Missing SymbolId: React
Missing ReferenceId: require

tasks/coverage/typescript/tests/cases/conformance/jsx/tsxGenericAttributesType5.tsx
semantic error: Semantic Collector failed after transform
Missing SymbolId: React
Missing ReferenceId: require

tasks/coverage/typescript/tests/cases/conformance/jsx/tsxGenericAttributesType6.tsx
semantic error: Semantic Collector failed after transform
Missing SymbolId: React
Missing ReferenceId: require

tasks/coverage/typescript/tests/cases/conformance/jsx/tsxGenericAttributesType7.tsx
semantic error: Semantic Collector failed after transform
Missing SymbolId: React
Missing ReferenceId: require

tasks/coverage/typescript/tests/cases/conformance/jsx/tsxGenericAttributesType8.tsx
semantic error: Semantic Collector failed after transform
Missing SymbolId: React
Missing ReferenceId: require

tasks/coverage/typescript/tests/cases/conformance/jsx/tsxGenericAttributesType9.tsx
semantic error: Semantic Collector failed after transform
Missing SymbolId: React
Missing ReferenceId: require

tasks/coverage/typescript/tests/cases/conformance/jsx/tsxInArrowFunction.tsx
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["JSX", "_jsxFileName", "_reactJsxRuntime"]
current  scope ScopeId(0): ["_jsxFileName", "_reactJsxRuntime"]

tasks/coverage/typescript/tests/cases/conformance/jsx/tsxNamespacedAttributeName1.tsx
semantic error: Namespace tags are not supported by default. React's JSX doesn't support namespace tags. You can set `throwIfNamespace: false` to bypass this warning.
Namespace tags are not supported by default. React's JSX doesn't support namespace tags. You can set `throwIfNamespace: false` to bypass this warning.

tasks/coverage/typescript/tests/cases/conformance/jsx/tsxNamespacedAttributeName2.tsx
semantic error: Namespace tags are not supported by default. React's JSX doesn't support namespace tags. You can set `throwIfNamespace: false` to bypass this warning.
Namespace tags are not supported by default. React's JSX doesn't support namespace tags. You can set `throwIfNamespace: false` to bypass this warning.

tasks/coverage/typescript/tests/cases/conformance/jsx/tsxNamespacedTagName1.tsx
semantic error: Namespace tags are not supported by default. React's JSX doesn't support namespace tags. You can set `throwIfNamespace: false` to bypass this warning.
Namespace tags are not supported by default. React's JSX doesn't support namespace tags. You can set `throwIfNamespace: false` to bypass this warning.
Namespace tags are not supported by default. React's JSX doesn't support namespace tags. You can set `throwIfNamespace: false` to bypass this warning.
Namespace tags are not supported by default. React's JSX doesn't support namespace tags. You can set `throwIfNamespace: false` to bypass this warning.

tasks/coverage/typescript/tests/cases/conformance/jsx/tsxOpeningClosingNames.tsx
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["A", "JSX", "_jsxFileName", "_reactJsxRuntime"]
current  scope ScopeId(0): ["_jsxFileName", "_reactJsxRuntime"]
reference Mismatch:
previous reference ReferenceId(2): Some("A")
current  reference ReferenceId(2): None

tasks/coverage/typescript/tests/cases/conformance/jsx/tsxParseTests1.tsx
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["JSX", "_jsxFileName", "_reactJsxRuntime", "x"]
current  scope ScopeId(0): ["_jsxFileName", "_reactJsxRuntime", "x"]

tasks/coverage/typescript/tests/cases/conformance/jsx/tsxParseTests2.tsx
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["JSX", "_jsxFileName", "_reactJsxRuntime", "x"]
current  scope ScopeId(0): ["_jsxFileName", "_reactJsxRuntime", "x"]

tasks/coverage/typescript/tests/cases/conformance/jsx/tsxPreserveEmit1.tsx
semantic error: Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript
`import lib = require(...);` is only supported when compiling modules to CommonJS.
Please consider using `import lib from '...';` alongside Typescript's --allowSyntheticDefaultImports option, or add @babel/plugin-transform-modules-commonjs to your Babel config.
`import lib = require(...);` is only supported when compiling modules to CommonJS.
Please consider using `import lib from '...';` alongside Typescript's --allowSyntheticDefaultImports option, or add @babel/plugin-transform-modules-commonjs to your Babel config.

tasks/coverage/typescript/tests/cases/conformance/jsx/tsxPreserveEmit3.tsx
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["JSX"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/conformance/jsx/tsxReactComponentWithDefaultTypeParameter1.tsx
semantic error: Semantic Collector failed after transform
Missing SymbolId: React
Missing ReferenceId: require

tasks/coverage/typescript/tests/cases/conformance/jsx/tsxReactComponentWithDefaultTypeParameter2.tsx
semantic error: Semantic Collector failed after transform
Missing SymbolId: React
Missing ReferenceId: require

tasks/coverage/typescript/tests/cases/conformance/jsx/tsxReactEmit1.tsx
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["JSX", "React", "SomeClass", "_jsxFileName", "openClosed1", "openClosed2", "openClosed3", "openClosed4", "openClosed5", "p", "selfClosed1", "selfClosed2", "selfClosed3", "selfClosed4", "selfClosed5", "selfClosed6", "selfClosed7", "whitespace1", "whitespace2", "whitespace3"]
current  scope ScopeId(0): ["SomeClass", "_jsxFileName", "openClosed1", "openClosed2", "openClosed3", "openClosed4", "openClosed5", "p", "selfClosed1", "selfClosed2", "selfClosed3", "selfClosed4", "selfClosed5", "selfClosed6", "selfClosed7", "whitespace1", "whitespace2", "whitespace3"]
reference Mismatch:
previous reference ReferenceId(17): Some("React")
current  reference ReferenceId(0): None
reference Mismatch:
previous reference ReferenceId(19): Some("React")
current  reference ReferenceId(2): None
reference Mismatch:
previous reference ReferenceId(21): Some("React")
current  reference ReferenceId(4): None
reference Mismatch:
previous reference ReferenceId(23): Some("React")
current  reference ReferenceId(6): None
reference Mismatch:
previous reference ReferenceId(25): Some("React")
current  reference ReferenceId(8): None
reference Mismatch:
previous reference ReferenceId(27): Some("React")
current  reference ReferenceId(10): None
reference Mismatch:
previous reference ReferenceId(29): Some("React")
current  reference ReferenceId(12): None
reference Mismatch:
previous reference ReferenceId(31): Some("React")
current  reference ReferenceId(15): None
reference Mismatch:
previous reference ReferenceId(33): Some("React")
current  reference ReferenceId(17): None
reference Mismatch:
previous reference ReferenceId(35): Some("React")
current  reference ReferenceId(19): None
reference Mismatch:
previous reference ReferenceId(37): Some("React")
current  reference ReferenceId(22): None
reference Mismatch:
previous reference ReferenceId(39): Some("React")
current  reference ReferenceId(26): None
reference Mismatch:
previous reference ReferenceId(41): Some("React")
current  reference ReferenceId(30): None
reference Mismatch:
previous reference ReferenceId(43): Some("React")
current  reference ReferenceId(32): None
reference Mismatch:
previous reference ReferenceId(45): Some("React")
current  reference ReferenceId(37): None
reference Mismatch:
previous reference ReferenceId(47): Some("React")
current  reference ReferenceId(40): None
reference Mismatch:
previous reference ReferenceId(49): Some("React")
current  reference ReferenceId(42): None
reference Mismatch:
previous reference ReferenceId(51): Some("React")
current  reference ReferenceId(47): None
reference Mismatch:
previous reference ReferenceId(53): Some("React")
current  reference ReferenceId(50): None
reference Mismatch:
previous reference ReferenceId(55): Some("React")
current  reference ReferenceId(52): None
reference Mismatch:
previous reference ReferenceId(57): Some("React")
current  reference ReferenceId(55): None

tasks/coverage/typescript/tests/cases/conformance/jsx/tsxReactEmit2.tsx
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["JSX", "React", "_jsxFileName", "p1", "p2", "p3", "spreads1", "spreads2", "spreads3", "spreads4", "spreads5"]
current  scope ScopeId(0): ["_jsxFileName", "p1", "p2", "p3", "spreads1", "spreads2", "spreads3", "spreads4", "spreads5"]
reference Mismatch:
previous reference ReferenceId(15): Some("React")
current  reference ReferenceId(0): None
reference Mismatch:
previous reference ReferenceId(17): Some("React")
current  reference ReferenceId(4): None
reference Mismatch:
previous reference ReferenceId(19): Some("React")
current  reference ReferenceId(8): None
reference Mismatch:
previous reference ReferenceId(21): Some("React")
current  reference ReferenceId(13): None
reference Mismatch:
previous reference ReferenceId(23): Some("React")
current  reference ReferenceId(18): None

tasks/coverage/typescript/tests/cases/conformance/jsx/tsxReactEmit3.tsx
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Bar", "Foo", "JSX", "React", "_jsxFileName", "baz"]
current  scope ScopeId(0): ["_jsxFileName"]
reference Mismatch:
previous reference ReferenceId(21): Some("React")
current  reference ReferenceId(0): None
reference Mismatch:
previous reference ReferenceId(8): Some("Foo")
current  reference ReferenceId(1): None
reference Mismatch:
previous reference ReferenceId(11): Some("React")
current  reference ReferenceId(3): None
reference Mismatch:
previous reference ReferenceId(10): Some("Bar")
current  reference ReferenceId(4): None
reference Mismatch:
previous reference ReferenceId(14): Some("React")
current  reference ReferenceId(6): None
reference Mismatch:
previous reference ReferenceId(13): Some("Bar")
current  reference ReferenceId(7): None
reference Mismatch:
previous reference ReferenceId(17): Some("React")
current  reference ReferenceId(9): None
reference Mismatch:
previous reference ReferenceId(16): Some("Bar")
current  reference ReferenceId(10): None
reference Mismatch:
previous reference ReferenceId(20): Some("React")
current  reference ReferenceId(12): None
reference Mismatch:
previous reference ReferenceId(19): Some("Bar")
current  reference ReferenceId(13): None

tasks/coverage/typescript/tests/cases/conformance/jsx/tsxReactEmit5.tsx
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["JSX"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/conformance/jsx/tsxReactEmit6.tsx
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["JSX"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/conformance/jsx/tsxReactEmitEntities.tsx
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["JSX", "React", "_jsxFileName"]
current  scope ScopeId(0): ["_jsxFileName"]
reference Mismatch:
previous reference ReferenceId(1): Some("React")
current  reference ReferenceId(0): None
reference Mismatch:
previous reference ReferenceId(3): Some("React")
current  reference ReferenceId(2): None
reference Mismatch:
previous reference ReferenceId(5): Some("React")
current  reference ReferenceId(4): None
reference Mismatch:
previous reference ReferenceId(7): Some("React")
current  reference ReferenceId(6): None
reference Mismatch:
previous reference ReferenceId(9): Some("React")
current  reference ReferenceId(8): None
reference Mismatch:
previous reference ReferenceId(11): Some("React")
current  reference ReferenceId(10): None
reference Mismatch:
previous reference ReferenceId(13): Some("React")
current  reference ReferenceId(12): None
reference Mismatch:
previous reference ReferenceId(15): Some("React")
current  reference ReferenceId(14): None

tasks/coverage/typescript/tests/cases/conformance/jsx/tsxReactEmitNesting.tsx
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["_jsxFileName", "ctrl", "model", "render", "vdom"]
current  scope ScopeId(0): ["_jsxFileName", "render"]

tasks/coverage/typescript/tests/cases/conformance/jsx/tsxReactEmitSpreadAttribute.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["T1", "T10", "T11", "T12", "T2", "T3", "T4", "T5", "T6", "T7", "T8", "T9", "__proto__", "_jsxFileName", "_reactJsxRuntime"]
current  scope ScopeId(0): ["T1", "T10", "T11", "T12", "T2", "T3", "T4", "T5", "T6", "T7", "T8", "T9", "_jsxFileName", "_reactJsxRuntime"]
reference Mismatch:
previous reference ReferenceId(15): Some("__proto__")
current  reference ReferenceId(35): None
reference Mismatch:
previous reference ReferenceId(16): Some("__proto__")
current  reference ReferenceId(40): None

tasks/coverage/typescript/tests/cases/conformance/jsx/tsxReactEmitWhitespace.tsx
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["JSX", "React", "_jsxFileName", "p"]
current  scope ScopeId(0): ["_jsxFileName", "p"]
reference Mismatch:
previous reference ReferenceId(4): Some("React")
current  reference ReferenceId(0): None
reference Mismatch:
previous reference ReferenceId(6): Some("React")
current  reference ReferenceId(2): None
reference Mismatch:
previous reference ReferenceId(8): Some("React")
current  reference ReferenceId(5): None
reference Mismatch:
previous reference ReferenceId(10): Some("React")
current  reference ReferenceId(8): None
reference Mismatch:
previous reference ReferenceId(12): Some("React")
current  reference ReferenceId(11): None
reference Mismatch:
previous reference ReferenceId(14): Some("React")
current  reference ReferenceId(13): None
reference Mismatch:
previous reference ReferenceId(16): Some("React")
current  reference ReferenceId(15): None
reference Mismatch:
previous reference ReferenceId(18): Some("React")
current  reference ReferenceId(17): None
reference Mismatch:
previous reference ReferenceId(20): Some("React")
current  reference ReferenceId(19): None
reference Mismatch:
previous reference ReferenceId(22): Some("React")
current  reference ReferenceId(21): None
reference Mismatch:
previous reference ReferenceId(24): Some("React")
current  reference ReferenceId(23): None

tasks/coverage/typescript/tests/cases/conformance/jsx/tsxReactEmitWhitespace2.tsx
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["JSX", "React", "_jsxFileName"]
current  scope ScopeId(0): ["_jsxFileName"]
reference Mismatch:
previous reference ReferenceId(3): Some("React")
current  reference ReferenceId(0): None
reference Mismatch:
previous reference ReferenceId(2): Some("React")
current  reference ReferenceId(2): None
reference Mismatch:
previous reference ReferenceId(7): Some("React")
current  reference ReferenceId(4): None
reference Mismatch:
previous reference ReferenceId(6): Some("React")
current  reference ReferenceId(6): None
reference Mismatch:
previous reference ReferenceId(11): Some("React")
current  reference ReferenceId(8): None
reference Mismatch:
previous reference ReferenceId(10): Some("React")
current  reference ReferenceId(10): None

tasks/coverage/typescript/tests/cases/conformance/jsx/tsxSfcReturnNull.tsx
semantic error: Semantic Collector failed after transform
Missing SymbolId: React
Missing ReferenceId: require

tasks/coverage/typescript/tests/cases/conformance/jsx/tsxSfcReturnNullStrictNullChecks.tsx
semantic error: Semantic Collector failed after transform
Missing SymbolId: React
Missing ReferenceId: require

tasks/coverage/typescript/tests/cases/conformance/jsx/tsxSpreadAttributesResolution1.tsx
semantic error: Semantic Collector failed after transform
Missing SymbolId: React
Missing ReferenceId: require

tasks/coverage/typescript/tests/cases/conformance/jsx/tsxSpreadAttributesResolution11.tsx
semantic error: Semantic Collector failed after transform
Missing SymbolId: React
Missing ReferenceId: require

tasks/coverage/typescript/tests/cases/conformance/jsx/tsxSpreadAttributesResolution13.tsx
semantic error: Semantic Collector failed after transform
Missing SymbolId: React
Missing ReferenceId: require

tasks/coverage/typescript/tests/cases/conformance/jsx/tsxSpreadAttributesResolution15.tsx
semantic error: Semantic Collector failed after transform
Missing SymbolId: React
Missing ReferenceId: require

tasks/coverage/typescript/tests/cases/conformance/jsx/tsxSpreadAttributesResolution3.tsx
semantic error: Semantic Collector failed after transform
Missing SymbolId: React
Missing ReferenceId: require

tasks/coverage/typescript/tests/cases/conformance/jsx/tsxSpreadAttributesResolution7.tsx
semantic error: Semantic Collector failed after transform
Missing SymbolId: React
Missing ReferenceId: require

tasks/coverage/typescript/tests/cases/conformance/jsx/tsxSpreadAttributesResolution8.tsx
semantic error: Semantic Collector failed after transform
Missing SymbolId: React
Missing ReferenceId: require

tasks/coverage/typescript/tests/cases/conformance/jsx/tsxSpreadAttributesResolution9.tsx
semantic error: Semantic Collector failed after transform
Missing SymbolId: React
Missing ReferenceId: require

tasks/coverage/typescript/tests/cases/conformance/jsx/tsxSpreadChildren.tsx
semantic error: Spread children are not supported in React.

tasks/coverage/typescript/tests/cases/conformance/jsx/tsxSpreadChildrenInvalidType.tsx
semantic error: Spread children are not supported in React.
Spread children are not supported in React.

tasks/coverage/typescript/tests/cases/conformance/jsx/tsxStatelessFunctionComponentOverload2.tsx
semantic error: Semantic Collector failed after transform
Missing SymbolId: React
Missing ReferenceId: require

tasks/coverage/typescript/tests/cases/conformance/jsx/tsxStatelessFunctionComponentOverload3.tsx
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Context", "_jsxFileName", "_reactJsxRuntime", "obj2", "three1", "three2", "three3", "two1", "two2", "two3", "two4", "two5"]
current  scope ScopeId(0): ["_jsxFileName", "_reactJsxRuntime", "obj2", "three1", "three2", "three3", "two1", "two2", "two3", "two4", "two5"]

tasks/coverage/typescript/tests/cases/conformance/jsx/tsxStatelessFunctionComponentOverload6.tsx
semantic error: Semantic Collector failed after transform
Missing SymbolId: React
Missing ReferenceId: require

tasks/coverage/typescript/tests/cases/conformance/jsx/tsxStatelessFunctionComponentWithDefaultTypeParameter1.tsx
semantic error: Semantic Collector failed after transform
Missing SymbolId: React
Missing ReferenceId: require

tasks/coverage/typescript/tests/cases/conformance/jsx/tsxStatelessFunctionComponents3.tsx
semantic error: Semantic Collector failed after transform
Missing SymbolId: React
Missing ReferenceId: require

tasks/coverage/typescript/tests/cases/conformance/jsx/tsxStatelessFunctionComponentsWithTypeArguments1.tsx
semantic error: Semantic Collector failed after transform
Missing SymbolId: React
Missing ReferenceId: require

tasks/coverage/typescript/tests/cases/conformance/jsx/tsxStatelessFunctionComponentsWithTypeArguments3.tsx
semantic error: Semantic Collector failed after transform
Missing SymbolId: React
Missing ReferenceId: require

tasks/coverage/typescript/tests/cases/conformance/jsx/tsxStatelessFunctionComponentsWithTypeArguments5.tsx
semantic error: Semantic Collector failed after transform
Missing SymbolId: React
Missing ReferenceId: require

tasks/coverage/typescript/tests/cases/conformance/jsx/tsxTypeArgumentsJsxPreserveOutput.tsx
semantic error: Semantic Collector failed after transform
Missing SymbolId: React
Missing ReferenceId: require

tasks/coverage/typescript/tests/cases/conformance/jsx/tsxUnionElementType5.tsx
semantic error: `import lib = require(...);` is only supported when compiling modules to CommonJS.
Please consider using `import lib from '...';` alongside Typescript's --allowSyntheticDefaultImports option, or add @babel/plugin-transform-modules-commonjs to your Babel config.

tasks/coverage/typescript/tests/cases/conformance/jsx/tsxUnionTypeComponent1.tsx
semantic error: `import lib = require(...);` is only supported when compiling modules to CommonJS.
Please consider using `import lib from '...';` alongside Typescript's --allowSyntheticDefaultImports option, or add @babel/plugin-transform-modules-commonjs to your Babel config.

tasks/coverage/typescript/tests/cases/conformance/moduleResolution/allowImportingTypesDtsExtension.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["User", "getUser", "user"]
current  scope ScopeId(0): ["getUser", "user"]

tasks/coverage/typescript/tests/cases/conformance/moduleResolution/bundler/bundlerDirectoryModule.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["test"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/conformance/moduleResolution/bundler/bundlerImportESM.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["esm"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/conformance/moduleResolution/customConditions.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["_"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/conformance/moduleResolution/extensionLoadingPriority.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["a", "dir"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/conformance/moduleResolution/packageJsonMain.ts
semantic error: `import lib = require(...);` is only supported when compiling modules to CommonJS.
Please consider using `import lib from '...';` alongside Typescript's --allowSyntheticDefaultImports option, or add @babel/plugin-transform-modules-commonjs to your Babel config.
`import lib = require(...);` is only supported when compiling modules to CommonJS.
Please consider using `import lib from '...';` alongside Typescript's --allowSyntheticDefaultImports option, or add @babel/plugin-transform-modules-commonjs to your Babel config.
`import lib = require(...);` is only supported when compiling modules to CommonJS.
Please consider using `import lib from '...';` alongside Typescript's --allowSyntheticDefaultImports option, or add @babel/plugin-transform-modules-commonjs to your Babel config.

tasks/coverage/typescript/tests/cases/conformance/moduleResolution/resolutionModeImportType1.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Default", "Import", "ImportRelative", "Require", "RequireRelative"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/conformance/moduleResolution/resolvesWithoutExportsDiagnostic1.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["bar", "foo"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/conformance/moduleResolution/scopedPackages.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["x", "y", "z"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/conformance/moduleResolution/scopedPackagesClassic.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["x"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/conformance/moduleResolution/selfNameModuleAugmentation.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["simple"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/conformance/moduleResolution/typesVersions.emptyTypes.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["a"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/conformance/moduleResolution/typesVersions.justIndex.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["a"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/conformance/moduleResolution/untypedModuleImport.ts
semantic error: Expected a semicolon or an implicit semicolon after a statement, but found none

tasks/coverage/typescript/tests/cases/conformance/moduleResolution/untypedModuleImport_vsAmbient.ts
semantic error: Expected a semicolon or an implicit semicolon after a statement, but found none

tasks/coverage/typescript/tests/cases/conformance/node/allowJs/nodeAllowJsPackageSelfName2.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["foo"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/conformance/nonjsExtensions/declarationFileForHtmlFileWithinDeclarationFile.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["HTML5Element", "blogPost", "doc"]
current  scope ScopeId(0): ["HTML5Element", "blogPost"]
reference Mismatch:
previous reference ReferenceId(1): Some("doc")
current  reference ReferenceId(0): None

tasks/coverage/typescript/tests/cases/conformance/nonjsExtensions/declarationFileForHtmlImport.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["HTML5Element", "blogPost", "doc"]
current  scope ScopeId(0): ["HTML5Element", "blogPost"]
reference Mismatch:
previous reference ReferenceId(1): Some("doc")
current  reference ReferenceId(0): None

tasks/coverage/typescript/tests/cases/conformance/nonjsExtensions/declarationFileForJsonImport.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["val"]
current  scope ScopeId(0): []
reference Mismatch:
previous reference ReferenceId(0): Some("val")
current  reference ReferenceId(0): None

tasks/coverage/typescript/tests/cases/conformance/nonjsExtensions/declarationFilesForNodeNativeModules.ts
semantic error: `import lib = require(...);` is only supported when compiling modules to CommonJS.
Please consider using `import lib from '...';` alongside Typescript's --allowSyntheticDefaultImports option, or add @babel/plugin-transform-modules-commonjs to your Babel config.

tasks/coverage/typescript/tests/cases/conformance/parser/ecmascript5/EnumDeclarations/parserEnum1.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(1): ["IsIndexer", "IsNumberIndexer", "IsStringIndexer", "None", "SignatureFlags"]
current  scope ScopeId(1): ["SignatureFlags"]

tasks/coverage/typescript/tests/cases/conformance/parser/ecmascript5/EnumDeclarations/parserEnum2.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(1): ["IsIndexer", "IsNumberIndexer", "IsStringIndexer", "None", "SignatureFlags"]
current  scope ScopeId(1): ["SignatureFlags"]

tasks/coverage/typescript/tests/cases/conformance/parser/ecmascript5/EnumDeclarations/parserEnum6.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(1): ["A", "B", "C", "E"]
current  scope ScopeId(1): ["E"]

tasks/coverage/typescript/tests/cases/conformance/parser/ecmascript5/EnumDeclarations/parserEnumDeclaration1.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(1): ["Bar", "E", "Foo"]
current  scope ScopeId(1): ["E"]

tasks/coverage/typescript/tests/cases/conformance/parser/ecmascript5/EnumDeclarations/parserEnumDeclaration3.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["E"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/conformance/parser/ecmascript5/EnumDeclarations/parserEnumDeclaration5.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(1): ["A", "B", "C", "D", "E"]
current  scope ScopeId(1): ["E"]

tasks/coverage/typescript/tests/cases/conformance/parser/ecmascript5/EnumDeclarations/parserEnumDeclaration6.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(1): ["A", "B", "C", "D", "E"]
current  scope ScopeId(1): ["E"]

tasks/coverage/typescript/tests/cases/conformance/parser/ecmascript5/EnumDeclarations/parserInterfaceKeywordInEnum.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(1): ["Bar", "interface"]
current  scope ScopeId(1): ["Bar"]

tasks/coverage/typescript/tests/cases/conformance/parser/ecmascript5/EnumDeclarations/parserInterfaceKeywordInEnum1.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(1): ["Bar", "interface"]
current  scope ScopeId(1): ["Bar"]

tasks/coverage/typescript/tests/cases/conformance/parser/ecmascript5/ErrorRecovery/AccessibilityAfterStatic/parserAccessibilityAfterStatic14.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(2): ["T"]
current  scope ScopeId(2): []

tasks/coverage/typescript/tests/cases/conformance/parser/ecmascript5/ErrorRecovery/IncompleteMemberVariables/parserErrorRecovery_IncompleteMemberVariable1.ts
semantic error: Semantic Collector failed after transform
Missing SymbolId: Shapes
Missing SymbolId: _Shapes
Missing ReferenceId: _Shapes
Missing ReferenceId: Point
Missing ReferenceId: Shapes
Missing ReferenceId: Shapes

tasks/coverage/typescript/tests/cases/conformance/parser/ecmascript5/ErrorRecovery/parserModifierOnPropertySignature2.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Foo"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/conformance/parser/ecmascript5/FunctionDeclarations/parserFunctionDeclaration8.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["M"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/conformance/parser/ecmascript5/Generics/parserGenericClass1.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(1): ["T"]
current  scope ScopeId(1): []

tasks/coverage/typescript/tests/cases/conformance/parser/ecmascript5/Generics/parserGenericClass2.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(1): ["K", "V"]
current  scope ScopeId(1): []

tasks/coverage/typescript/tests/cases/conformance/parser/ecmascript5/Generics/parserGenericConstraint1.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(1): ["T"]
current  scope ScopeId(1): []

tasks/coverage/typescript/tests/cases/conformance/parser/ecmascript5/InterfaceDeclarations/parserInterfaceDeclaration5.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["I"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/conformance/parser/ecmascript5/InterfaceDeclarations/parserInterfaceDeclaration7.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["I"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/conformance/parser/ecmascript5/InterfaceDeclarations/parserInterfaceDeclaration9.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["I1", "I2", "I3"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/conformance/parser/ecmascript5/MethodSignatures/parserMethodSignature1.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["I"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/conformance/parser/ecmascript5/MethodSignatures/parserMethodSignature10.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["I"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/conformance/parser/ecmascript5/MethodSignatures/parserMethodSignature11.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["I"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/conformance/parser/ecmascript5/MethodSignatures/parserMethodSignature12.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["I"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/conformance/parser/ecmascript5/MethodSignatures/parserMethodSignature2.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["I"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/conformance/parser/ecmascript5/MethodSignatures/parserMethodSignature3.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["I"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/conformance/parser/ecmascript5/MethodSignatures/parserMethodSignature4.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["I"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/conformance/parser/ecmascript5/MethodSignatures/parserMethodSignature5.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["I"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/conformance/parser/ecmascript5/MethodSignatures/parserMethodSignature6.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["I"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/conformance/parser/ecmascript5/MethodSignatures/parserMethodSignature7.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["I"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/conformance/parser/ecmascript5/MethodSignatures/parserMethodSignature8.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["I"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/conformance/parser/ecmascript5/MethodSignatures/parserMethodSignature9.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["I"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/conformance/parser/ecmascript5/ModuleDeclarations/parserModule1.ts
semantic error: Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript
Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript
Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript

tasks/coverage/typescript/tests/cases/conformance/parser/ecmascript5/ModuleDeclarations/parserModuleDeclaration11.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["string", "x"]
current  scope ScopeId(0): ["x"]

tasks/coverage/typescript/tests/cases/conformance/parser/ecmascript5/ModuleDeclarations/parserModuleDeclaration12.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["A"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/conformance/parser/ecmascript5/ModuleDeclarations/parserModuleDeclaration2.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Foo"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/conformance/parser/ecmascript5/ModuleDeclarations/parserModuleDeclaration4.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["M"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/conformance/parser/ecmascript5/ModuleDeclarations/parserModuleDeclaration6.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["number"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/conformance/parser/ecmascript5/ModuleDeclarations/parserModuleDeclaration7.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["number"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/conformance/parser/ecmascript5/ModuleDeclarations/parserModuleDeclaration8.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["a"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/conformance/parser/ecmascript5/ModuleDeclarations/parserModuleDeclaration9.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["a"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/conformance/parser/ecmascript5/PropertyAssignments/parserFunctionPropertyAssignment4.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(1): ["T"]
current  scope ScopeId(1): []

tasks/coverage/typescript/tests/cases/conformance/parser/ecmascript5/PropertySignatures/parserPropertySignature1.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["I"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/conformance/parser/ecmascript5/PropertySignatures/parserPropertySignature10.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["I"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/conformance/parser/ecmascript5/PropertySignatures/parserPropertySignature11.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["I"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/conformance/parser/ecmascript5/PropertySignatures/parserPropertySignature12.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["I"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/conformance/parser/ecmascript5/PropertySignatures/parserPropertySignature2.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["I"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/conformance/parser/ecmascript5/PropertySignatures/parserPropertySignature3.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["I"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/conformance/parser/ecmascript5/PropertySignatures/parserPropertySignature4.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["I"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/conformance/parser/ecmascript5/PropertySignatures/parserPropertySignature5.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["I"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/conformance/parser/ecmascript5/PropertySignatures/parserPropertySignature6.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["I"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/conformance/parser/ecmascript5/PropertySignatures/parserPropertySignature7.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["I"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/conformance/parser/ecmascript5/PropertySignatures/parserPropertySignature8.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["I"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/conformance/parser/ecmascript5/PropertySignatures/parserPropertySignature9.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["I"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/conformance/parser/ecmascript5/Protected/Protected8.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["I"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/conformance/parser/ecmascript5/RegressionTests/parser643728.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["C"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/conformance/parser/ecmascript5/RegularExpressions/parserRegularExpression6.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["a"]
current  scope ScopeId(0): []
reference Mismatch:
previous reference ReferenceId(0): Some("a")
current  reference ReferenceId(0): None
reference Mismatch:
previous reference ReferenceId(1): Some("a")
current  reference ReferenceId(1): None

tasks/coverage/typescript/tests/cases/conformance/parser/ecmascript5/Symbols/parserES5SymbolIndexer1.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["I"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/conformance/parser/ecmascript5/parserExportAsFunctionIdentifier.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Foo", "f", "x"]
current  scope ScopeId(0): ["f", "x"]

tasks/coverage/typescript/tests/cases/conformance/parser/ecmascript5/parserNotRegex2.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["A", "B", "C", "x"]
current  scope ScopeId(0): ["x"]
reference Mismatch:
previous reference ReferenceId(0): Some("A")
current  reference ReferenceId(0): None
reference Mismatch:
previous reference ReferenceId(1): Some("B")
current  reference ReferenceId(1): None
reference Mismatch:
previous reference ReferenceId(2): Some("C")
current  reference ReferenceId(2): None

tasks/coverage/typescript/tests/cases/conformance/parser/ecmascript5/parserOptionalTypeMembers1.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["PropertyDescriptor2"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/conformance/parser/ecmascript5/parserOverloadOnConstants1.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Document"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/conformance/parser/ecmascript6/Symbols/parserSymbolIndexer1.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["I"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/conformance/parser/ecmascript6/Symbols/parserSymbolProperty1.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["I"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/conformance/parser/ecmascript6/Symbols/parserSymbolProperty2.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["I"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/conformance/salsa/annotatedThisPropertyInitializerDoesntNarrow.ts
semantic error: Cannot use export statement outside a module

tasks/coverage/typescript/tests/cases/conformance/salsa/inferingFromAny.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["I", "a", "t"]
current  scope ScopeId(0): ["a", "t"]

tasks/coverage/typescript/tests/cases/conformance/salsa/moduleExportAlias.ts
semantic error: `import lib = require(...);` is only supported when compiling modules to CommonJS.
Please consider using `import lib from '...';` alongside Typescript's --allowSyntheticDefaultImports option, or add @babel/plugin-transform-modules-commonjs to your Babel config.

tasks/coverage/typescript/tests/cases/conformance/salsa/plainJSRedeclare3.ts
semantic error: Identifier `orbitol` has already been declared

tasks/coverage/typescript/tests/cases/conformance/salsa/propertyAssignmentUseParentType1.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["N", "ignoreJsdoc", "inlined", "interfaced"]
current  scope ScopeId(0): ["ignoreJsdoc", "inlined", "interfaced"]

tasks/coverage/typescript/tests/cases/conformance/salsa/typeFromPropertyAssignment30.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Combo", "c"]
current  scope ScopeId(0): ["c"]

tasks/coverage/typescript/tests/cases/conformance/salsa/typeFromPropertyAssignmentWithExport.ts
semantic error: Cannot use export statement outside a module

tasks/coverage/typescript/tests/cases/conformance/scanner/ecmascript5/scannerEnum1.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(1): ["CodeGenTarget", "ES3", "ES5"]
current  scope ScopeId(1): ["CodeGenTarget"]

tasks/coverage/typescript/tests/cases/conformance/statements/VariableStatements/everyTypeWithAnnotationAndInitializer.ts
semantic error: Semantic Collector failed after transform
Missing SymbolId: M
Missing SymbolId: _M
Missing ReferenceId: _M
Missing ReferenceId: A
Missing ReferenceId: _M
Missing ReferenceId: F2
Missing ReferenceId: M
Missing ReferenceId: M

tasks/coverage/typescript/tests/cases/conformance/statements/VariableStatements/everyTypeWithInitializer.ts
semantic error: Semantic Collector failed after transform
Missing SymbolId: M
Missing SymbolId: _M
Missing ReferenceId: _M
Missing ReferenceId: A
Missing ReferenceId: _M
Missing ReferenceId: F2
Missing ReferenceId: M
Missing ReferenceId: M

tasks/coverage/typescript/tests/cases/conformance/statements/VariableStatements/usingDeclarations/usingDeclarations.1.ts
semantic error: Semantic Collector failed after transform
Missing SymbolId: N
Missing SymbolId: _N
Missing ReferenceId: N
Missing ReferenceId: N

tasks/coverage/typescript/tests/cases/conformance/statements/VariableStatements/usingDeclarations/usingDeclarationsNamedEvaluationDecoratorsAndClassFields.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["C1", "C2", "C3", "C4", "dec"]
current  scope ScopeId(0): ["C1", "C2", "C3", "C4"]
reference Mismatch:
previous reference ReferenceId(2): Some("dec")
current  reference ReferenceId(2): None
reference Mismatch:
previous reference ReferenceId(4): Some("dec")
current  reference ReferenceId(4): None

tasks/coverage/typescript/tests/cases/conformance/statements/VariableStatements/usingDeclarations/usingDeclarationsWithESClassDecorators.1.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["C", "before", "dec"]
current  scope ScopeId(0): ["C", "before"]
reference Mismatch:
previous reference ReferenceId(0): Some("dec")
current  reference ReferenceId(0): None

tasks/coverage/typescript/tests/cases/conformance/statements/VariableStatements/usingDeclarations/usingDeclarationsWithESClassDecorators.10.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["after", "dec"]
current  scope ScopeId(0): ["after"]
reference Mismatch:
previous reference ReferenceId(0): Some("dec")
current  reference ReferenceId(0): None

tasks/coverage/typescript/tests/cases/conformance/statements/VariableStatements/usingDeclarations/usingDeclarationsWithESClassDecorators.11.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["C", "after", "dec"]
current  scope ScopeId(0): ["C", "after"]
reference Mismatch:
previous reference ReferenceId(0): Some("dec")
current  reference ReferenceId(0): None

tasks/coverage/typescript/tests/cases/conformance/statements/VariableStatements/usingDeclarations/usingDeclarationsWithESClassDecorators.12.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["C", "after", "dec"]
current  scope ScopeId(0): ["C", "after"]
reference Mismatch:
previous reference ReferenceId(0): Some("dec")
current  reference ReferenceId(0): None

tasks/coverage/typescript/tests/cases/conformance/statements/VariableStatements/usingDeclarations/usingDeclarationsWithESClassDecorators.2.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["C", "before", "dec"]
current  scope ScopeId(0): ["C", "before"]
reference Mismatch:
previous reference ReferenceId(0): Some("dec")
current  reference ReferenceId(0): None

tasks/coverage/typescript/tests/cases/conformance/statements/VariableStatements/usingDeclarations/usingDeclarationsWithESClassDecorators.3.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["C", "before", "dec"]
current  scope ScopeId(0): ["C", "before"]
reference Mismatch:
previous reference ReferenceId(0): Some("dec")
current  reference ReferenceId(0): None

tasks/coverage/typescript/tests/cases/conformance/statements/VariableStatements/usingDeclarations/usingDeclarationsWithESClassDecorators.4.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["before", "dec"]
current  scope ScopeId(0): ["before"]
reference Mismatch:
previous reference ReferenceId(0): Some("dec")
current  reference ReferenceId(0): None

tasks/coverage/typescript/tests/cases/conformance/statements/VariableStatements/usingDeclarations/usingDeclarationsWithESClassDecorators.5.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["C", "before", "dec"]
current  scope ScopeId(0): ["C", "before"]
reference Mismatch:
previous reference ReferenceId(0): Some("dec")
current  reference ReferenceId(0): None

tasks/coverage/typescript/tests/cases/conformance/statements/VariableStatements/usingDeclarations/usingDeclarationsWithESClassDecorators.6.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["C", "before", "dec"]
current  scope ScopeId(0): ["C", "before"]
reference Mismatch:
previous reference ReferenceId(0): Some("dec")
current  reference ReferenceId(0): None

tasks/coverage/typescript/tests/cases/conformance/statements/VariableStatements/usingDeclarations/usingDeclarationsWithESClassDecorators.7.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["C", "after", "dec"]
current  scope ScopeId(0): ["C", "after"]
reference Mismatch:
previous reference ReferenceId(0): Some("dec")
current  reference ReferenceId(0): None

tasks/coverage/typescript/tests/cases/conformance/statements/VariableStatements/usingDeclarations/usingDeclarationsWithESClassDecorators.8.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["C", "after", "dec"]
current  scope ScopeId(0): ["C", "after"]
reference Mismatch:
previous reference ReferenceId(0): Some("dec")
current  reference ReferenceId(0): None

tasks/coverage/typescript/tests/cases/conformance/statements/VariableStatements/usingDeclarations/usingDeclarationsWithESClassDecorators.9.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["C", "after", "dec"]
current  scope ScopeId(0): ["C", "after"]
reference Mismatch:
previous reference ReferenceId(0): Some("dec")
current  reference ReferenceId(0): None

tasks/coverage/typescript/tests/cases/conformance/statements/VariableStatements/usingDeclarations/usingDeclarationsWithLegacyClassDecorators.1.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["C", "before", "dec"]
current  scope ScopeId(0): ["C", "before"]
reference Mismatch:
previous reference ReferenceId(0): Some("dec")
current  reference ReferenceId(0): None

tasks/coverage/typescript/tests/cases/conformance/statements/VariableStatements/usingDeclarations/usingDeclarationsWithLegacyClassDecorators.10.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["after", "dec"]
current  scope ScopeId(0): ["after"]
reference Mismatch:
previous reference ReferenceId(0): Some("dec")
current  reference ReferenceId(0): None

tasks/coverage/typescript/tests/cases/conformance/statements/VariableStatements/usingDeclarations/usingDeclarationsWithLegacyClassDecorators.11.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["C", "after", "dec"]
current  scope ScopeId(0): ["C", "after"]
reference Mismatch:
previous reference ReferenceId(0): Some("dec")
current  reference ReferenceId(0): None

tasks/coverage/typescript/tests/cases/conformance/statements/VariableStatements/usingDeclarations/usingDeclarationsWithLegacyClassDecorators.12.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["C", "after", "dec"]
current  scope ScopeId(0): ["C", "after"]
reference Mismatch:
previous reference ReferenceId(0): Some("dec")
current  reference ReferenceId(0): None

tasks/coverage/typescript/tests/cases/conformance/statements/VariableStatements/usingDeclarations/usingDeclarationsWithLegacyClassDecorators.2.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["C", "before", "dec"]
current  scope ScopeId(0): ["C", "before"]
reference Mismatch:
previous reference ReferenceId(0): Some("dec")
current  reference ReferenceId(0): None

tasks/coverage/typescript/tests/cases/conformance/statements/VariableStatements/usingDeclarations/usingDeclarationsWithLegacyClassDecorators.3.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["C", "before", "dec"]
current  scope ScopeId(0): ["C", "before"]
reference Mismatch:
previous reference ReferenceId(0): Some("dec")
current  reference ReferenceId(0): None

tasks/coverage/typescript/tests/cases/conformance/statements/VariableStatements/usingDeclarations/usingDeclarationsWithLegacyClassDecorators.4.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["before", "dec"]
current  scope ScopeId(0): ["before"]
reference Mismatch:
previous reference ReferenceId(0): Some("dec")
current  reference ReferenceId(0): None

tasks/coverage/typescript/tests/cases/conformance/statements/VariableStatements/usingDeclarations/usingDeclarationsWithLegacyClassDecorators.5.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["C", "before", "dec"]
current  scope ScopeId(0): ["C", "before"]
reference Mismatch:
previous reference ReferenceId(0): Some("dec")
current  reference ReferenceId(0): None

tasks/coverage/typescript/tests/cases/conformance/statements/VariableStatements/usingDeclarations/usingDeclarationsWithLegacyClassDecorators.6.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["C", "before", "dec"]
current  scope ScopeId(0): ["C", "before"]
reference Mismatch:
previous reference ReferenceId(0): Some("dec")
current  reference ReferenceId(0): None

tasks/coverage/typescript/tests/cases/conformance/statements/VariableStatements/usingDeclarations/usingDeclarationsWithLegacyClassDecorators.7.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["C", "after", "dec"]
current  scope ScopeId(0): ["C", "after"]
reference Mismatch:
previous reference ReferenceId(0): Some("dec")
current  reference ReferenceId(0): None

tasks/coverage/typescript/tests/cases/conformance/statements/VariableStatements/usingDeclarations/usingDeclarationsWithLegacyClassDecorators.8.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["C", "after", "dec"]
current  scope ScopeId(0): ["C", "after"]
reference Mismatch:
previous reference ReferenceId(0): Some("dec")
current  reference ReferenceId(0): None

tasks/coverage/typescript/tests/cases/conformance/statements/VariableStatements/usingDeclarations/usingDeclarationsWithLegacyClassDecorators.9.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["C", "after", "dec"]
current  scope ScopeId(0): ["C", "after"]
reference Mismatch:
previous reference ReferenceId(0): Some("dec")
current  reference ReferenceId(0): None

tasks/coverage/typescript/tests/cases/conformance/statements/VariableStatements/validMultipleVariableDeclarations.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Point", "a", "declSpace", "fn", "p", "x"]
current  scope ScopeId(0): ["a", "declSpace", "fn", "p", "x"]

tasks/coverage/typescript/tests/cases/conformance/statements/forStatements/forStatements.ts
semantic error: Semantic Collector failed after transform
Missing SymbolId: M
Missing SymbolId: _M
Missing ReferenceId: _M
Missing ReferenceId: A
Missing ReferenceId: _M
Missing ReferenceId: F2
Missing ReferenceId: M
Missing ReferenceId: M

tasks/coverage/typescript/tests/cases/conformance/statements/forStatements/forStatementsMultipleValidDecl.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Point", "a", "declSpace", "fn", "p", "x"]
current  scope ScopeId(0): ["a", "declSpace", "fn", "p", "x"]

tasks/coverage/typescript/tests/cases/conformance/statements/ifDoWhileStatements/ifDoWhileStatements.ts
semantic error: Semantic Collector failed after transform
Missing SymbolId: M
Missing SymbolId: _M
Missing ReferenceId: _M
Missing ReferenceId: A
Missing ReferenceId: _M
Missing ReferenceId: F2
Missing ReferenceId: M
Missing ReferenceId: M
Missing SymbolId: N
Missing SymbolId: _N
Missing ReferenceId: _N
Missing ReferenceId: A
Missing ReferenceId: _N
Missing ReferenceId: F2
Missing ReferenceId: N
Missing ReferenceId: N

tasks/coverage/typescript/tests/cases/conformance/statements/returnStatements/returnStatements.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["C", "D", "I", "fn1", "fn10", "fn11", "fn12", "fn13", "fn2", "fn3", "fn4", "fn5", "fn6", "fn7", "fn8"]
current  scope ScopeId(0): ["C", "D", "fn1", "fn10", "fn11", "fn12", "fn13", "fn2", "fn3", "fn4", "fn5", "fn6", "fn7", "fn8"]

tasks/coverage/typescript/tests/cases/conformance/statements/throwStatements/throwInEnclosingStatements.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(2): ["T", "x"]
current  scope ScopeId(2): ["x"]
Bindings Mismatch:
previous scope ScopeId(9): ["T"]
current  scope ScopeId(9): []

tasks/coverage/typescript/tests/cases/conformance/statements/throwStatements/throwStatements.ts
semantic error: Semantic Collector failed after transform
Missing SymbolId: M
Missing SymbolId: _M
Missing ReferenceId: _M
Missing ReferenceId: A
Missing ReferenceId: _M
Missing ReferenceId: F2
Missing ReferenceId: M
Missing ReferenceId: M

tasks/coverage/typescript/tests/cases/conformance/types/any/assignEveryTypeToAny.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["C", "E", "I", "a", "b", "c", "d", "e", "e2", "f", "g", "h", "i", "j", "x"]
current  scope ScopeId(0): ["C", "E", "a", "b", "c", "d", "e", "e2", "f", "g", "h", "i", "j", "x"]
Bindings Mismatch:
previous scope ScopeId(1): ["A", "E"]
current  scope ScopeId(1): ["E"]
Bindings Mismatch:
previous scope ScopeId(5): ["T", "x"]
current  scope ScopeId(4): ["x"]
Bindings Mismatch:
previous scope ScopeId(6): ["T", "a"]
current  scope ScopeId(5): ["a"]

tasks/coverage/typescript/tests/cases/conformance/types/conditional/variance.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Bar", "Foo", "foo", "x", "y", "z"]
current  scope ScopeId(0): ["Bar", "foo", "x", "y", "z"]
Bindings Mismatch:
previous scope ScopeId(3): ["T"]
current  scope ScopeId(1): []

tasks/coverage/typescript/tests/cases/conformance/types/contextualTypes/asyncFunctions/contextuallyTypeAsyncFunctionAwaitOperand.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Obj", "fn1"]
current  scope ScopeId(0): ["fn1"]

tasks/coverage/typescript/tests/cases/conformance/types/contextualTypes/asyncFunctions/contextuallyTypeAsyncFunctionReturnType.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["AsyncFunc", "Done", "Func", "ILocalExtension", "Metadata", "Obj", "ProcessTreeNode", "TestFunction", "copyExtensions", "fn1", "fn2", "fn3", "fn4", "test"]
current  scope ScopeId(0): ["copyExtensions", "fn1", "fn2", "fn3", "fn4"]
reference Mismatch:
previous reference ReferenceId(23): Some("test")
current  reference ReferenceId(4): None

tasks/coverage/typescript/tests/cases/conformance/types/contextualTypes/methodDeclarations/contextuallyTypedBindingInitializer.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Nested", "Show", "StringIdentity", "StringUnion", "Tuples", "f", "f2", "f3", "ff", "g", "h", "id"]
current  scope ScopeId(0): ["f", "f2", "f3", "ff", "g", "h", "id"]

tasks/coverage/typescript/tests/cases/conformance/types/contextualTypes/methodDeclarations/contextuallyTypedObjectLiteralMethodDeclaration01.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["A", "B", "Foo", "getFoo1", "getFoo2", "getFoo3"]
current  scope ScopeId(0): ["getFoo1", "getFoo2", "getFoo3"]

tasks/coverage/typescript/tests/cases/conformance/types/forAwait/types.forAwait.es2018.1.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["asyncIterable", "f1", "f2", "iterable", "iterableOfPromise"]
current  scope ScopeId(0): ["f1", "f2"]
reference Mismatch:
previous reference ReferenceId(4): Some("asyncIterable")
current  reference ReferenceId(0): None
reference Mismatch:
previous reference ReferenceId(5): Some("iterable")
current  reference ReferenceId(1): None
reference Mismatch:
previous reference ReferenceId(6): Some("iterableOfPromise")
current  reference ReferenceId(2): None
reference Mismatch:
previous reference ReferenceId(8): Some("asyncIterable")
current  reference ReferenceId(4): None
reference Mismatch:
previous reference ReferenceId(10): Some("iterable")
current  reference ReferenceId(6): None
reference Mismatch:
previous reference ReferenceId(12): Some("iterableOfPromise")
current  reference ReferenceId(8): None
reference Mismatch:
previous reference ReferenceId(13): Some("asyncIterable")
current  reference ReferenceId(9): None
reference Mismatch:
previous reference ReferenceId(14): Some("iterable")
current  reference ReferenceId(10): None
reference Mismatch:
previous reference ReferenceId(15): Some("iterableOfPromise")
current  reference ReferenceId(11): None
reference Mismatch:
previous reference ReferenceId(17): Some("asyncIterable")
current  reference ReferenceId(13): None
reference Mismatch:
previous reference ReferenceId(19): Some("iterable")
current  reference ReferenceId(15): None
reference Mismatch:
previous reference ReferenceId(21): Some("iterableOfPromise")
current  reference ReferenceId(17): None

tasks/coverage/typescript/tests/cases/conformance/types/intersection/intersectionMemberOfUnionNarrowsCorrectly.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Ex", "U", "x"]
current  scope ScopeId(0): []
reference Mismatch:
previous reference ReferenceId(5): Some("x")
current  reference ReferenceId(0): None

tasks/coverage/typescript/tests/cases/conformance/types/intersection/intersectionOfUnionNarrowing.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["AorB", "X", "q"]
current  scope ScopeId(0): []
reference Mismatch:
previous reference ReferenceId(2): Some("q")
current  reference ReferenceId(0): None
reference Mismatch:
previous reference ReferenceId(4): Some("q")
current  reference ReferenceId(2): None
reference Mismatch:
previous reference ReferenceId(5): Some("q")
current  reference ReferenceId(3): None

tasks/coverage/typescript/tests/cases/conformance/types/intersection/intersectionOfUnionOfUnitTypes.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(1): ["A", "B", "C", "D", "E", "F"]
current  scope ScopeId(1): ["E"]

tasks/coverage/typescript/tests/cases/conformance/types/intersection/intersectionThisTypes.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Component", "Label", "Thing1", "Thing2", "Thing3", "Thing4", "Thing5", "f1", "f2", "test"]
current  scope ScopeId(0): ["f1", "f2", "test"]

tasks/coverage/typescript/tests/cases/conformance/types/intersection/intersectionTypeEquivalence.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["A", "B", "C", "ab", "bc", "y", "z", "z1"]
current  scope ScopeId(0): ["ab", "bc", "y", "z", "z1"]

tasks/coverage/typescript/tests/cases/conformance/types/intersection/intersectionTypeInference2.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["a", "b", "obj"]
current  scope ScopeId(0): []
reference Mismatch:
previous reference ReferenceId(3): Some("a")
current  reference ReferenceId(1): None
reference Mismatch:
previous reference ReferenceId(5): Some("b")
current  reference ReferenceId(3): None
reference Mismatch:
previous reference ReferenceId(14): Some("obj")
current  reference ReferenceId(5): None
reference Mismatch:
previous reference ReferenceId(16): Some("obj")
current  reference ReferenceId(7): None

tasks/coverage/typescript/tests/cases/conformance/types/intersection/intersectionTypeInference3.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["A", "Nominal", "a", "b", "c1", "c2"]
current  scope ScopeId(0): ["c1", "c2"]
reference Mismatch:
previous reference ReferenceId(9): Some("a")
current  reference ReferenceId(1): None
reference Mismatch:
previous reference ReferenceId(11): Some("b")
current  reference ReferenceId(3): None

tasks/coverage/typescript/tests/cases/conformance/types/intersection/intersectionTypeMembers.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["A", "B", "C", "D", "E", "F", "F1", "F2", "G", "X", "Y", "Z", "abc", "de", "defg", "f", "n", "s", "xyz"]
current  scope ScopeId(0): ["abc", "de", "defg", "f", "n", "s", "xyz"]

tasks/coverage/typescript/tests/cases/conformance/types/intersection/intersectionTypeOverloading.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["F", "G", "fg", "gf", "x", "y"]
current  scope ScopeId(0): ["fg", "gf", "x", "y"]

tasks/coverage/typescript/tests/cases/conformance/types/intersection/intersectionsAndEmptyObjects.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["A", "B", "C", "D", "Dictionary", "E", "Foo1", "Foo2", "IMyChoiceList", "IUnknownChoiceList", "choices", "d1", "d2", "d3", "d4", "d5", "d6", "defaultChoices", "defaultChoicesAndEmpty", "intersectDictionaries", "myChoices", "myChoicesAndEmpty", "testDictionary", "unknownChoices", "unknownChoicesAndEmpty", "x01", "x02", "x03", "x04", "x05", "x06", "x07", "x08", "x09", "x10", "x11", "x12", "x13", "x14"]
current  scope ScopeId(0): ["d1", "d2", "d3", "d4", "d5", "d6", "defaultChoices", "defaultChoicesAndEmpty", "intersectDictionaries", "myChoices", "myChoicesAndEmpty", "testDictionary", "unknownChoices", "unknownChoicesAndEmpty", "x01", "x02", "x03", "x04", "x05", "x06", "x07", "x08", "x09", "x10", "x11", "x12", "x13", "x14"]
Bindings Mismatch:
previous scope ScopeId(7): ["F1", "F2", "d1", "d2"]
current  scope ScopeId(1): ["d1", "d2"]
Bindings Mismatch:
previous scope ScopeId(8): ["T", "_value"]
current  scope ScopeId(2): ["_value"]

tasks/coverage/typescript/tests/cases/conformance/types/intersection/operatorsAndIntersectionTypes.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Guid", "SerialNo", "b1", "b2", "b3", "b4", "createGuid", "createSerialNo", "guid", "map1", "map2", "n1", "n2", "s1", "s2", "s3", "s4", "s5", "serialNo"]
current  scope ScopeId(0): ["b1", "b2", "b3", "b4", "createGuid", "createSerialNo", "guid", "map1", "map2", "n1", "n2", "s1", "s2", "s3", "s4", "s5", "serialNo"]

tasks/coverage/typescript/tests/cases/conformance/types/literal/booleanLiteralTypes1.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["A1", "A2", "Item", "assertNever", "f1", "f10", "f11", "f12", "f13", "f2", "f20", "f21", "f3", "f4", "f5"]
current  scope ScopeId(0): ["assertNever", "f1", "f10", "f11", "f12", "f13", "f2", "f20", "f21", "f3", "f4", "f5"]

tasks/coverage/typescript/tests/cases/conformance/types/literal/booleanLiteralTypes2.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["A1", "A2", "Item", "assertNever", "f1", "f10", "f11", "f12", "f13", "f2", "f20", "f21", "f3", "f4", "f5"]
current  scope ScopeId(0): ["assertNever", "f1", "f10", "f11", "f12", "f13", "f2", "f20", "f21", "f3", "f4", "f5"]

tasks/coverage/typescript/tests/cases/conformance/types/literal/enumLiteralTypes1.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Choice", "Item", "NoYes", "UnknownYesNo", "YesNo", "assertNever", "f1", "f10", "f11", "f12", "f13", "f2", "f20", "f21", "f3", "f4", "f5"]
current  scope ScopeId(0): ["Choice", "assertNever", "f1", "f10", "f11", "f12", "f13", "f2", "f20", "f21", "f3", "f4", "f5"]
Bindings Mismatch:
previous scope ScopeId(1): ["Choice", "No", "Unknown", "Yes"]
current  scope ScopeId(1): ["Choice"]

tasks/coverage/typescript/tests/cases/conformance/types/literal/enumLiteralTypes2.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Choice", "Item", "NoYes", "UnknownYesNo", "YesNo", "assertNever", "f1", "f10", "f11", "f12", "f13", "f2", "f20", "f21", "f3", "f4", "f5"]
current  scope ScopeId(0): ["Choice", "assertNever", "f1", "f10", "f11", "f12", "f13", "f2", "f20", "f21", "f3", "f4", "f5"]
Bindings Mismatch:
previous scope ScopeId(1): ["Choice", "No", "Unknown", "Yes"]
current  scope ScopeId(1): ["Choice"]

tasks/coverage/typescript/tests/cases/conformance/types/literal/literalTypeWidening.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["E", "FAILURE", "LangCode", "Obj", "Result", "Set", "TestEvent", "a", "arr", "b", "doWork", "f1", "f2", "f3", "f4", "f5", "f6", "increment", "isFailure", "isSuccess", "keys", "langCodeSet", "langCodes", "onMouseOver", "result", "test", "x"]
current  scope ScopeId(0): ["E", "FAILURE", "Set", "a", "arr", "b", "doWork", "f1", "f2", "f3", "f4", "f5", "f6", "increment", "isFailure", "isSuccess", "keys", "langCodeSet", "langCodes", "onMouseOver", "result", "test", "x"]
Bindings Mismatch:
previous scope ScopeId(11): ["T"]
current  scope ScopeId(7): []
Bindings Mismatch:
previous scope ScopeId(12): ["T", "result"]
current  scope ScopeId(8): ["result"]
Bindings Mismatch:
previous scope ScopeId(13): ["T", "result"]
current  scope ScopeId(9): ["result"]
Bindings Mismatch:
previous scope ScopeId(18): ["K", "keys", "result"]
current  scope ScopeId(13): ["keys", "result"]
Bindings Mismatch:
previous scope ScopeId(20): ["K", "V", "obj"]
current  scope ScopeId(15): ["obj"]
Bindings Mismatch:
previous scope ScopeId(24): ["T", "a", "obj", "rest"]
current  scope ScopeId(17): ["a", "obj", "rest"]
Bindings Mismatch:
previous scope ScopeId(26): ["A", "B", "E"]
current  scope ScopeId(18): ["E"]

tasks/coverage/typescript/tests/cases/conformance/types/literal/literalTypes1.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Falsy", "f1", "f2", "f3", "f4", "f5", "one", "oneOrTwo", "two", "zero"]
current  scope ScopeId(0): ["f1", "f2", "f3", "f4", "f5", "one", "oneOrTwo", "two", "zero"]

tasks/coverage/typescript/tests/cases/conformance/types/literal/literalTypes2.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Bit", "C1", "C2", "E", "a", "aa", "append", "cond", "f1", "f10", "f11", "f12", "f2", "f20", "f3", "f4", "f5", "f6", "makeArray", "x1", "x10", "x11", "x2", "x3", "x4", "x5", "x6", "x7", "x8", "x9"]
current  scope ScopeId(0): ["C1", "C2", "E", "a", "aa", "append", "cond", "f1", "f10", "f11", "f12", "f2", "f20", "f3", "f4", "f5", "f6", "makeArray", "x1", "x10", "x11", "x2", "x3", "x4", "x5", "x6", "x7", "x8", "x9"]
Bindings Mismatch:
previous scope ScopeId(1): ["A", "B", "C", "E"]
current  scope ScopeId(1): ["E"]
Bindings Mismatch:
previous scope ScopeId(35): ["T", "x"]
current  scope ScopeId(27): ["x"]
Bindings Mismatch:
previous scope ScopeId(36): ["T", "a", "result", "x"]
current  scope ScopeId(28): ["a", "result", "x"]

tasks/coverage/typescript/tests/cases/conformance/types/literal/literalTypesAndDestructuring.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Foo", "a1", "a2", "a3", "a4", "b1", "b2", "b3", "b4", "bar", "x"]
current  scope ScopeId(0): ["a1", "a2", "a3", "a4", "b1", "b2", "b3", "b4", "bar"]
reference Mismatch:
previous reference ReferenceId(0): Some("x")
current  reference ReferenceId(0): None
reference Mismatch:
previous reference ReferenceId(1): Some("x")
current  reference ReferenceId(1): None
reference Mismatch:
previous reference ReferenceId(2): Some("x")
current  reference ReferenceId(2): None
reference Mismatch:
previous reference ReferenceId(4): Some("x")
current  reference ReferenceId(3): None
reference Mismatch:
previous reference ReferenceId(5): Some("x")
current  reference ReferenceId(4): None
reference Mismatch:
previous reference ReferenceId(6): Some("x")
current  reference ReferenceId(5): None
reference Mismatch:
previous reference ReferenceId(7): Some("x")
current  reference ReferenceId(6): None
reference Mismatch:
previous reference ReferenceId(8): Some("x")
current  reference ReferenceId(7): None

tasks/coverage/typescript/tests/cases/conformance/types/literal/numericLiteralTypes1.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["A1", "A2", "A3", "A4", "A5", "B1", "B2", "B3", "Item", "Tag", "assertNever", "f1", "f10", "f11", "f12", "f13", "f14", "f15", "f2", "f20", "f21", "f3", "f4", "f5"]
current  scope ScopeId(0): ["assertNever", "f1", "f10", "f11", "f12", "f13", "f14", "f15", "f2", "f20", "f21", "f3", "f4", "f5"]

tasks/coverage/typescript/tests/cases/conformance/types/literal/numericLiteralTypes2.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["A1", "A2", "A3", "A4", "A5", "B1", "B2", "B3", "Item", "Tag", "assertNever", "f1", "f10", "f11", "f12", "f13", "f14", "f15", "f2", "f20", "f21", "f3", "f4", "f5"]
current  scope ScopeId(0): ["assertNever", "f1", "f10", "f11", "f12", "f13", "f14", "f15", "f2", "f20", "f21", "f3", "f4", "f5"]

tasks/coverage/typescript/tests/cases/conformance/types/literal/stringEnumLiteralTypes1.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Choice", "Item", "NoYes", "UnknownYesNo", "YesNo", "assertNever", "f1", "f10", "f11", "f12", "f13", "f2", "f20", "f21", "f3", "f5"]
current  scope ScopeId(0): ["Choice", "assertNever", "f1", "f10", "f11", "f12", "f13", "f2", "f20", "f21", "f3", "f5"]
Bindings Mismatch:
previous scope ScopeId(1): ["Choice", "No", "Unknown", "Yes"]
current  scope ScopeId(1): ["Choice"]

tasks/coverage/typescript/tests/cases/conformance/types/literal/stringEnumLiteralTypes2.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Choice", "Item", "NoYes", "UnknownYesNo", "YesNo", "assertNever", "f1", "f10", "f11", "f12", "f13", "f2", "f20", "f21", "f3", "f5"]
current  scope ScopeId(0): ["Choice", "assertNever", "f1", "f10", "f11", "f12", "f13", "f2", "f20", "f21", "f3", "f5"]
Bindings Mismatch:
previous scope ScopeId(1): ["Choice", "No", "Unknown", "Yes"]
current  scope ScopeId(1): ["Choice"]

tasks/coverage/typescript/tests/cases/conformance/types/literal/stringMappingDeferralInConditionalTypes.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["A", "B", "C", "D", "E", "F", "G", "x1", "x2", "x3", "x4", "x5"]
current  scope ScopeId(0): ["x1", "x2", "x3", "x4", "x5"]

tasks/coverage/typescript/tests/cases/conformance/types/literal/stringMappingReduction.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["EMap", "EPlusFallback", "Keys", "T00", "T01", "T02", "T10", "T11", "T12", "T20", "T21", "T22", "T30", "T31", "T32", "VirtualEvent", "_virtualOn", "virtualOn"]
current  scope ScopeId(0): ["virtualOn"]
Bindings Mismatch:
previous scope ScopeId(19): ["T", "eventQrl"]
current  scope ScopeId(1): ["eventQrl"]
reference Mismatch:
previous reference ReferenceId(24): Some("_virtualOn")
current  reference ReferenceId(0): None

tasks/coverage/typescript/tests/cases/conformance/types/literal/templateLiteralTypes6.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Keyof", "Registry", "f2"]
current  scope ScopeId(0): ["f2"]
Bindings Mismatch:
previous scope ScopeId(4): ["Event", "Scope", "event", "scope"]
current  scope ScopeId(1): ["event", "scope"]

tasks/coverage/typescript/tests/cases/conformance/types/literal/templateLiteralTypes8.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["E", "Stringify", "z1", "z2"]
current  scope ScopeId(0): ["E", "z1", "z2"]
Bindings Mismatch:
previous scope ScopeId(1): ["E", "a", "b"]
current  scope ScopeId(1): ["E"]

tasks/coverage/typescript/tests/cases/conformance/types/localTypes/localTypes1.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(1): ["A", "C", "E", "I", "a"]
current  scope ScopeId(1): ["C", "E", "a"]
Bindings Mismatch:
previous scope ScopeId(2): ["A", "B", "C", "E"]
current  scope ScopeId(2): ["E"]
Bindings Mismatch:
previous scope ScopeId(7): ["A", "C", "E", "I", "a"]
current  scope ScopeId(5): ["C", "a"]
Bindings Mismatch:
previous scope ScopeId(8): ["A", "B", "C", "E"]
current  scope ScopeId(6): ["E"]
Bindings Mismatch:
previous scope ScopeId(13): ["E"]
current  scope ScopeId(9): []
Bindings Mismatch:
previous scope ScopeId(14): ["A", "B", "C", "E"]
current  scope ScopeId(10): ["E"]
Bindings Mismatch:
previous scope ScopeId(15): ["A", "C", "I", "a"]
current  scope ScopeId(11): ["C", "a"]
Bindings Mismatch:
previous scope ScopeId(19): ["A", "C", "J", "c"]
current  scope ScopeId(13): ["A", "c"]
Bindings Mismatch:
previous scope ScopeId(24): ["C", "E"]
current  scope ScopeId(16): ["C"]
Bindings Mismatch:
previous scope ScopeId(25): ["A", "B", "C", "E"]
current  scope ScopeId(17): ["E"]
Bindings Mismatch:
previous scope ScopeId(27): ["C", "E"]
current  scope ScopeId(19): ["C"]
Bindings Mismatch:
previous scope ScopeId(28): ["A", "B", "C", "E"]
current  scope ScopeId(20): ["E"]
Bindings Mismatch:
previous scope ScopeId(31): ["C", "E"]
current  scope ScopeId(23): ["C"]
Bindings Mismatch:
previous scope ScopeId(32): ["A", "B", "C", "E"]
current  scope ScopeId(24): ["E"]
Bindings Mismatch:
previous scope ScopeId(34): ["C", "E"]
current  scope ScopeId(26): ["C"]
Bindings Mismatch:
previous scope ScopeId(35): ["A", "B", "C", "E"]
current  scope ScopeId(27): ["E"]
Bindings Mismatch:
previous scope ScopeId(37): ["C", "E"]
current  scope ScopeId(29): ["C"]
Bindings Mismatch:
previous scope ScopeId(38): ["A", "B", "C", "E"]
current  scope ScopeId(30): ["E"]
reference Mismatch:
previous reference ReferenceId(67): Some("E")
current  reference ReferenceId(11): None
reference Mismatch:
previous reference ReferenceId(66): Some("E")
current  reference ReferenceId(19): None
reference Mismatch:
previous reference ReferenceId(14): Some("E")
current  reference ReferenceId(22): None
reference Mismatch:
previous reference ReferenceId(76): Some("E")
current  reference ReferenceId(25): None
reference Mismatch:
previous reference ReferenceId(75): Some("E")
current  reference ReferenceId(33): None
reference Mismatch:
previous reference ReferenceId(24): Some("E")
current  reference ReferenceId(37): None
reference Mismatch:
previous reference ReferenceId(32): Some("E")
current  reference ReferenceId(41): None
reference Mismatch:
previous reference ReferenceId(85): Some("E")
current  reference ReferenceId(43): None
reference Mismatch:
previous reference ReferenceId(84): Some("E")
current  reference ReferenceId(51): None
reference Mismatch:
previous reference ReferenceId(94): Some("E")
current  reference ReferenceId(53): None
reference Mismatch:
previous reference ReferenceId(93): Some("E")
current  reference ReferenceId(61): None
reference Mismatch:
previous reference ReferenceId(103): Some("E")
current  reference ReferenceId(63): None
reference Mismatch:
previous reference ReferenceId(102): Some("E")
current  reference ReferenceId(71): None
reference Mismatch:
previous reference ReferenceId(112): Some("E")
current  reference ReferenceId(72): None
reference Mismatch:
previous reference ReferenceId(111): Some("E")
current  reference ReferenceId(80): None
reference Mismatch:
previous reference ReferenceId(121): Some("E")
current  reference ReferenceId(82): None
reference Mismatch:
previous reference ReferenceId(120): Some("E")
current  reference ReferenceId(90): None

tasks/coverage/typescript/tests/cases/conformance/types/localTypes/localTypes3.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(3): ["X", "Y"]
current  scope ScopeId(3): []
Bindings Mismatch:
previous scope ScopeId(6): ["C", "X", "x"]
current  scope ScopeId(6): ["C", "x"]
Bindings Mismatch:
previous scope ScopeId(7): ["Y"]
current  scope ScopeId(7): []
Bindings Mismatch:
previous scope ScopeId(10): ["C", "X", "Y", "x", "y"]
current  scope ScopeId(10): ["C", "x", "y"]

tasks/coverage/typescript/tests/cases/conformance/types/localTypes/localTypes5.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(1): ["A", "X", "x"]
current  scope ScopeId(1): ["X", "x"]
Bindings Mismatch:
previous scope ScopeId(3): ["B", "C"]
current  scope ScopeId(3): []
Bindings Mismatch:
previous scope ScopeId(4): ["D", "Y"]
current  scope ScopeId(4): ["Y"]
Bindings Mismatch:
previous scope ScopeId(5): ["E"]
current  scope ScopeId(5): []

tasks/coverage/typescript/tests/cases/conformance/types/mapped/mappedTypeConstraints.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["TargetProps", "f0", "f1", "f2", "f3", "f4", "modifier"]
current  scope ScopeId(0): ["f0", "f1", "f2", "f3", "f4", "modifier"]
Bindings Mismatch:
previous scope ScopeId(1): ["T", "obj"]
current  scope ScopeId(1): ["obj"]
Bindings Mismatch:
previous scope ScopeId(2): ["T", "obj"]
current  scope ScopeId(2): ["obj"]
Bindings Mismatch:
previous scope ScopeId(3): ["T", "U", "obj"]
current  scope ScopeId(3): ["obj"]
Bindings Mismatch:
previous scope ScopeId(4): ["T", "U", "obj"]
current  scope ScopeId(4): ["obj"]
Bindings Mismatch:
previous scope ScopeId(5): ["T", "obj"]
current  scope ScopeId(5): ["obj"]
Bindings Mismatch:
previous scope ScopeId(7): ["T", "bar", "rest", "targetProps"]
current  scope ScopeId(6): ["bar", "rest", "targetProps"]

tasks/coverage/typescript/tests/cases/conformance/types/mapped/mappedTypeIndexSignatureModifiers.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Identity", "Obj1", "Obj10", "Obj11", "Obj12", "Obj13", "Obj2", "Obj3", "Obj4", "Obj5", "Obj6", "Obj7", "Obj8", "Obj9", "Res1", "Res10", "Res11", "Res12", "Res13", "Res2", "Res3", "Res4", "Res5", "Res6", "Res7", "Res8", "Res9", "StrippingIdentity", "StrippingPick"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/conformance/types/mapped/mappedTypeModifiers.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["B", "BP", "BPR", "BR", "Boxified", "Foo", "T", "TP", "TPR", "TR", "b00", "b01", "b02", "b03", "b04", "f1", "f2", "f3", "f4", "v00", "v01", "v02", "v03", "v04"]
current  scope ScopeId(0): ["b00", "b01", "b02", "b03", "b04", "f1", "f2", "f3", "f4", "v00", "v01", "v02", "v03", "v04"]

tasks/coverage/typescript/tests/cases/conformance/types/mapped/mappedTypeOverlappingStringEnumKeys.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["AlienAnimalTypes", "AlienCat", "AnimalTypes", "CatMap", "Cats", "TerrestrialAnimalTypes", "TerrestrialCat", "catMap"]
current  scope ScopeId(0): ["AlienAnimalTypes", "TerrestrialAnimalTypes", "catMap"]
Bindings Mismatch:
previous scope ScopeId(1): ["CAT", "DOG", "TerrestrialAnimalTypes"]
current  scope ScopeId(1): ["TerrestrialAnimalTypes"]
Bindings Mismatch:
previous scope ScopeId(2): ["AlienAnimalTypes", "CAT"]
current  scope ScopeId(2): ["AlienAnimalTypes"]

tasks/coverage/typescript/tests/cases/conformance/types/mapped/mappedTypesGenericTuples.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["A", "B", "C", "D", "K", "K0", "K1", "KA", "KB", "KC", "KD", "Keys", "Keys1", "Keys2", "M", "M0", "M1", "R1", "R2", "T1", "T2", "T3", "T4", "V0", "V1"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/conformance/types/members/augmentedTypeBracketAccessIndexSignature.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Bar", "Foo", "Function", "Object", "a", "b"]
current  scope ScopeId(0): ["a", "b"]

tasks/coverage/typescript/tests/cases/conformance/types/members/objectTypeHidingMembersOfObject.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["C", "I", "a", "b", "c", "i", "r1", "r2", "r3", "r4"]
current  scope ScopeId(0): ["C", "a", "b", "c", "i", "r1", "r2", "r3", "r4"]

tasks/coverage/typescript/tests/cases/conformance/types/members/objectTypePropertyAccess.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["C", "I", "a", "c", "i", "r1", "r10", "r11", "r2", "r3", "r4", "r5", "r6", "r7", "r8", "r9"]
current  scope ScopeId(0): ["C", "a", "c", "i", "r1", "r10", "r11", "r2", "r3", "r4", "r5", "r6", "r7", "r8", "r9"]

tasks/coverage/typescript/tests/cases/conformance/types/members/objectTypeWithCallSignatureAppearsToBeFunctionType.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["I", "b", "i", "r2", "r2b", "r4", "rb4"]
current  scope ScopeId(0): ["b", "i", "r2", "r2b", "r4", "rb4"]

tasks/coverage/typescript/tests/cases/conformance/types/members/objectTypeWithCallSignatureHidingMembersOfExtendedFunction.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Function", "I", "i", "r1", "r1b", "r1c", "r1d", "r1e", "r2", "r2b", "r2c", "r2d", "r2e", "x"]
current  scope ScopeId(0): ["i", "r1", "r1b", "r1c", "r1d", "r1e", "r2", "r2b", "r2c", "r2d", "r2e", "x"]

tasks/coverage/typescript/tests/cases/conformance/types/members/objectTypeWithCallSignatureHidingMembersOfFunction.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["I", "i", "r1", "r1b", "r1c", "r2", "r2b", "r2c", "x"]
current  scope ScopeId(0): ["i", "r1", "r1b", "r1c", "r2", "r2b", "r2c", "x"]

tasks/coverage/typescript/tests/cases/conformance/types/members/objectTypeWithConstructSignatureHidingMembersOfExtendedFunction.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Function", "I", "i", "r1", "r1b", "r1c", "r1d", "r1e", "r2", "r2b", "r2c", "r2d", "r2e", "x"]
current  scope ScopeId(0): ["i", "r1", "r1b", "r1c", "r1d", "r1e", "r2", "r2b", "r2c", "r2d", "r2e", "x"]

tasks/coverage/typescript/tests/cases/conformance/types/members/objectTypeWithConstructSignatureHidingMembersOfFunction.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["I", "i", "r1", "r1b", "r1c", "r2", "r2b", "r2c", "x"]
current  scope ScopeId(0): ["i", "r1", "r1b", "r1c", "r2", "r2b", "r2c", "x"]

tasks/coverage/typescript/tests/cases/conformance/types/members/objectTypeWithNumericProperty.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["C", "I", "a", "b", "c", "i", "r1", "r2", "r3", "r4"]
current  scope ScopeId(0): ["C", "a", "b", "c", "i", "r1", "r2", "r3", "r4"]

tasks/coverage/typescript/tests/cases/conformance/types/members/objectTypeWithStringNamedPropertyOfIllegalCharacters.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["C", "I", "a", "b", "c", "i", "r", "r2", "r3", "r4"]
current  scope ScopeId(0): ["C", "a", "b", "c", "i", "r", "r2", "r3", "r4"]

tasks/coverage/typescript/tests/cases/conformance/types/members/typesWithOptionalProperty.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["I", "a", "b", "c", "d", "i"]
current  scope ScopeId(0): ["a", "b", "c", "d", "i"]

tasks/coverage/typescript/tests/cases/conformance/types/members/typesWithSpecializedCallSignatures.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Base", "C", "Derived1", "Derived2", "I", "a", "c", "i", "r1", "r2", "r3"]
current  scope ScopeId(0): ["Base", "C", "Derived1", "Derived2", "a", "c", "i", "r1", "r2", "r3"]

tasks/coverage/typescript/tests/cases/conformance/types/members/typesWithSpecializedConstructSignatures.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Base", "C", "Derived1", "Derived2", "I", "a", "c", "i", "r1", "r2", "r3"]
current  scope ScopeId(0): ["Base", "C", "Derived1", "Derived2", "a", "c", "i", "r1", "r2", "r3"]

tasks/coverage/typescript/tests/cases/conformance/types/namedTypes/classWithOnlyPublicMembersEquivalentToInterface.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["C", "I", "c", "i"]
current  scope ScopeId(0): ["C", "c", "i"]

tasks/coverage/typescript/tests/cases/conformance/types/namedTypes/classWithOnlyPublicMembersEquivalentToInterface2.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["C", "I", "c", "i"]
current  scope ScopeId(0): ["C", "c", "i"]

tasks/coverage/typescript/tests/cases/conformance/types/namedTypes/classWithOptionalParameter.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(3): ["T"]
current  scope ScopeId(3): []

tasks/coverage/typescript/tests/cases/conformance/types/namedTypes/genericInstantiationEquivalentToObjectLiteral.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Pair", "x", "y"]
current  scope ScopeId(0): ["x", "y"]

tasks/coverage/typescript/tests/cases/conformance/types/never/neverInference.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Comparator", "LinkedList", "Node", "a1", "a2", "list", "neverArray"]
current  scope ScopeId(0): ["a1", "a2", "list", "neverArray"]

tasks/coverage/typescript/tests/cases/conformance/types/never/neverUnionIntersection.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["T01", "T02", "T03", "T04", "T05", "T06", "T07", "T08", "T09", "T10", "T11", "T12"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/conformance/types/objectTypeLiteral/callSignatures/callSignatureWithoutAnnotationsOrBody.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["I", "a", "foo", "i", "r", "r2", "r3", "r4", "r5"]
current  scope ScopeId(0): ["a", "foo", "i", "r", "r2", "r3", "r4", "r5"]

tasks/coverage/typescript/tests/cases/conformance/types/objectTypeLiteral/callSignatures/callSignatureWithoutReturnTypeAnnotationInference.ts
semantic error: Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript
Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript
Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript
Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript

tasks/coverage/typescript/tests/cases/conformance/types/objectTypeLiteral/callSignatures/callSignaturesThatDifferOnlyByReturnType.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["I", "I2", "I3", "T", "a", "a2"]
current  scope ScopeId(0): ["a", "a2"]

tasks/coverage/typescript/tests/cases/conformance/types/objectTypeLiteral/callSignatures/callSignaturesThatDifferOnlyByReturnType3.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["I", "I2"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/conformance/types/objectTypeLiteral/callSignatures/callSignaturesWithOptionalParameters.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["C", "I", "a", "b", "c", "f", "f2", "foo", "i"]
current  scope ScopeId(0): ["C", "a", "b", "c", "f", "f2", "foo", "i"]

tasks/coverage/typescript/tests/cases/conformance/types/objectTypeLiteral/callSignatures/callSignaturesWithOptionalParameters2.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["C", "I", "a", "c", "foo", "foo2", "i"]
current  scope ScopeId(0): ["C", "a", "c", "foo", "foo2", "i"]

tasks/coverage/typescript/tests/cases/conformance/types/objectTypeLiteral/callSignatures/identicalCallSignatures.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["I", "I2", "T", "a"]
current  scope ScopeId(0): ["a"]

tasks/coverage/typescript/tests/cases/conformance/types/objectTypeLiteral/callSignatures/identicalCallSignatures2.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Base", "I", "I2"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/conformance/types/objectTypeLiteral/callSignatures/identicalCallSignatures3.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["I", "I2"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/conformance/types/objectTypeLiteral/callSignatures/parametersWithNoAnnotationAreAny.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["C", "I", "a", "b", "f", "f2", "f3", "foo"]
current  scope ScopeId(0): ["C", "a", "b", "f", "f2", "f3", "foo"]
Bindings Mismatch:
previous scope ScopeId(4): ["T", "x"]
current  scope ScopeId(4): ["x"]

tasks/coverage/typescript/tests/cases/conformance/types/objectTypeLiteral/callSignatures/specializedSignatureIsSubtypeOfNonSpecializedSignature.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["C", "C2", "C3", "I", "I2", "I3", "T", "a", "a2", "a3", "foo"]
current  scope ScopeId(0): ["C", "C2", "C3", "a", "a2", "a3", "foo"]
Bindings Mismatch:
previous scope ScopeId(8): ["T"]
current  scope ScopeId(4): []
Bindings Mismatch:
previous scope ScopeId(13): ["T"]
current  scope ScopeId(6): []

tasks/coverage/typescript/tests/cases/conformance/types/objectTypeLiteral/callSignatures/stringLiteralTypesInImplementationSignatures.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["C", "I", "a", "b", "f", "f2", "foo"]
current  scope ScopeId(0): ["C", "a", "b", "f", "f2", "foo"]

tasks/coverage/typescript/tests/cases/conformance/types/objectTypeLiteral/callSignatures/typeParameterAsTypeArgument.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["C", "I", "foo"]
current  scope ScopeId(0): ["C", "foo"]
Bindings Mismatch:
previous scope ScopeId(1): ["T", "U", "x", "y"]
current  scope ScopeId(1): ["x", "y"]
Bindings Mismatch:
previous scope ScopeId(2): ["T", "U"]
current  scope ScopeId(2): []

tasks/coverage/typescript/tests/cases/conformance/types/objectTypeLiteral/callSignatures/typeParameterUsedAsTypeParameterConstraint.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(1): ["T", "U", "x", "y"]
current  scope ScopeId(1): ["x", "y"]
Bindings Mismatch:
previous scope ScopeId(2): ["T", "U", "x", "y"]
current  scope ScopeId(2): ["x", "y"]
Bindings Mismatch:
previous scope ScopeId(3): ["T", "U", "x", "y"]
current  scope ScopeId(3): ["x", "y"]
Bindings Mismatch:
previous scope ScopeId(4): ["T", "U", "x", "y"]
current  scope ScopeId(4): ["x", "y"]
Bindings Mismatch:
previous scope ScopeId(5): ["T", "U", "x", "y"]
current  scope ScopeId(5): ["x", "y"]
Bindings Mismatch:
previous scope ScopeId(6): ["T", "U", "x", "y"]
current  scope ScopeId(6): ["x", "y"]

tasks/coverage/typescript/tests/cases/conformance/types/objectTypeLiteral/callSignatures/typeParameterUsedAsTypeParameterConstraint2.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(1): ["T", "U", "bar", "x", "y"]
current  scope ScopeId(1): ["bar", "x", "y"]
Bindings Mismatch:
previous scope ScopeId(2): ["V", "W", "baz"]
current  scope ScopeId(2): ["baz"]
Bindings Mismatch:
previous scope ScopeId(3): ["X", "Y", "a", "b"]
current  scope ScopeId(3): ["a", "b"]
Bindings Mismatch:
previous scope ScopeId(4): ["T", "U", "bar", "x", "y"]
current  scope ScopeId(4): ["bar", "x", "y"]
Bindings Mismatch:
previous scope ScopeId(5): ["V", "W", "baz"]
current  scope ScopeId(5): ["baz"]
Bindings Mismatch:
previous scope ScopeId(6): ["X", "Y", "a", "b"]
current  scope ScopeId(6): ["a", "b"]
Bindings Mismatch:
previous scope ScopeId(7): ["T", "U", "bar", "x", "y"]
current  scope ScopeId(7): ["bar", "x", "y"]
Bindings Mismatch:
previous scope ScopeId(8): ["V", "W", "g"]
current  scope ScopeId(8): ["g"]
Bindings Mismatch:
previous scope ScopeId(9): ["X", "Y", "a", "b"]
current  scope ScopeId(9): ["a", "b"]
Bindings Mismatch:
previous scope ScopeId(10): ["T", "U", "bar", "x", "y"]
current  scope ScopeId(10): ["bar", "x", "y"]
Bindings Mismatch:
previous scope ScopeId(11): ["V", "W", "g"]
current  scope ScopeId(11): ["g"]
Bindings Mismatch:
previous scope ScopeId(12): ["X", "Y", "a", "b", "baz"]
current  scope ScopeId(12): ["a", "b", "baz"]
Bindings Mismatch:
previous scope ScopeId(13): ["T", "U", "bar", "x", "y"]
current  scope ScopeId(13): ["bar", "x", "y"]
Bindings Mismatch:
previous scope ScopeId(14): ["V", "W", "g"]
current  scope ScopeId(14): ["g"]
Bindings Mismatch:
previous scope ScopeId(15): ["X", "Y", "a", "b"]
current  scope ScopeId(15): ["a", "b"]
Bindings Mismatch:
previous scope ScopeId(16): ["T", "U", "bar", "x", "y"]
current  scope ScopeId(16): ["bar", "x", "y"]
Bindings Mismatch:
previous scope ScopeId(17): ["V", "W", "g"]
current  scope ScopeId(17): ["g"]
Bindings Mismatch:
previous scope ScopeId(18): ["X", "Y", "a", "b"]
current  scope ScopeId(18): ["a", "b"]

tasks/coverage/typescript/tests/cases/conformance/types/objectTypeLiteral/callSignatures/typeParameterUsedAsTypeParameterConstraint3.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["I", "I2"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/conformance/types/objectTypeLiteral/constructSignatures/constructSignaturesWithIdenticalOverloads.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["C", "C2", "I", "I2", "a", "b", "i", "i2", "r1", "r2", "r3", "r4", "r5", "r6"]
current  scope ScopeId(0): ["C", "C2", "a", "b", "i", "i2", "r1", "r2", "r3", "r4", "r5", "r6"]
Bindings Mismatch:
previous scope ScopeId(5): ["T"]
current  scope ScopeId(3): []

tasks/coverage/typescript/tests/cases/conformance/types/objectTypeLiteral/constructSignatures/constructSignaturesWithOverloads.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["C", "C2", "I", "I2", "a", "b", "i", "i2", "r1", "r2", "r3", "r4", "r5", "r6"]
current  scope ScopeId(0): ["C", "C2", "a", "b", "i", "i2", "r1", "r2", "r3", "r4", "r5", "r6"]
Bindings Mismatch:
previous scope ScopeId(5): ["T"]
current  scope ScopeId(3): []

tasks/coverage/typescript/tests/cases/conformance/types/objectTypeLiteral/constructSignatures/constructSignaturesWithOverloadsThatDifferOnlyByReturnType.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["C", "C2", "I", "I2", "a", "b"]
current  scope ScopeId(0): ["C", "C2", "a", "b"]
Bindings Mismatch:
previous scope ScopeId(3): ["T"]
current  scope ScopeId(3): []

tasks/coverage/typescript/tests/cases/conformance/types/objectTypeLiteral/indexSignatures/numericIndexingResults.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["C", "I", "a", "b", "b2", "c", "i", "r1", "r1a", "r1b", "r2", "r2a", "r2b", "r3", "r4", "r5", "r6"]
current  scope ScopeId(0): ["C", "a", "b", "b2", "c", "i", "r1", "r1a", "r1b", "r2", "r2a", "r2b", "r3", "r4", "r5", "r6"]

tasks/coverage/typescript/tests/cases/conformance/types/objectTypeLiteral/indexSignatures/stringIndexingResults.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["C", "I", "a", "b", "c", "i", "r1", "r10", "r11", "r12", "r2", "r3", "r4", "r5", "r6", "r7", "r8", "r9"]
current  scope ScopeId(0): ["C", "a", "b", "c", "i", "r1", "r10", "r11", "r12", "r2", "r3", "r4", "r5", "r6", "r7", "r8", "r9"]

tasks/coverage/typescript/tests/cases/conformance/types/objectTypeLiteral/methodSignatures/functionLiterals.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["T", "b", "b2", "c", "c2"]
current  scope ScopeId(0): ["b", "b2", "c", "c2"]

tasks/coverage/typescript/tests/cases/conformance/types/objectTypeLiteral/methodSignatures/methodSignaturesWithOverloads2.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["T", "c", "c2"]
current  scope ScopeId(0): ["c", "c2"]

tasks/coverage/typescript/tests/cases/conformance/types/objectTypeLiteral/propertySignatures/propertyNameWithoutTypeAnnotation.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["C", "I", "a", "b", "r1", "r2", "r3", "r4"]
current  scope ScopeId(0): ["C", "a", "b", "r1", "r2", "r3", "r4"]

tasks/coverage/typescript/tests/cases/conformance/types/objectTypeLiteral/propertySignatures/propertyNamesOfReservedWords.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["C", "E", "I", "a", "c", "i", "r1", "r2", "r3", "r4", "r5", "r6", "r7", "r8"]
current  scope ScopeId(0): ["C", "E", "a", "c", "i", "r1", "r2", "r3", "r4", "r5", "r6", "r7", "r8"]
Bindings Mismatch:
previous scope ScopeId(3): ["E", "abstract", "as", "boolean", "break", "byte", "case", "catch", "char", "class", "const", "continue", "debugger", "default", "delete", "do", "double", "else", "enum", "export", "extends", "false", "final", "finally", "float", "for", "function", "goto", "if", "implements", "import", "in", "instanceof", "int", "interface", "is", "long", "namespace", "native", "new", "null", "package", "private", "protected", "public", "return", "short", "static", "super", "switch", "synchronized", "this", "throw", "throws", "transient", "true", "try", "typeof", "use", "var", "void", "volatile", "while", "with"]
current  scope ScopeId(2): ["E"]

tasks/coverage/typescript/tests/cases/conformance/types/objectTypeLiteral/propertySignatures/stringNamedPropertyAccess.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["C", "I", "a", "b", "c", "i", "r1", "r1b", "r2", "r3", "r4"]
current  scope ScopeId(0): ["C", "a", "b", "c", "i", "r1", "r1b", "r2", "r3", "r4"]

tasks/coverage/typescript/tests/cases/conformance/types/primitives/boolean/extendBooleanInterface.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Boolean", "a", "b", "c", "d", "x"]
current  scope ScopeId(0): ["a", "b", "c", "d", "x"]

tasks/coverage/typescript/tests/cases/conformance/types/primitives/number/extendNumberInterface.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Number", "a", "b", "c", "d", "x"]
current  scope ScopeId(0): ["a", "b", "c", "d", "x"]

tasks/coverage/typescript/tests/cases/conformance/types/primitives/number/validNumberAssignments.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(1): ["A", "E"]
current  scope ScopeId(1): ["E"]

tasks/coverage/typescript/tests/cases/conformance/types/primitives/string/extendStringInterface.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["String", "a", "b", "c", "d", "x"]
current  scope ScopeId(0): ["a", "b", "c", "d", "x"]

tasks/coverage/typescript/tests/cases/conformance/types/primitives/undefined/invalidUndefinedValues.ts
semantic error: Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript

tasks/coverage/typescript/tests/cases/conformance/types/primitives/undefined/validUndefinedAssignments.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["C", "I", "a", "b", "c", "d", "e", "f", "g", "h", "i", "x"]
current  scope ScopeId(0): ["C", "a", "b", "c", "d", "e", "f", "g", "h", "i", "x"]
Bindings Mismatch:
previous scope ScopeId(4): ["T", "a"]
current  scope ScopeId(2): ["a"]

tasks/coverage/typescript/tests/cases/conformance/types/rest/genericObjectRest.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Item", "a", "f1", "f2", "f3", "f4", "sa", "sb"]
current  scope ScopeId(0): ["a", "f1", "f2", "f3", "f4", "sa", "sb"]
Bindings Mismatch:
previous scope ScopeId(1): ["T", "a1", "a2", "a3", "a4", "a5", "b2", "obj", "r0", "r1", "r2", "r3", "r4", "r5"]
current  scope ScopeId(1): ["a1", "a2", "a3", "a4", "a5", "b2", "obj", "r0", "r1", "r2", "r3", "r4", "r5"]
Bindings Mismatch:
previous scope ScopeId(2): ["T", "a1", "b1", "obj", "r1"]
current  scope ScopeId(2): ["a1", "b1", "obj", "r1"]
Bindings Mismatch:
previous scope ScopeId(3): ["K1", "K2", "T", "a1", "a2", "k1", "k2", "obj", "r1"]
current  scope ScopeId(3): ["a1", "a2", "k1", "k2", "obj", "r1"]
Bindings Mismatch:
previous scope ScopeId(5): ["K1", "K2", "a1", "a2", "k1", "k2", "obj", "r1"]
current  scope ScopeId(4): ["a1", "a2", "k1", "k2", "obj", "r1"]

tasks/coverage/typescript/tests/cases/conformance/types/rest/objectRestReadonly.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["ObjType", "foo", "obj", "rest"]
current  scope ScopeId(0): ["foo", "obj", "rest"]

tasks/coverage/typescript/tests/cases/conformance/types/specifyingTypes/typeLiterals/arrayOfFunctionTypes3.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["C", "T", "a", "a2", "b", "b2", "c", "c2", "r2", "r3", "r4", "r5", "r5b", "r6", "r7", "x", "y", "z", "z2"]
current  scope ScopeId(0): ["C", "a", "a2", "b", "b2", "c", "c2", "r2", "r3", "r4", "r5", "r5b", "r6", "r7", "x", "y", "z", "z2"]

tasks/coverage/typescript/tests/cases/conformance/types/specifyingTypes/typeLiterals/functionLiteral.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["T", "x", "y", "y2", "z"]
current  scope ScopeId(0): ["x", "y", "y2", "z"]
Bindings Mismatch:
previous scope ScopeId(2): ["T", "x"]
current  scope ScopeId(2): ["x"]

tasks/coverage/typescript/tests/cases/conformance/types/specifyingTypes/typeLiterals/functionLiteralForOverloads.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["T", "f", "f2", "f3", "f4"]
current  scope ScopeId(0): ["f", "f2", "f3", "f4"]

tasks/coverage/typescript/tests/cases/conformance/types/specifyingTypes/typeLiterals/functionLiteralForOverloads2.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(5): ["T"]
current  scope ScopeId(3): []

tasks/coverage/typescript/tests/cases/conformance/types/specifyingTypes/typeQueries/typeQueryOnClass.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(1): ["T"]
current  scope ScopeId(1): []
Bindings Mismatch:
previous scope ScopeId(18): ["T"]
current  scope ScopeId(14): []

tasks/coverage/typescript/tests/cases/conformance/types/specifyingTypes/typeQueries/typeQueryWithReservedWords.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Controller", "IScope"]
current  scope ScopeId(0): ["Controller"]

tasks/coverage/typescript/tests/cases/conformance/types/specifyingTypes/typeQueries/typeofModuleWithoutExports.ts
semantic error: Semantic Collector failed after transform
Missing SymbolId: M
Missing SymbolId: _M
Missing ReferenceId: M
Missing ReferenceId: M

tasks/coverage/typescript/tests/cases/conformance/types/spread/objectSpread.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["C", "Header", "a", "addAfter", "addBefore", "anything", "c", "changeTypeAfter", "changeTypeBoth", "combined", "combinedAfter", "combinedNestedChangeType", "conditionalSpreadBoolean", "conditionalSpreadNumber", "conditionalSpreadString", "container", "cplus", "exclusive", "f", "from16326", "genericSpread", "getter", "nested", "o", "o2", "op", "overlap", "overlapConflict", "override", "overwriteId", "propertyNested", "shortCutted", "spreadAny", "spreadC", "spreadFunc", "spreadNonPrimitive", "swap"]
current  scope ScopeId(0): ["C", "a", "addAfter", "addBefore", "anything", "c", "changeTypeAfter", "changeTypeBoth", "combined", "combinedAfter", "combinedNestedChangeType", "conditionalSpreadBoolean", "conditionalSpreadNumber", "conditionalSpreadString", "container", "cplus", "exclusive", "f", "from16326", "genericSpread", "getter", "nested", "o", "o2", "op", "overlap", "overlapConflict", "override", "overwriteId", "propertyNested", "shortCutted", "spreadAny", "spreadC", "spreadFunc", "spreadNonPrimitive", "swap"]
Bindings Mismatch:
previous scope ScopeId(13): ["T", "U", "t", "u"]
current  scope ScopeId(11): ["t", "u"]
Bindings Mismatch:
previous scope ScopeId(14): ["T", "U", "obj", "t", "u", "v", "w", "x01", "x02", "x03", "x04", "x05", "x06", "x07", "x09", "x10", "x11", "x12", "x13", "x14", "x15", "x16", "x17", "x18"]
current  scope ScopeId(12): ["obj", "t", "u", "v", "w", "x01", "x02", "x03", "x04", "x05", "x06", "x07", "x09", "x10", "x11", "x12", "x13", "x14", "x15", "x16", "x17", "x18"]

tasks/coverage/typescript/tests/cases/conformance/types/spread/objectSpreadRepeatedNullCheckPerf.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Props", "parseWithSpread"]
current  scope ScopeId(0): ["parseWithSpread"]

tasks/coverage/typescript/tests/cases/conformance/types/spread/spreadContextualTypedBindingPattern.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Person", "age", "alice", "bob", "naam"]
current  scope ScopeId(0): ["age", "naam"]
reference Mismatch:
previous reference ReferenceId(2): Some("bob")
current  reference ReferenceId(0): None
reference Mismatch:
previous reference ReferenceId(3): Some("alice")
current  reference ReferenceId(1): None

tasks/coverage/typescript/tests/cases/conformance/types/spread/spreadExcessProperty.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["A", "a1", "extra1"]
current  scope ScopeId(0): ["a1", "extra1"]

tasks/coverage/typescript/tests/cases/conformance/types/spread/spreadNonPrimitive.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["o", "x"]
current  scope ScopeId(0): ["x"]
reference Mismatch:
previous reference ReferenceId(0): Some("o")
current  reference ReferenceId(0): None

tasks/coverage/typescript/tests/cases/conformance/types/spread/spreadOverwritesProperty.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["ab", "abq", "g", "h", "unused1", "unused2", "unused3"]
current  scope ScopeId(0): ["g", "h", "unused1", "unused2", "unused3"]
reference Mismatch:
previous reference ReferenceId(0): Some("ab")
current  reference ReferenceId(0): None
reference Mismatch:
previous reference ReferenceId(1): Some("ab")
current  reference ReferenceId(1): None
reference Mismatch:
previous reference ReferenceId(2): Some("ab")
current  reference ReferenceId(2): None
reference Mismatch:
previous reference ReferenceId(3): Some("abq")
current  reference ReferenceId(3): None

tasks/coverage/typescript/tests/cases/conformance/types/spread/spreadUnion4.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["a", "b", "c"]
current  scope ScopeId(0): ["c"]
reference Mismatch:
previous reference ReferenceId(0): Some("a")
current  reference ReferenceId(0): None
reference Mismatch:
previous reference ReferenceId(1): Some("b")
current  reference ReferenceId(1): None

tasks/coverage/typescript/tests/cases/conformance/types/stringLiteral/stringLiteralCheckedInIf01.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["S", "T", "f"]
current  scope ScopeId(0): ["f"]

tasks/coverage/typescript/tests/cases/conformance/types/stringLiteral/stringLiteralCheckedInIf02.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["S", "T", "f", "isS"]
current  scope ScopeId(0): ["f", "isS"]

tasks/coverage/typescript/tests/cases/conformance/types/stringLiteral/stringLiteralMatchedInSwitch01.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["S", "T", "foo"]
current  scope ScopeId(0): ["foo"]

tasks/coverage/typescript/tests/cases/conformance/types/stringLiteral/stringLiteralTypeAssertion01.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["S", "T", "s", "str", "t"]
current  scope ScopeId(0): ["s", "str", "t"]

tasks/coverage/typescript/tests/cases/conformance/types/thisType/contextualThisType.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["X", "Y", "x", "y"]
current  scope ScopeId(0): ["x", "y"]

tasks/coverage/typescript/tests/cases/conformance/types/thisType/fluentInterfaces.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["A", "B", "C", "c", "z"]
current  scope ScopeId(0): ["c", "z"]

tasks/coverage/typescript/tests/cases/conformance/types/thisType/inferThisType.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Check", "This", "r1", "r2"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/conformance/types/thisType/thisTypeAndConstraints.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(3): ["T", "g", "x"]
current  scope ScopeId(3): ["g", "x"]
Bindings Mismatch:
previous scope ScopeId(4): ["U", "x"]
current  scope ScopeId(4): ["x"]
Bindings Mismatch:
previous scope ScopeId(5): ["T"]
current  scope ScopeId(5): []
Bindings Mismatch:
previous scope ScopeId(7): ["U", "x"]
current  scope ScopeId(7): ["x"]

tasks/coverage/typescript/tests/cases/conformance/types/thisType/thisTypeInClasses.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["C1", "C2", "C3", "C5", "Foo"]
current  scope ScopeId(0): ["C1", "C2", "C3", "C5"]

tasks/coverage/typescript/tests/cases/conformance/types/thisType/thisTypeInFunctions4.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["CorrectObject", "WrongObject", "problemFunction"]
current  scope ScopeId(0): ["problemFunction"]
Bindings Mismatch:
previous scope ScopeId(6): ["T", "name"]
current  scope ScopeId(2): ["name"]

tasks/coverage/typescript/tests/cases/conformance/types/thisType/thisTypeInInterfaces.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Foo", "I1", "I2", "I3"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/conformance/types/thisType/thisTypeInObjectLiterals.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["I", "i", "impl", "mutuallyRecursive", "o"]
current  scope ScopeId(0): ["i", "impl", "mutuallyRecursive", "o"]

tasks/coverage/typescript/tests/cases/conformance/types/thisType/thisTypeInTaggedTemplateCall.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(2): ["T", "strings"]
current  scope ScopeId(2): ["strings"]

tasks/coverage/typescript/tests/cases/conformance/types/thisType/thisTypeInTuples.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Array", "a", "b", "c", "t"]
current  scope ScopeId(0): ["a", "b", "c", "t"]

tasks/coverage/typescript/tests/cases/conformance/types/thisType/thisTypeOptionalCall.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(1): ["A", "R", "T", "fn", "obj"]
current  scope ScopeId(1): ["fn", "obj"]

tasks/coverage/typescript/tests/cases/conformance/types/tuple/named/partiallyNamedTuples.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["AddMixedConditional", "AddMixedConditionalBoolean", "AddMixedConditionalLiteral", "AddMixedConditionalNumberPrimitive", "AnonymousToAnonymous", "AnonymousToMixed", "ConditionalTuple", "MixedSpread", "MixedToAnonymous", "MixedToMixed", "NamedAndAnonymous", "NamedAnonymousMixed", "NamedToAnonymous", "NamedToMixed", "ToAnonymousTuple", "ToMixedTuple", "fa1", "fa2", "fb1", "fb2", "fb3", "input", "output"]
current  scope ScopeId(0): ["fa1", "fa2", "fb1", "fb2", "fb3", "output"]
reference Mismatch:
previous reference ReferenceId(37): Some("input")
current  reference ReferenceId(1): None

tasks/coverage/typescript/tests/cases/conformance/types/tuple/named/partiallyNamedTuples2.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["GetKeys", "GetResult", "MultiKeyMap", "id1", "matches", "x"]
current  scope ScopeId(0): ["id1", "matches", "x"]

tasks/coverage/typescript/tests/cases/conformance/types/tuple/named/partiallyNamedTuples3.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["output", "tuple"]
current  scope ScopeId(0): ["output"]
reference Mismatch:
previous reference ReferenceId(1): Some("tuple")
current  reference ReferenceId(1): None

tasks/coverage/typescript/tests/cases/conformance/types/tuple/typeInferenceWithTupleType.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(1): ["T", "U", "x", "y"]
current  scope ScopeId(1): ["x", "y"]
Bindings Mismatch:
previous scope ScopeId(2): ["T", "U", "array1", "array2", "i", "length", "zipResult"]
current  scope ScopeId(2): ["array1", "array2", "i", "length", "zipResult"]

tasks/coverage/typescript/tests/cases/conformance/types/typeAliases/asiPreventsParsingAsTypeAlias02.ts
semantic error: Semantic Collector failed after transform
Missing SymbolId: container
Missing SymbolId: _container
Missing ReferenceId: container
Missing ReferenceId: container

tasks/coverage/typescript/tests/cases/conformance/types/typeAliases/circularTypeAliasForUnionWithClass.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["I0", "I3", "I4", "T0", "T3", "T4", "v0", "v3", "v4"]
current  scope ScopeId(0): ["I0", "I3", "I4", "v0", "v3", "v4"]

tasks/coverage/typescript/tests/cases/conformance/types/typeAliases/circularTypeAliasForUnionWithInterface.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["I0", "I1", "I2", "I3", "I4", "T0", "T1", "T2", "T3", "T4", "v0", "v1", "v2", "v3", "v4"]
current  scope ScopeId(0): ["v0", "v1", "v2", "v3", "v4"]

tasks/coverage/typescript/tests/cases/conformance/types/typeAliases/classDoesNotDependOnBaseTypes.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["StringTree", "StringTreeCollection", "StringTreeCollectionBase", "x"]
current  scope ScopeId(0): ["StringTreeCollection", "StringTreeCollectionBase", "x"]

tasks/coverage/typescript/tests/cases/conformance/types/typeAliases/genericTypeAliases.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["AB", "Bar", "Foo", "Lazy", "Pair", "Strange", "TaggedPair", "Tree", "a", "b", "f", "g", "ls", "p", "s", "tree", "x", "y", "z"]
current  scope ScopeId(0): ["a", "b", "f", "g", "ls", "p", "s", "tree", "x", "y", "z"]
Bindings Mismatch:
previous scope ScopeId(10): ["A", "Foo", "x"]
current  scope ScopeId(2): ["x"]
Bindings Mismatch:
previous scope ScopeId(12): ["B", "Bar", "x"]
current  scope ScopeId(3): ["x"]

tasks/coverage/typescript/tests/cases/conformance/types/typeAliases/interfaceDoesNotDependOnBaseTypes.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["StringTree", "StringTreeArray", "x"]
current  scope ScopeId(0): ["x"]

tasks/coverage/typescript/tests/cases/conformance/types/typeAliases/typeAliases.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["C7", "E", "I13", "I6", "Meters", "StringAndBoolean", "T1", "T10", "T11", "T13", "T14", "T2", "T3", "T4", "T5", "T6", "T7", "T8", "T9", "x", "x1", "x10", "x11", "x13_1", "x13_2", "x14", "x2", "x3", "x4", "x5", "x6", "x7", "x8", "x9", "y"]
current  scope ScopeId(0): ["C7", "E", "x", "x1", "x10", "x11", "x13_1", "x13_2", "x14", "x2", "x3", "x4", "x5", "x6", "x7", "x8", "x9", "y"]
Bindings Mismatch:
previous scope ScopeId(24): ["E", "x"]
current  scope ScopeId(2): ["E"]

tasks/coverage/typescript/tests/cases/conformance/types/typeParameters/typeArgumentLists/callGenericFunctionWithZeroTypeArguments.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["C", "C2", "I", "I2", "T", "f", "f2", "f3", "i", "i2", "r", "r2", "r3", "r4", "r5", "r6", "r7"]
current  scope ScopeId(0): ["C", "C2", "f", "f2", "f3", "i", "i2", "r", "r2", "r3", "r4", "r5", "r6", "r7"]
Bindings Mismatch:
previous scope ScopeId(1): ["T", "x"]
current  scope ScopeId(1): ["x"]
Bindings Mismatch:
previous scope ScopeId(2): ["T", "x"]
current  scope ScopeId(2): ["x"]
Bindings Mismatch:
previous scope ScopeId(4): ["T", "x"]
current  scope ScopeId(4): ["x"]
Bindings Mismatch:
previous scope ScopeId(7): ["T"]
current  scope ScopeId(5): []

tasks/coverage/typescript/tests/cases/conformance/types/typeParameters/typeArgumentLists/constraintSatisfactionWithAny.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(1): ["T", "x"]
current  scope ScopeId(1): ["x"]
Bindings Mismatch:
previous scope ScopeId(2): ["T", "x"]
current  scope ScopeId(2): ["x"]
Bindings Mismatch:
previous scope ScopeId(3): ["T", "x"]
current  scope ScopeId(3): ["x"]
Bindings Mismatch:
previous scope ScopeId(4): ["T"]
current  scope ScopeId(4): []
Bindings Mismatch:
previous scope ScopeId(6): ["T"]
current  scope ScopeId(6): []
Bindings Mismatch:
previous scope ScopeId(8): ["T"]
current  scope ScopeId(8): []

tasks/coverage/typescript/tests/cases/conformance/types/typeParameters/typeArgumentLists/constraintSatisfactionWithEmptyObject.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["C", "C2", "I", "I2", "a", "foo", "foo2", "i", "i2", "r", "r2"]
current  scope ScopeId(0): ["C", "C2", "a", "foo", "foo2", "i", "i2", "r", "r2"]
Bindings Mismatch:
previous scope ScopeId(1): ["T", "x"]
current  scope ScopeId(1): ["x"]
Bindings Mismatch:
previous scope ScopeId(2): ["T"]
current  scope ScopeId(2): []
Bindings Mismatch:
previous scope ScopeId(5): ["T", "x"]
current  scope ScopeId(4): ["x"]
Bindings Mismatch:
previous scope ScopeId(6): ["T"]
current  scope ScopeId(5): []

tasks/coverage/typescript/tests/cases/conformance/types/typeParameters/typeArgumentLists/functionConstraintSatisfaction.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["C", "C2", "F2", "I", "I2", "T", "a", "a2", "b", "b2", "c", "c2", "f2", "foo", "foo2", "i", "i2", "r", "r1", "r10", "r11", "r12", "r13", "r14", "r15", "r16", "r17", "r2", "r3", "r4", "r5", "r6", "r7", "r8", "r9"]
current  scope ScopeId(0): ["C", "C2", "a", "a2", "b", "b2", "c", "c2", "f2", "foo", "foo2", "i", "i2", "r", "r1", "r10", "r11", "r12", "r13", "r14", "r15", "r16", "r17", "r2", "r3", "r4", "r5", "r6", "r7", "r8", "r9"]
Bindings Mismatch:
previous scope ScopeId(1): ["T", "x"]
current  scope ScopeId(1): ["x"]
Bindings Mismatch:
previous scope ScopeId(10): ["T"]
current  scope ScopeId(7): []
Bindings Mismatch:
previous scope ScopeId(12): ["U", "x"]
current  scope ScopeId(8): ["x"]
Bindings Mismatch:
previous scope ScopeId(13): ["U", "x"]
current  scope ScopeId(9): ["x"]
Bindings Mismatch:
previous scope ScopeId(14): ["U", "x"]
current  scope ScopeId(10): ["x"]
Bindings Mismatch:
previous scope ScopeId(15): ["U", "V", "x", "y"]
current  scope ScopeId(11): ["x", "y"]
Bindings Mismatch:
previous scope ScopeId(17): ["T", "U", "x", "y"]
current  scope ScopeId(12): ["x", "y"]

tasks/coverage/typescript/tests/cases/conformance/types/typeParameters/typeArgumentLists/functionConstraintSatisfaction3.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["C", "C2", "I", "I2", "T", "a", "a2", "b", "b2", "c", "c2", "foo", "i", "i2", "r1", "r10", "r12", "r15", "r2", "r3", "r4", "r5", "r8", "r9"]
current  scope ScopeId(0): ["C", "C2", "a", "a2", "b", "b2", "c", "c2", "foo", "i", "i2", "r1", "r10", "r12", "r15", "r2", "r3", "r4", "r5", "r8", "r9"]
Bindings Mismatch:
previous scope ScopeId(1): ["T", "x"]
current  scope ScopeId(1): ["x"]
Bindings Mismatch:
previous scope ScopeId(10): ["T"]
current  scope ScopeId(7): []
Bindings Mismatch:
previous scope ScopeId(12): ["U", "x"]
current  scope ScopeId(8): ["x"]
Bindings Mismatch:
previous scope ScopeId(13): ["U", "x"]
current  scope ScopeId(9): ["x"]

tasks/coverage/typescript/tests/cases/conformance/types/typeParameters/typeArgumentLists/instantiateGenericClassWithZeroTypeArguments.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(1): ["T"]
current  scope ScopeId(1): []
Bindings Mismatch:
previous scope ScopeId(2): ["T", "U"]
current  scope ScopeId(2): []

tasks/coverage/typescript/tests/cases/conformance/types/typeParameters/typeArgumentLists/typeParameterAsTypeParameterConstraint.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["A", "B", "a", "b", "foo", "foo2", "r", "r2", "r3"]
current  scope ScopeId(0): ["a", "b", "foo", "foo2", "r", "r2", "r3"]
Bindings Mismatch:
previous scope ScopeId(1): ["T", "U", "x", "y"]
current  scope ScopeId(1): ["x", "y"]
Bindings Mismatch:
previous scope ScopeId(4): ["T", "U", "x", "y"]
current  scope ScopeId(2): ["x", "y"]

tasks/coverage/typescript/tests/cases/conformance/types/typeParameters/typeArgumentLists/typeParameterAsTypeParameterConstraintTransitively.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["A", "B", "C", "a", "b", "c", "foo", "foo2"]
current  scope ScopeId(0): ["a", "b", "c", "foo", "foo2"]
Bindings Mismatch:
previous scope ScopeId(4): ["T", "U", "V", "x", "y", "z"]
current  scope ScopeId(1): ["x", "y", "z"]
Bindings Mismatch:
previous scope ScopeId(8): ["T", "U", "V", "x", "y", "z"]
current  scope ScopeId(5): ["x", "y", "z"]

tasks/coverage/typescript/tests/cases/conformance/types/typeParameters/typeArgumentLists/typeParameterAsTypeParameterConstraintTransitively2.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["A", "B", "C", "a", "b", "c", "foo", "foo2"]
current  scope ScopeId(0): ["a", "b", "c", "foo", "foo2"]
Bindings Mismatch:
previous scope ScopeId(4): ["T", "U", "V", "x", "y", "z"]
current  scope ScopeId(1): ["x", "y", "z"]
Bindings Mismatch:
previous scope ScopeId(8): ["T", "U", "V", "x", "y", "z"]
current  scope ScopeId(5): ["x", "y", "z"]

tasks/coverage/typescript/tests/cases/conformance/types/typeParameters/typeArgumentLists/wrappedAndRecursiveConstraints.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["C", "Foo", "c", "r", "y"]
current  scope ScopeId(0): ["C", "c", "r", "y"]
Bindings Mismatch:
previous scope ScopeId(1): ["T"]
current  scope ScopeId(1): []
Bindings Mismatch:
previous scope ScopeId(3): ["U", "x"]
current  scope ScopeId(3): ["x"]

tasks/coverage/typescript/tests/cases/conformance/types/typeParameters/typeArgumentLists/wrappedAndRecursiveConstraints2.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(1): ["T"]
current  scope ScopeId(1): []

tasks/coverage/typescript/tests/cases/conformance/types/typeParameters/typeArgumentLists/wrappedAndRecursiveConstraints3.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(1): ["T"]
current  scope ScopeId(1): []
Bindings Mismatch:
previous scope ScopeId(3): ["U", "bar", "x"]
current  scope ScopeId(3): ["bar", "x"]
Bindings Mismatch:
previous scope ScopeId(4): ["V", "x"]
current  scope ScopeId(4): ["x"]

tasks/coverage/typescript/tests/cases/conformance/types/typeParameters/typeParameterLists/innerTypeParameterShadowingOuterOne.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(1): ["T", "g", "x"]
current  scope ScopeId(1): ["g", "x"]
Bindings Mismatch:
previous scope ScopeId(2): ["T", "x"]
current  scope ScopeId(2): ["x"]
Bindings Mismatch:
previous scope ScopeId(3): ["T", "U", "g", "x"]
current  scope ScopeId(3): ["g", "x"]
Bindings Mismatch:
previous scope ScopeId(4): ["T", "U", "x"]
current  scope ScopeId(4): ["x"]

tasks/coverage/typescript/tests/cases/conformance/types/typeParameters/typeParameterLists/innerTypeParameterShadowingOuterOne2.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(1): ["T"]
current  scope ScopeId(1): []
Bindings Mismatch:
previous scope ScopeId(2): ["T", "x"]
current  scope ScopeId(2): ["x"]
Bindings Mismatch:
previous scope ScopeId(4): ["T", "U"]
current  scope ScopeId(4): []
Bindings Mismatch:
previous scope ScopeId(5): ["T", "U", "x"]
current  scope ScopeId(5): ["x"]

tasks/coverage/typescript/tests/cases/conformance/types/typeParameters/typeParameterLists/propertyAccessOnTypeParameterWithConstraints.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["C", "I", "T", "a", "b", "i", "r", "r2", "r2b", "r3", "r3b", "r4"]
current  scope ScopeId(0): ["C", "a", "b", "i", "r", "r2", "r2b", "r3", "r3b", "r4"]
Bindings Mismatch:
previous scope ScopeId(1): ["T"]
current  scope ScopeId(1): []
Bindings Mismatch:
previous scope ScopeId(4): ["T", "a", "x"]
current  scope ScopeId(3): ["a", "x"]

tasks/coverage/typescript/tests/cases/conformance/types/typeParameters/typeParameterLists/propertyAccessOnTypeParameterWithConstraints2.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["A", "B", "C", "I", "T", "U", "a", "aB", "b", "i", "r1", "r1b", "r2", "r2b", "r3", "r3b", "r3c", "r3d", "r4"]
current  scope ScopeId(0): ["A", "B", "C", "a", "aB", "b", "i", "r1", "r1b", "r2", "r2b", "r3", "r3b", "r3c", "r3d", "r4"]
Bindings Mismatch:
previous scope ScopeId(5): ["T", "U"]
current  scope ScopeId(5): []
Bindings Mismatch:
previous scope ScopeId(9): ["T", "U", "a", "x", "y"]
current  scope ScopeId(8): ["a", "x", "y"]

tasks/coverage/typescript/tests/cases/conformance/types/typeParameters/typeParameterLists/propertyAccessOnTypeParameterWithConstraints3.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["A", "B", "C", "I", "T", "U", "a", "b", "i", "r1a", "r1b", "r2", "r2b", "r3", "r3b", "r3c", "r3d", "r4"]
current  scope ScopeId(0): ["A", "B", "C", "a", "b", "i", "r1a", "r1b", "r2", "r2b", "r3", "r3b", "r3c", "r3d", "r4"]
Bindings Mismatch:
previous scope ScopeId(5): ["T", "U"]
current  scope ScopeId(5): []
Bindings Mismatch:
previous scope ScopeId(9): ["T", "U", "a", "x"]
current  scope ScopeId(8): ["a", "x"]

tasks/coverage/typescript/tests/cases/conformance/types/typeParameters/typeParameterLists/propertyAccessOnTypeParameterWithoutConstraints.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["C", "I", "T", "a", "b", "i", "r", "r2", "r2b", "r3", "r3b", "r4"]
current  scope ScopeId(0): ["C", "a", "b", "i", "r", "r2", "r2b", "r3", "r3b", "r4"]
Bindings Mismatch:
previous scope ScopeId(1): ["T"]
current  scope ScopeId(1): []
Bindings Mismatch:
previous scope ScopeId(4): ["T", "a", "x"]
current  scope ScopeId(3): ["a", "x"]

tasks/coverage/typescript/tests/cases/conformance/types/typeParameters/typeParameterLists/typeParameterConstModifiersWithIntersection.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Config", "result"]
current  scope ScopeId(0): ["result"]

tasks/coverage/typescript/tests/cases/conformance/types/typeParameters/typeParameterLists/typeParameterUsedAsConstraint.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["C", "C2", "C3", "C4", "C5", "C6", "I", "I2", "I3", "I4", "I5", "I6", "T", "U", "V", "a", "a2", "a3", "a4", "a5", "a6", "e", "e2", "e3", "e4", "e5", "e6", "f", "f2", "f3", "f4", "f5", "f6"]
current  scope ScopeId(0): ["C", "C2", "C3", "C4", "C5", "C6", "a", "a2", "a3", "a4", "a5", "a6", "e", "e2", "e3", "e4", "e5", "e6", "f", "f2", "f3", "f4", "f5", "f6"]
Bindings Mismatch:
previous scope ScopeId(1): ["T", "U"]
current  scope ScopeId(1): []
Bindings Mismatch:
previous scope ScopeId(2): ["T", "U"]
current  scope ScopeId(2): []
Bindings Mismatch:
previous scope ScopeId(3): ["T", "U"]
current  scope ScopeId(3): []
Bindings Mismatch:
previous scope ScopeId(4): ["T", "U"]
current  scope ScopeId(4): []
Bindings Mismatch:
previous scope ScopeId(5): ["T", "U", "V"]
current  scope ScopeId(5): []
Bindings Mismatch:
previous scope ScopeId(6): ["T", "U", "V"]
current  scope ScopeId(6): []
Bindings Mismatch:
previous scope ScopeId(13): ["T", "U"]
current  scope ScopeId(7): []
Bindings Mismatch:
previous scope ScopeId(14): ["T", "U"]
current  scope ScopeId(8): []
Bindings Mismatch:
previous scope ScopeId(15): ["T", "U"]
current  scope ScopeId(9): []
Bindings Mismatch:
previous scope ScopeId(16): ["T", "U"]
current  scope ScopeId(10): []
Bindings Mismatch:
previous scope ScopeId(17): ["T", "U", "V"]
current  scope ScopeId(11): []
Bindings Mismatch:
previous scope ScopeId(18): ["T", "U", "V"]
current  scope ScopeId(12): []
Bindings Mismatch:
previous scope ScopeId(19): ["T", "U"]
current  scope ScopeId(13): []
Bindings Mismatch:
previous scope ScopeId(20): ["T", "U"]
current  scope ScopeId(14): []
Bindings Mismatch:
previous scope ScopeId(21): ["T", "U"]
current  scope ScopeId(15): []
Bindings Mismatch:
previous scope ScopeId(22): ["T", "U"]
current  scope ScopeId(16): []
Bindings Mismatch:
previous scope ScopeId(23): ["T", "U", "V"]
current  scope ScopeId(17): []
Bindings Mismatch:
previous scope ScopeId(24): ["T", "U", "V"]
current  scope ScopeId(18): []

tasks/coverage/typescript/tests/cases/conformance/types/typeParameters/typeParameterLists/typeParametersAvailableInNestedScope.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(1): ["T"]
current  scope ScopeId(1): []
Bindings Mismatch:
previous scope ScopeId(2): ["U", "a", "y"]
current  scope ScopeId(2): ["a", "y"]
Bindings Mismatch:
previous scope ScopeId(4): ["U", "a", "y"]
current  scope ScopeId(4): ["a", "y"]

tasks/coverage/typescript/tests/cases/conformance/types/typeParameters/typeParameterLists/typeParametersAvailableInNestedScope2.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(1): ["T", "U", "bar", "x", "y"]
current  scope ScopeId(1): ["bar", "x", "y"]
Bindings Mismatch:
previous scope ScopeId(2): ["V", "baz", "z"]
current  scope ScopeId(2): ["baz", "z"]
Bindings Mismatch:
previous scope ScopeId(3): ["W", "a", "c", "d", "e"]
current  scope ScopeId(3): ["a", "c", "d", "e"]

tasks/coverage/typescript/tests/cases/conformance/types/typeRelationships/assignmentCompatibility/anyAssignabilityInInheritance.ts
semantic error: Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript
Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript

tasks/coverage/typescript/tests/cases/conformance/types/typeRelationships/assignmentCompatibility/anyAssignableToEveryType.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["C", "E", "I", "T", "a", "ac", "ae", "ai", "b", "c", "d", "e", "f", "foo", "g", "h", "i", "j", "k", "l", "m", "n", "o", "p", "q"]
current  scope ScopeId(0): ["C", "E", "a", "ac", "ae", "ai", "b", "c", "d", "e", "f", "foo", "g", "h", "i", "j", "k", "l", "m", "n", "o", "p", "q"]
Bindings Mismatch:
previous scope ScopeId(3): ["A", "E"]
current  scope ScopeId(2): ["E"]
Bindings Mismatch:
previous scope ScopeId(4): ["T", "U", "V", "x", "y", "z"]
current  scope ScopeId(3): ["x", "y", "z"]

tasks/coverage/typescript/tests/cases/conformance/types/typeRelationships/assignmentCompatibility/anyAssignableToEveryType2.ts
semantic error: Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript
Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript

tasks/coverage/typescript/tests/cases/conformance/types/typeRelationships/assignmentCompatibility/assignmentCompatWithGenericCallSignatures.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["S", "T", "f", "g"]
current  scope ScopeId(0): ["f", "g"]

tasks/coverage/typescript/tests/cases/conformance/types/typeRelationships/assignmentCompatibility/assignmentCompatWithGenericCallSignatures3.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["I", "S", "T", "U", "g", "h"]
current  scope ScopeId(0): ["g", "h"]

tasks/coverage/typescript/tests/cases/conformance/types/typeRelationships/assignmentCompatibility/assignmentCompatWithObjectMembers.ts
semantic error: Semantic Collector failed after transform
Missing SymbolId: SimpleTypes
Missing SymbolId: _SimpleTypes
Missing ReferenceId: SimpleTypes
Missing ReferenceId: SimpleTypes
Missing SymbolId: ObjectTypes
Missing SymbolId: _ObjectTypes
Missing ReferenceId: ObjectTypes
Missing ReferenceId: ObjectTypes

tasks/coverage/typescript/tests/cases/conformance/types/typeRelationships/assignmentCompatibility/assignmentCompatWithObjectMembers2.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["S", "S2", "T", "T2", "a", "a2", "b", "b2", "s", "s2", "t", "t2"]
current  scope ScopeId(0): ["S", "T", "a", "a2", "b", "b2", "s", "s2", "t", "t2"]

tasks/coverage/typescript/tests/cases/conformance/types/typeRelationships/assignmentCompatibility/assignmentCompatWithObjectMembers3.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["S", "S2", "T", "T2", "a", "a2", "b", "b2", "s", "s2", "t", "t2"]
current  scope ScopeId(0): ["S", "T", "a", "a2", "b", "b2", "s", "s2", "t", "t2"]

tasks/coverage/typescript/tests/cases/conformance/types/typeRelationships/assignmentCompatibility/assignmentCompatWithObjectMembersNumericNames.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["S", "S2", "T", "T2", "a", "a2", "b", "b2", "s", "s2", "t", "t2"]
current  scope ScopeId(0): ["S", "T", "a", "a2", "b", "b2", "s", "s2", "t", "t2"]

tasks/coverage/typescript/tests/cases/conformance/types/typeRelationships/assignmentCompatibility/callSignatureAssignabilityInInheritance2.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["A", "Base", "Derived", "Derived2", "I", "OtherDerived"]
current  scope ScopeId(0): ["Base", "Derived", "Derived2", "OtherDerived"]

tasks/coverage/typescript/tests/cases/conformance/types/typeRelationships/assignmentCompatibility/callSignatureAssignabilityInInheritance4.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["A", "Base", "Derived", "Derived2", "I", "OtherDerived"]
current  scope ScopeId(0): ["Base", "Derived", "Derived2", "OtherDerived"]

tasks/coverage/typescript/tests/cases/conformance/types/typeRelationships/assignmentCompatibility/callSignatureAssignabilityInInheritance5.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["A", "B", "Base", "Derived", "Derived2", "I", "OtherDerived"]
current  scope ScopeId(0): ["Base", "Derived", "Derived2", "OtherDerived"]

tasks/coverage/typescript/tests/cases/conformance/types/typeRelationships/assignmentCompatibility/constructSignatureAssignabilityInInheritance2.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["A", "Base", "Derived", "Derived2", "I", "OtherDerived"]
current  scope ScopeId(0): ["Base", "Derived", "Derived2", "OtherDerived"]

tasks/coverage/typescript/tests/cases/conformance/types/typeRelationships/assignmentCompatibility/constructSignatureAssignabilityInInheritance4.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["A", "Base", "Derived", "Derived2", "I", "OtherDerived"]
current  scope ScopeId(0): ["Base", "Derived", "Derived2", "OtherDerived"]

tasks/coverage/typescript/tests/cases/conformance/types/typeRelationships/assignmentCompatibility/constructSignatureAssignabilityInInheritance5.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["A", "B", "Base", "Derived", "Derived2", "I", "OtherDerived"]
current  scope ScopeId(0): ["Base", "Derived", "Derived2", "OtherDerived"]

tasks/coverage/typescript/tests/cases/conformance/types/typeRelationships/assignmentCompatibility/everyTypeAssignableToAny.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["C", "E", "I", "T", "a", "ac", "ae", "ai", "b", "c", "d", "e", "f", "foo", "g", "h", "i", "j", "k", "l", "m", "n", "o", "p", "q"]
current  scope ScopeId(0): ["C", "E", "a", "ac", "ae", "ai", "b", "c", "d", "e", "f", "foo", "g", "h", "i", "j", "k", "l", "m", "n", "o", "p", "q"]
Bindings Mismatch:
previous scope ScopeId(3): ["A", "E"]
current  scope ScopeId(2): ["E"]
Bindings Mismatch:
previous scope ScopeId(4): ["T", "U", "V", "x", "y", "z"]
current  scope ScopeId(3): ["x", "y", "z"]

tasks/coverage/typescript/tests/cases/conformance/types/typeRelationships/assignmentCompatibility/intersectionIncludingPropFromGlobalAugmentation.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Test1", "Test2", "hasOwn", "source", "target", "toString"]
current  scope ScopeId(0): ["hasOwn", "target", "toString"]
reference Mismatch:
previous reference ReferenceId(3): Some("source")
current  reference ReferenceId(0): None

tasks/coverage/typescript/tests/cases/conformance/types/typeRelationships/assignmentCompatibility/nullAssignableToEveryType.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["C", "E", "I", "T", "ac", "ae", "ai", "b", "c", "d", "e", "f", "foo", "g", "h", "i", "j", "k", "l", "m", "n", "o", "p", "q"]
current  scope ScopeId(0): ["C", "E", "ac", "ae", "ai", "b", "c", "d", "e", "f", "foo", "g", "h", "i", "j", "k", "l", "m", "n", "o", "p", "q"]
Bindings Mismatch:
previous scope ScopeId(3): ["A", "E"]
current  scope ScopeId(2): ["E"]
Bindings Mismatch:
previous scope ScopeId(4): ["T", "U", "V", "x", "y", "z"]
current  scope ScopeId(3): ["x", "y", "z"]

tasks/coverage/typescript/tests/cases/conformance/types/typeRelationships/assignmentCompatibility/numberAssignableToEnum.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(1): ["A", "E"]
current  scope ScopeId(1): ["E"]

tasks/coverage/typescript/tests/cases/conformance/types/typeRelationships/assignmentCompatibility/undefinedAssignableToEveryType.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["C", "E", "I", "T", "ac", "ae", "ai", "b", "c", "d", "e", "f", "foo", "g", "h", "i", "j", "k", "l", "m", "n", "o", "p", "q"]
current  scope ScopeId(0): ["C", "E", "ac", "ae", "ai", "b", "c", "d", "e", "f", "foo", "g", "h", "i", "j", "k", "l", "m", "n", "o", "p", "q"]
Bindings Mismatch:
previous scope ScopeId(3): ["A", "E"]
current  scope ScopeId(2): ["E"]
Bindings Mismatch:
previous scope ScopeId(4): ["T", "U", "V", "x", "y", "z"]
current  scope ScopeId(3): ["x", "y", "z"]

tasks/coverage/typescript/tests/cases/conformance/types/typeRelationships/bestCommonType/bestCommonTypeOfConditionalExpressions.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(10): ["T", "U", "t", "u"]
current  scope ScopeId(10): ["t", "u"]

tasks/coverage/typescript/tests/cases/conformance/types/typeRelationships/bestCommonType/bestCommonTypeOfConditionalExpressions2.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(4): ["T", "U", "t", "u"]
current  scope ScopeId(4): ["t", "u"]
Bindings Mismatch:
previous scope ScopeId(5): ["T", "U", "t", "u"]
current  scope ScopeId(5): ["t", "u"]
Bindings Mismatch:
previous scope ScopeId(6): ["T", "U", "V", "t", "u"]
current  scope ScopeId(6): ["t", "u"]

tasks/coverage/typescript/tests/cases/conformance/types/typeRelationships/bestCommonType/functionWithMultipleReturnStatements.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(18): ["T", "U", "x", "y"]
current  scope ScopeId(18): ["x", "y"]
Bindings Mismatch:
previous scope ScopeId(21): ["T", "U", "V", "x", "y"]
current  scope ScopeId(21): ["x", "y"]

tasks/coverage/typescript/tests/cases/conformance/types/typeRelationships/bestCommonType/functionWithMultipleReturnStatements2.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(14): ["T", "x"]
current  scope ScopeId(14): ["x"]

tasks/coverage/typescript/tests/cases/conformance/types/typeRelationships/bestCommonType/heterogeneousArrayLiterals.ts
semantic error: Semantic Collector failed after transform
Missing SymbolId: _Derived
Missing ReferenceId: Derived
Missing ReferenceId: Derived
Missing SymbolId: WithContextualType
Missing SymbolId: _WithContextualType
Missing ReferenceId: WithContextualType
Missing ReferenceId: WithContextualType

tasks/coverage/typescript/tests/cases/conformance/types/typeRelationships/comparable/equalityWithUnionTypes01.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["I1", "I2", "x", "y", "z"]
current  scope ScopeId(0): ["x", "y", "z"]

tasks/coverage/typescript/tests/cases/conformance/types/typeRelationships/comparable/independentPropertyVariance.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["x", "y"]
current  scope ScopeId(0): []
reference Mismatch:
previous reference ReferenceId(0): Some("x")
current  reference ReferenceId(0): None
reference Mismatch:
previous reference ReferenceId(1): Some("y")
current  reference ReferenceId(1): None

tasks/coverage/typescript/tests/cases/conformance/types/typeRelationships/instanceOf/narrowingConstrainedTypeVariable.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(2): ["T", "v"]
current  scope ScopeId(2): ["v"]
Bindings Mismatch:
previous scope ScopeId(6): ["T", "U", "v"]
current  scope ScopeId(6): ["v"]
Bindings Mismatch:
previous scope ScopeId(10): ["T", "v"]
current  scope ScopeId(10): ["v"]

tasks/coverage/typescript/tests/cases/conformance/types/typeRelationships/recursiveTypes/arrayLiteralsWithRecursiveGenerics.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(1): ["T"]
current  scope ScopeId(1): []
Bindings Mismatch:
previous scope ScopeId(2): ["U"]
current  scope ScopeId(2): []
Bindings Mismatch:
previous scope ScopeId(3): ["T"]
current  scope ScopeId(3): []

tasks/coverage/typescript/tests/cases/conformance/types/typeRelationships/recursiveTypes/infiniteExpansionThroughInstantiation2.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["AA", "BB"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/conformance/types/typeRelationships/recursiveTypes/infiniteExpansionThroughTypeInference.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["G", "ff"]
current  scope ScopeId(0): ["ff"]
Bindings Mismatch:
previous scope ScopeId(2): ["T", "g"]
current  scope ScopeId(1): ["g"]

tasks/coverage/typescript/tests/cases/conformance/types/typeRelationships/recursiveTypes/nominalSubtypeCheckOfTypeParameter.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["BinaryTuple", "List", "Sequence"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/conformance/types/typeRelationships/recursiveTypes/nominalSubtypeCheckOfTypeParameter2.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["A", "A2", "A3", "B", "C"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/conformance/types/typeRelationships/recursiveTypes/recursiveTypeInGenericConstraint.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(1): ["T"]
current  scope ScopeId(1): []
Bindings Mismatch:
previous scope ScopeId(2): ["T"]
current  scope ScopeId(2): []
Bindings Mismatch:
previous scope ScopeId(3): ["T"]
current  scope ScopeId(3): []

tasks/coverage/typescript/tests/cases/conformance/types/typeRelationships/recursiveTypes/recursiveTypesUsedAsFunctionParameters.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(1): ["T"]
current  scope ScopeId(1): []
Bindings Mismatch:
previous scope ScopeId(2): ["T"]
current  scope ScopeId(2): []
Bindings Mismatch:
previous scope ScopeId(5): ["T", "x"]
current  scope ScopeId(3): ["x"]
Bindings Mismatch:
previous scope ScopeId(8): ["T", "x"]
current  scope ScopeId(4): ["x"]
Bindings Mismatch:
previous scope ScopeId(9): ["T", "U", "foo3", "foo4", "foo5", "list", "myList", "r", "r2"]
current  scope ScopeId(5): ["foo3", "foo4", "foo5", "list", "myList", "r", "r2"]
Bindings Mismatch:
previous scope ScopeId(11): ["V", "x"]
current  scope ScopeId(6): ["x"]
Bindings Mismatch:
previous scope ScopeId(13): ["V", "x"]
current  scope ScopeId(7): ["x"]
Bindings Mismatch:
previous scope ScopeId(17): ["V", "x"]
current  scope ScopeId(8): ["x"]

tasks/coverage/typescript/tests/cases/conformance/types/typeRelationships/subtypesAndSuperTypes/nullIsSubtypeOfEverythingButUndefined.ts
semantic error: Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript
Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript

tasks/coverage/typescript/tests/cases/conformance/types/typeRelationships/subtypesAndSuperTypes/stringLiteralTypeIsSubtypeOfString.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["C", "E", "I", "f1", "f10", "f11", "f12", "f13", "f14", "f15", "f16", "f2", "f3", "f4", "f5", "f6", "f7", "f8", "f9"]
current  scope ScopeId(0): ["C", "E", "f1", "f10", "f11", "f12", "f13", "f14", "f15", "f16", "f2", "f3", "f4", "f5", "f6", "f7", "f8", "f9"]
Bindings Mismatch:
previous scope ScopeId(58): ["T", "x"]
current  scope ScopeId(33): ["x"]
Bindings Mismatch:
previous scope ScopeId(61): ["T", "x"]
current  scope ScopeId(34): ["x"]
Bindings Mismatch:
previous scope ScopeId(62): ["A", "E"]
current  scope ScopeId(35): ["E"]
Bindings Mismatch:
previous scope ScopeId(68): ["T", "U", "x"]
current  scope ScopeId(37): ["x"]
Bindings Mismatch:
previous scope ScopeId(71): ["T", "U", "x"]
current  scope ScopeId(38): ["x"]

tasks/coverage/typescript/tests/cases/conformance/types/typeRelationships/subtypesAndSuperTypes/subtypesOfAny.ts
semantic error: Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript
Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript

tasks/coverage/typescript/tests/cases/conformance/types/typeRelationships/subtypesAndSuperTypes/subtypesOfTypeParameterWithConstraints2.ts
semantic error: Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript
Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript

tasks/coverage/typescript/tests/cases/conformance/types/typeRelationships/subtypesAndSuperTypes/subtypesOfTypeParameterWithConstraints3.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(1): ["T", "U", "V", "r", "r2", "r3", "t", "u", "v"]
current  scope ScopeId(1): ["r", "r2", "r3", "t", "u", "v"]

tasks/coverage/typescript/tests/cases/conformance/types/typeRelationships/subtypesAndSuperTypes/subtypingWithCallSignatures.ts
semantic error: Semantic Collector failed after transform
Missing SymbolId: CallSignature
Missing SymbolId: _CallSignature
Missing ReferenceId: CallSignature
Missing ReferenceId: CallSignature

tasks/coverage/typescript/tests/cases/conformance/types/typeRelationships/subtypesAndSuperTypes/subtypingWithCallSignatures2.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(41): ["T", "x"]
current  scope ScopeId(5): ["x"]
Bindings Mismatch:
previous scope ScopeId(43): ["T", "x"]
current  scope ScopeId(7): ["x"]
Bindings Mismatch:
previous scope ScopeId(45): ["T", "x"]
current  scope ScopeId(9): ["x"]
Bindings Mismatch:
previous scope ScopeId(47): ["T", "U", "x", "y"]
current  scope ScopeId(11): ["x", "y"]
Bindings Mismatch:
previous scope ScopeId(49): ["T", "U", "x"]
current  scope ScopeId(13): ["x"]
Bindings Mismatch:
previous scope ScopeId(51): ["T", "U", "x"]
current  scope ScopeId(15): ["x"]
Bindings Mismatch:
previous scope ScopeId(53): ["T", "U", "x"]
current  scope ScopeId(17): ["x"]
Bindings Mismatch:
previous scope ScopeId(57): ["T", "U", "x", "y"]
current  scope ScopeId(21): ["x", "y"]
Bindings Mismatch:
previous scope ScopeId(61): ["T", "U", "x", "y"]
current  scope ScopeId(25): ["x", "y"]
Bindings Mismatch:
previous scope ScopeId(65): ["T", "x"]
current  scope ScopeId(29): ["x"]
Bindings Mismatch:
previous scope ScopeId(67): ["T", "x", "y"]
current  scope ScopeId(31): ["x", "y"]
Bindings Mismatch:
previous scope ScopeId(69): ["T", "x", "y"]
current  scope ScopeId(33): ["x", "y"]
Bindings Mismatch:
previous scope ScopeId(71): ["T", "x", "y"]
current  scope ScopeId(35): ["x", "y"]
Bindings Mismatch:
previous scope ScopeId(73): ["T", "x"]
current  scope ScopeId(37): ["x"]
Bindings Mismatch:
previous scope ScopeId(75): ["T", "x"]
current  scope ScopeId(39): ["x"]
Bindings Mismatch:
previous scope ScopeId(76): ["T", "x"]
current  scope ScopeId(40): ["x"]
Bindings Mismatch:
previous scope ScopeId(77): ["T", "x"]
current  scope ScopeId(41): ["x"]
Bindings Mismatch:
previous scope ScopeId(78): ["T", "x"]
current  scope ScopeId(42): ["x"]

tasks/coverage/typescript/tests/cases/conformance/types/typeRelationships/subtypesAndSuperTypes/subtypingWithCallSignatures3.ts
semantic error: Semantic Collector failed after transform
Missing SymbolId: Errors
Missing SymbolId: _Errors
Missing ReferenceId: Errors
Missing ReferenceId: Errors
Missing SymbolId: WithGenericSignaturesInBaseType
Missing SymbolId: _WithGenericSignaturesInBaseType
Missing ReferenceId: WithGenericSignaturesInBaseType
Missing ReferenceId: WithGenericSignaturesInBaseType

tasks/coverage/typescript/tests/cases/conformance/types/typeRelationships/subtypesAndSuperTypes/subtypingWithCallSignatures4.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(27): ["T", "x"]
current  scope ScopeId(5): ["x"]
Bindings Mismatch:
previous scope ScopeId(28): ["T", "x"]
current  scope ScopeId(6): ["x"]
Bindings Mismatch:
previous scope ScopeId(29): ["T", "x"]
current  scope ScopeId(7): ["x"]
Bindings Mismatch:
previous scope ScopeId(30): ["T", "x"]
current  scope ScopeId(8): ["x"]
Bindings Mismatch:
previous scope ScopeId(31): ["T", "x"]
current  scope ScopeId(9): ["x"]
Bindings Mismatch:
previous scope ScopeId(32): ["T", "x"]
current  scope ScopeId(10): ["x"]
Bindings Mismatch:
previous scope ScopeId(33): ["T", "U", "x", "y"]
current  scope ScopeId(11): ["x", "y"]
Bindings Mismatch:
previous scope ScopeId(34): ["T", "U", "x", "y"]
current  scope ScopeId(12): ["x", "y"]
Bindings Mismatch:
previous scope ScopeId(35): ["T", "U", "x"]
current  scope ScopeId(13): ["x"]
Bindings Mismatch:
previous scope ScopeId(36): ["T", "U", "x"]
current  scope ScopeId(14): ["x"]
Bindings Mismatch:
previous scope ScopeId(37): ["T", "U", "x"]
current  scope ScopeId(15): ["x"]
Bindings Mismatch:
previous scope ScopeId(38): ["T", "x"]
current  scope ScopeId(16): ["x"]
Bindings Mismatch:
previous scope ScopeId(39): ["T", "U", "x", "y"]
current  scope ScopeId(17): ["x", "y"]
Bindings Mismatch:
previous scope ScopeId(40): ["T", "x", "y"]
current  scope ScopeId(18): ["x", "y"]
Bindings Mismatch:
previous scope ScopeId(41): ["U", "V", "x"]
current  scope ScopeId(19): ["x"]
Bindings Mismatch:
previous scope ScopeId(42): ["T", "x"]
current  scope ScopeId(20): ["x"]
Bindings Mismatch:
previous scope ScopeId(43): ["T", "x"]
current  scope ScopeId(21): ["x"]
Bindings Mismatch:
previous scope ScopeId(44): ["T", "x"]
current  scope ScopeId(22): ["x"]
Bindings Mismatch:
previous scope ScopeId(45): ["T", "x"]
current  scope ScopeId(23): ["x"]
Bindings Mismatch:
previous scope ScopeId(46): ["T", "x"]
current  scope ScopeId(24): ["x"]

tasks/coverage/typescript/tests/cases/conformance/types/typeRelationships/subtypesAndSuperTypes/subtypingWithConstructSignatures.ts
semantic error: Semantic Collector failed after transform
Missing SymbolId: ConstructSignature
Missing SymbolId: _ConstructSignature
Missing ReferenceId: ConstructSignature
Missing ReferenceId: ConstructSignature

tasks/coverage/typescript/tests/cases/conformance/types/typeRelationships/subtypesAndSuperTypes/subtypingWithConstructSignatures2.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Base", "Derived", "Derived2", "OtherDerived", "T", "U", "r1", "r10", "r10a", "r10arg1", "r10arg2", "r10b", "r11", "r11a", "r11arg1", "r11arg2", "r11b", "r12", "r12a", "r12arg1", "r12arg2", "r12b", "r13", "r13a", "r13arg1", "r13arg2", "r13b", "r14", "r14a", "r14arg1", "r14arg2", "r14b", "r15", "r15arg1", "r16", "r16arg1", "r17", "r17arg1", "r18", "r18arg1", "r1a", "r1arg1", "r1arg2", "r1b", "r2", "r2a", "r2arg1", "r2arg2", "r2b", "r3", "r3a", "r3arg1", "r3arg2", "r3b", "r4", "r4a", "r4arg1", "r4arg2", "r4b", "r5", "r5a", "r5arg1", "r5arg2", "r5b", "r6", "r6a", "r6arg1", "r6arg2", "r6b", "r7", "r7a", "r7arg1", "r7arg2", "r7b", "r8", "r8a", "r8arg1", "r8arg2", "r8b", "r9", "r9a", "r9arg1", "r9arg2", "r9b"]
current  scope ScopeId(0): ["Base", "Derived", "Derived2", "OtherDerived", "r1", "r10", "r10a", "r10arg1", "r10arg2", "r10b", "r11", "r11a", "r11arg1", "r11arg2", "r11b", "r12", "r12a", "r12arg1", "r12arg2", "r12b", "r13", "r13a", "r13arg1", "r13arg2", "r13b", "r14", "r14a", "r14arg1", "r14arg2", "r14b", "r15", "r15arg1", "r16", "r16arg1", "r17", "r17arg1", "r18", "r18arg1", "r1a", "r1arg1", "r1arg2", "r1b", "r2", "r2a", "r2arg1", "r2arg2", "r2b", "r3", "r3a", "r3arg1", "r3arg2", "r3b", "r4", "r4a", "r4arg1", "r4arg2", "r4b", "r5", "r5a", "r5arg1", "r5arg2", "r5b", "r6", "r6a", "r6arg1", "r6arg2", "r6b", "r7", "r7a", "r7arg1", "r7arg2", "r7b", "r8", "r8a", "r8arg1", "r8arg2", "r8b", "r9", "r9a", "r9arg1", "r9arg2", "r9b"]

tasks/coverage/typescript/tests/cases/conformance/types/typeRelationships/subtypesAndSuperTypes/subtypingWithConstructSignatures3.ts
semantic error: Semantic Collector failed after transform
Missing SymbolId: Errors
Missing SymbolId: _Errors
Missing ReferenceId: Errors
Missing ReferenceId: Errors
Missing SymbolId: WithGenericSignaturesInBaseType
Missing SymbolId: _WithGenericSignaturesInBaseType
Missing ReferenceId: WithGenericSignaturesInBaseType
Missing ReferenceId: WithGenericSignaturesInBaseType

tasks/coverage/typescript/tests/cases/conformance/types/typeRelationships/subtypesAndSuperTypes/subtypingWithConstructSignatures4.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Base", "Derived", "Derived2", "OtherDerived", "T", "U", "V", "r1", "r11", "r11a", "r11arg", "r11arg2", "r11b", "r15", "r15a", "r15arg", "r15arg2", "r15b", "r16", "r16a", "r16arg", "r16arg2", "r16b", "r17", "r17arg", "r18", "r18arg", "r1a", "r1arg", "r1arg2", "r1b", "r2", "r2a", "r2arg", "r2arg2", "r2b", "r3", "r3a", "r3arg", "r3arg2", "r3b", "r4", "r4a", "r4arg", "r4arg2", "r4b", "r5", "r5a", "r5arg", "r5arg2", "r5b", "r6", "r6a", "r6arg", "r6arg2", "r6b"]
current  scope ScopeId(0): ["Base", "Derived", "Derived2", "OtherDerived", "r1", "r11", "r11a", "r11arg", "r11arg2", "r11b", "r15", "r15a", "r15arg", "r15arg2", "r15b", "r16", "r16a", "r16arg", "r16arg2", "r16b", "r17", "r17arg", "r18", "r18arg", "r1a", "r1arg", "r1arg2", "r1b", "r2", "r2a", "r2arg", "r2arg2", "r2b", "r3", "r3a", "r3arg", "r3arg2", "r3b", "r4", "r4a", "r4arg", "r4arg2", "r4b", "r5", "r5a", "r5arg", "r5arg2", "r5b", "r6", "r6a", "r6arg", "r6arg2", "r6b"]

tasks/coverage/typescript/tests/cases/conformance/types/typeRelationships/subtypesAndSuperTypes/subtypingWithConstructSignatures5.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["A", "B", "Base", "Derived", "Derived2", "I", "OtherDerived"]
current  scope ScopeId(0): ["Base", "Derived", "Derived2", "OtherDerived"]

tasks/coverage/typescript/tests/cases/conformance/types/typeRelationships/subtypesAndSuperTypes/subtypingWithObjectMembersOptionality.ts
semantic error: Semantic Collector failed after transform
Missing SymbolId: TwoLevels
Missing SymbolId: _TwoLevels
Missing ReferenceId: TwoLevels
Missing ReferenceId: TwoLevels

tasks/coverage/typescript/tests/cases/conformance/types/typeRelationships/subtypesAndSuperTypes/subtypingWithObjectMembersOptionality3.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Base", "Derived", "S", "S2", "S3", "T", "T2", "T3", "a", "b", "r"]
current  scope ScopeId(0): ["a", "b", "r"]

tasks/coverage/typescript/tests/cases/conformance/types/typeRelationships/subtypesAndSuperTypes/subtypingWithObjectMembersOptionality4.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Base", "Derived", "S", "S2", "S3", "T", "T2", "T3", "a", "b", "r"]
current  scope ScopeId(0): ["a", "b", "r"]

tasks/coverage/typescript/tests/cases/conformance/types/typeRelationships/subtypesAndSuperTypes/subtypingWithOptionalProperties.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(1): ["T", "a", "b"]
current  scope ScopeId(1): ["a", "b"]

tasks/coverage/typescript/tests/cases/conformance/types/typeRelationships/subtypesAndSuperTypes/undefinedIsSubtypeOfEverything.ts
semantic error: Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript
Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript

tasks/coverage/typescript/tests/cases/conformance/types/typeRelationships/typeAndMemberIdentity/objectTypesIdentity.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["A", "B", "C", "I", "a", "b", "foo1", "foo10", "foo11", "foo12", "foo13", "foo14", "foo1b", "foo1c", "foo2", "foo3", "foo4", "foo5", "foo5b", "foo6", "foo7", "foo8", "foo9"]
current  scope ScopeId(0): ["A", "B", "C", "a", "b", "foo1", "foo10", "foo11", "foo12", "foo13", "foo14", "foo1b", "foo1c", "foo2", "foo3", "foo4", "foo5", "foo5b", "foo6", "foo7", "foo8", "foo9"]
Bindings Mismatch:
previous scope ScopeId(3): ["T"]
current  scope ScopeId(3): []

tasks/coverage/typescript/tests/cases/conformance/types/typeRelationships/typeAndMemberIdentity/objectTypesIdentity2.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["A", "B", "C", "E", "I", "a", "b", "foo10", "foo11", "foo12", "foo13", "foo14", "foo5", "foo5b", "foo6", "foo7", "foo8", "foo9"]
current  scope ScopeId(0): ["A", "B", "C", "E", "a", "b", "foo10", "foo11", "foo12", "foo13", "foo14", "foo5", "foo5b", "foo6", "foo7", "foo8", "foo9"]
Bindings Mismatch:
previous scope ScopeId(3): ["T"]
current  scope ScopeId(3): []
Bindings Mismatch:
previous scope ScopeId(5): ["A", "E"]
current  scope ScopeId(4): ["E"]

tasks/coverage/typescript/tests/cases/conformance/types/typeRelationships/typeAndMemberIdentity/objectTypesIdentityWithCallSignatures.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["A", "B", "C", "I", "I2", "a", "b", "foo1", "foo10", "foo11", "foo12", "foo12b", "foo13", "foo14", "foo15", "foo1b", "foo1c", "foo2", "foo3", "foo4", "foo5", "foo5b", "foo6", "foo7", "foo8", "foo9"]
current  scope ScopeId(0): ["A", "B", "C", "a", "b", "foo1", "foo10", "foo11", "foo12", "foo12b", "foo13", "foo14", "foo15", "foo1b", "foo1c", "foo2", "foo3", "foo4", "foo5", "foo5b", "foo6", "foo7", "foo8", "foo9"]
Bindings Mismatch:
previous scope ScopeId(5): ["T"]
current  scope ScopeId(5): []

tasks/coverage/typescript/tests/cases/conformance/types/typeRelationships/typeAndMemberIdentity/objectTypesIdentityWithCallSignatures2.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["A", "B", "C", "I", "I2", "a", "b", "foo1", "foo10", "foo11", "foo12", "foo12b", "foo13", "foo14", "foo15", "foo1b", "foo1c", "foo2", "foo3", "foo4", "foo5", "foo5b", "foo6", "foo7", "foo8", "foo9"]
current  scope ScopeId(0): ["A", "B", "C", "a", "b", "foo1", "foo10", "foo11", "foo12", "foo12b", "foo13", "foo14", "foo15", "foo1b", "foo1c", "foo2", "foo3", "foo4", "foo5", "foo5b", "foo6", "foo7", "foo8", "foo9"]
Bindings Mismatch:
previous scope ScopeId(5): ["T"]
current  scope ScopeId(5): []

tasks/coverage/typescript/tests/cases/conformance/types/typeRelationships/typeAndMemberIdentity/objectTypesIdentityWithCallSignaturesDifferingParamCounts.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["A", "B", "C", "I", "I2", "a", "b", "foo1", "foo10", "foo11", "foo12", "foo12b", "foo13", "foo14", "foo15", "foo1b", "foo1c", "foo2", "foo3", "foo4", "foo5", "foo5b", "foo6", "foo7", "foo8", "foo9"]
current  scope ScopeId(0): ["A", "B", "C", "a", "b", "foo1", "foo10", "foo11", "foo12", "foo12b", "foo13", "foo14", "foo15", "foo1b", "foo1c", "foo2", "foo3", "foo4", "foo5", "foo5b", "foo6", "foo7", "foo8", "foo9"]
Bindings Mismatch:
previous scope ScopeId(5): ["T"]
current  scope ScopeId(5): []

tasks/coverage/typescript/tests/cases/conformance/types/typeRelationships/typeAndMemberIdentity/objectTypesIdentityWithCallSignaturesDifferingParamCounts2.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["I", "I2", "a", "foo13", "foo14", "foo14b", "foo15", "foo2", "foo3", "foo4", "foo5"]
current  scope ScopeId(0): ["a", "foo13", "foo14", "foo14b", "foo15", "foo2", "foo3", "foo4", "foo5"]

tasks/coverage/typescript/tests/cases/conformance/types/typeRelationships/typeAndMemberIdentity/objectTypesIdentityWithCallSignaturesWithOverloads.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["A", "B", "C", "I", "I2", "a", "b", "foo1", "foo10", "foo11", "foo12", "foo12b", "foo13", "foo14", "foo15", "foo1b", "foo1c", "foo2", "foo3", "foo4", "foo5", "foo5b", "foo6", "foo7", "foo8", "foo9"]
current  scope ScopeId(0): ["A", "B", "C", "a", "b", "foo1", "foo10", "foo11", "foo12", "foo12b", "foo13", "foo14", "foo15", "foo1b", "foo1c", "foo2", "foo3", "foo4", "foo5", "foo5b", "foo6", "foo7", "foo8", "foo9"]
Bindings Mismatch:
previous scope ScopeId(9): ["T"]
current  scope ScopeId(5): []

tasks/coverage/typescript/tests/cases/conformance/types/typeRelationships/typeAndMemberIdentity/objectTypesIdentityWithComplexConstraints.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["A", "B", "foo"]
current  scope ScopeId(0): ["foo"]

tasks/coverage/typescript/tests/cases/conformance/types/typeRelationships/typeAndMemberIdentity/objectTypesIdentityWithConstructSignatures.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["A", "B", "C", "I", "I2", "a", "foo1", "foo10", "foo12", "foo12b", "foo13", "foo15", "foo1b", "foo1c", "foo2", "foo3", "foo5", "foo5b", "foo6", "foo7", "foo8", "foo9"]
current  scope ScopeId(0): ["A", "B", "C", "a", "foo1", "foo10", "foo12", "foo12b", "foo13", "foo15", "foo1b", "foo1c", "foo2", "foo3", "foo5", "foo5b", "foo6", "foo7", "foo8", "foo9"]
Bindings Mismatch:
previous scope ScopeId(5): ["T"]
current  scope ScopeId(5): []

tasks/coverage/typescript/tests/cases/conformance/types/typeRelationships/typeAndMemberIdentity/objectTypesIdentityWithConstructSignatures2.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["B", "C", "I", "I2", "a", "b", "foo10", "foo11", "foo12", "foo12b", "foo13", "foo14", "foo15", "foo1b", "foo1c", "foo2", "foo3", "foo4", "foo8", "foo9"]
current  scope ScopeId(0): ["B", "C", "a", "b", "foo10", "foo11", "foo12", "foo12b", "foo13", "foo14", "foo15", "foo1b", "foo1c", "foo2", "foo3", "foo4", "foo8", "foo9"]
Bindings Mismatch:
previous scope ScopeId(3): ["T"]
current  scope ScopeId(3): []

tasks/coverage/typescript/tests/cases/conformance/types/typeRelationships/typeAndMemberIdentity/objectTypesIdentityWithConstructSignaturesDifferingParamCounts.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["B", "C", "I", "I2", "a", "b", "foo10", "foo11", "foo12", "foo12b", "foo13", "foo14", "foo15", "foo1b", "foo1c", "foo2", "foo3", "foo4", "foo8", "foo9"]
current  scope ScopeId(0): ["B", "C", "a", "b", "foo10", "foo11", "foo12", "foo12b", "foo13", "foo14", "foo15", "foo1b", "foo1c", "foo2", "foo3", "foo4", "foo8", "foo9"]
Bindings Mismatch:
previous scope ScopeId(3): ["T"]
current  scope ScopeId(3): []

tasks/coverage/typescript/tests/cases/conformance/types/typeRelationships/typeAndMemberIdentity/objectTypesIdentityWithGenericCallSignatures.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["A", "B", "C", "I", "I2", "a", "b", "foo1", "foo10", "foo11", "foo12", "foo12b", "foo13", "foo14", "foo15", "foo1b", "foo1c", "foo2", "foo3", "foo4", "foo5", "foo5b", "foo6", "foo7", "foo8", "foo9"]
current  scope ScopeId(0): ["A", "B", "C", "a", "b", "foo1", "foo10", "foo11", "foo12", "foo12b", "foo13", "foo14", "foo15", "foo1b", "foo1c", "foo2", "foo3", "foo4", "foo5", "foo5b", "foo6", "foo7", "foo8", "foo9"]
Bindings Mismatch:
previous scope ScopeId(2): ["T", "x"]
current  scope ScopeId(2): ["x"]
Bindings Mismatch:
previous scope ScopeId(3): ["T"]
current  scope ScopeId(3): []
Bindings Mismatch:
previous scope ScopeId(5): ["T"]
current  scope ScopeId(5): []
Bindings Mismatch:
previous scope ScopeId(12): ["T", "x"]
current  scope ScopeId(7): ["x"]

tasks/coverage/typescript/tests/cases/conformance/types/typeRelationships/typeAndMemberIdentity/objectTypesIdentityWithGenericCallSignatures2.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["A", "B", "C", "I", "I2", "a", "b", "foo1", "foo10", "foo11", "foo12", "foo12b", "foo13", "foo14", "foo15", "foo1b", "foo1c", "foo2", "foo3", "foo4", "foo5", "foo5b", "foo6", "foo7", "foo8", "foo9"]
current  scope ScopeId(0): ["A", "B", "C", "a", "b", "foo1", "foo10", "foo11", "foo12", "foo12b", "foo13", "foo14", "foo15", "foo1b", "foo1c", "foo2", "foo3", "foo4", "foo5", "foo5b", "foo6", "foo7", "foo8", "foo9"]
Bindings Mismatch:
previous scope ScopeId(2): ["T", "U", "x", "y"]
current  scope ScopeId(2): ["x", "y"]
Bindings Mismatch:
previous scope ScopeId(3): ["T", "U"]
current  scope ScopeId(3): []
Bindings Mismatch:
previous scope ScopeId(5): ["T", "U"]
current  scope ScopeId(5): []
Bindings Mismatch:
previous scope ScopeId(12): ["T", "U", "x", "y"]
current  scope ScopeId(7): ["x", "y"]

tasks/coverage/typescript/tests/cases/conformance/types/typeRelationships/typeAndMemberIdentity/objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["A", "B", "C", "I", "I2", "a", "b", "foo1", "foo10", "foo11", "foo12", "foo12b", "foo13", "foo14", "foo15", "foo1b", "foo1c", "foo2", "foo3", "foo4", "foo5", "foo5b", "foo6", "foo7", "foo8", "foo9"]
current  scope ScopeId(0): ["A", "B", "C", "a", "b", "foo1", "foo10", "foo11", "foo12", "foo12b", "foo13", "foo14", "foo15", "foo1b", "foo1c", "foo2", "foo3", "foo4", "foo5", "foo5b", "foo6", "foo7", "foo8", "foo9"]
Bindings Mismatch:
previous scope ScopeId(2): ["T", "x"]
current  scope ScopeId(2): ["x"]
Bindings Mismatch:
previous scope ScopeId(3): ["T"]
current  scope ScopeId(3): []
Bindings Mismatch:
previous scope ScopeId(5): ["T"]
current  scope ScopeId(5): []
Bindings Mismatch:
previous scope ScopeId(12): ["T", "x"]
current  scope ScopeId(7): ["x"]

tasks/coverage/typescript/tests/cases/conformance/types/typeRelationships/typeAndMemberIdentity/objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints2.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["A", "B", "C", "D", "I", "I2", "a", "b", "foo1", "foo10", "foo11", "foo12", "foo12b", "foo13", "foo14", "foo15", "foo1b", "foo1c", "foo2", "foo3", "foo4", "foo5", "foo5b", "foo5c", "foo6", "foo6c", "foo7", "foo8", "foo9"]
current  scope ScopeId(0): ["A", "B", "C", "D", "a", "b", "foo1", "foo10", "foo11", "foo12", "foo12b", "foo13", "foo14", "foo15", "foo1b", "foo1c", "foo2", "foo3", "foo4", "foo5", "foo5b", "foo5c", "foo6", "foo6c", "foo7", "foo8", "foo9"]
Bindings Mismatch:
previous scope ScopeId(2): ["T", "U", "x", "y"]
current  scope ScopeId(2): ["x", "y"]
Bindings Mismatch:
previous scope ScopeId(3): ["T", "U"]
current  scope ScopeId(3): []
Bindings Mismatch:
previous scope ScopeId(5): ["T", "U"]
current  scope ScopeId(5): []
Bindings Mismatch:
previous scope ScopeId(7): ["T", "U"]
current  scope ScopeId(7): []
Bindings Mismatch:
previous scope ScopeId(14): ["T", "U", "x", "y"]
current  scope ScopeId(9): ["x", "y"]

tasks/coverage/typescript/tests/cases/conformance/types/typeRelationships/typeAndMemberIdentity/objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints3.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["A", "B", "C", "D", "Five", "Four", "I", "I2", "One", "Six", "Three", "Two", "a", "b", "foo1", "foo10", "foo11", "foo12", "foo12b", "foo13", "foo14", "foo15", "foo1b", "foo1c", "foo2", "foo3", "foo4", "foo5", "foo5b", "foo5c", "foo6", "foo6c", "foo7", "foo8", "foo9"]
current  scope ScopeId(0): ["A", "B", "C", "D", "One", "Two", "a", "b", "foo1", "foo10", "foo11", "foo12", "foo12b", "foo13", "foo14", "foo15", "foo1b", "foo1c", "foo2", "foo3", "foo4", "foo5", "foo5b", "foo5c", "foo6", "foo6c", "foo7", "foo8", "foo9"]
Bindings Mismatch:
previous scope ScopeId(8): ["T", "U", "x", "y"]
current  scope ScopeId(4): ["x", "y"]
Bindings Mismatch:
previous scope ScopeId(9): ["T", "U"]
current  scope ScopeId(5): []
Bindings Mismatch:
previous scope ScopeId(11): ["T", "U"]
current  scope ScopeId(7): []
Bindings Mismatch:
previous scope ScopeId(13): ["T", "U"]
current  scope ScopeId(9): []
Bindings Mismatch:
previous scope ScopeId(20): ["T", "U", "x", "y"]
current  scope ScopeId(11): ["x", "y"]

tasks/coverage/typescript/tests/cases/conformance/types/typeRelationships/typeAndMemberIdentity/objectTypesIdentityWithGenericCallSignaturesDifferingByReturnType.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["A", "B", "C", "I", "I2", "a", "b", "foo1", "foo10", "foo11", "foo12", "foo12b", "foo13", "foo14", "foo15", "foo1b", "foo1c", "foo2", "foo3", "foo4", "foo5", "foo5b", "foo6", "foo7", "foo8", "foo9"]
current  scope ScopeId(0): ["A", "B", "C", "a", "b", "foo1", "foo10", "foo11", "foo12", "foo12b", "foo13", "foo14", "foo15", "foo1b", "foo1c", "foo2", "foo3", "foo4", "foo5", "foo5b", "foo6", "foo7", "foo8", "foo9"]
Bindings Mismatch:
previous scope ScopeId(2): ["T", "x"]
current  scope ScopeId(2): ["x"]
Bindings Mismatch:
previous scope ScopeId(3): ["T"]
current  scope ScopeId(3): []
Bindings Mismatch:
previous scope ScopeId(5): ["T"]
current  scope ScopeId(5): []
Bindings Mismatch:
previous scope ScopeId(12): ["T", "x"]
current  scope ScopeId(7): ["x"]

tasks/coverage/typescript/tests/cases/conformance/types/typeRelationships/typeAndMemberIdentity/objectTypesIdentityWithGenericCallSignaturesDifferingByReturnType2.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["A", "B", "C", "I", "I2", "a", "b", "foo1", "foo10", "foo11", "foo12", "foo12b", "foo13", "foo14", "foo15", "foo1b", "foo1c", "foo2", "foo3", "foo4", "foo5", "foo5b", "foo6", "foo7", "foo8", "foo9"]
current  scope ScopeId(0): ["A", "B", "C", "a", "b", "foo1", "foo10", "foo11", "foo12", "foo12b", "foo13", "foo14", "foo15", "foo1b", "foo1c", "foo2", "foo3", "foo4", "foo5", "foo5b", "foo6", "foo7", "foo8", "foo9"]
Bindings Mismatch:
previous scope ScopeId(2): ["T", "x"]
current  scope ScopeId(2): ["x"]
Bindings Mismatch:
previous scope ScopeId(3): ["T"]
current  scope ScopeId(3): []
Bindings Mismatch:
previous scope ScopeId(5): ["T"]
current  scope ScopeId(5): []
Bindings Mismatch:
previous scope ScopeId(12): ["T", "x"]
current  scope ScopeId(7): ["x"]

tasks/coverage/typescript/tests/cases/conformance/types/typeRelationships/typeAndMemberIdentity/objectTypesIdentityWithGenericCallSignaturesDifferingTypeParameterCounts.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["A", "B", "C", "I", "I2", "a", "b", "foo1", "foo10", "foo11", "foo12", "foo12b", "foo13", "foo14", "foo15", "foo1b", "foo1c", "foo2", "foo3", "foo4", "foo5", "foo5b", "foo6", "foo7", "foo8", "foo9"]
current  scope ScopeId(0): ["A", "B", "C", "a", "b", "foo1", "foo10", "foo11", "foo12", "foo12b", "foo13", "foo14", "foo15", "foo1b", "foo1c", "foo2", "foo3", "foo4", "foo5", "foo5b", "foo6", "foo7", "foo8", "foo9"]
Bindings Mismatch:
previous scope ScopeId(2): ["T", "x"]
current  scope ScopeId(2): ["x"]
Bindings Mismatch:
previous scope ScopeId(3): ["U", "V"]
current  scope ScopeId(3): []
Bindings Mismatch:
previous scope ScopeId(5): ["V", "W", "X"]
current  scope ScopeId(5): []
Bindings Mismatch:
previous scope ScopeId(12): ["A", "B", "C", "D", "E", "F", "x"]
current  scope ScopeId(7): ["x"]

tasks/coverage/typescript/tests/cases/conformance/types/typeRelationships/typeAndMemberIdentity/objectTypesIdentityWithGenericCallSignaturesDifferingTypeParameterCounts2.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["A", "B", "C", "D", "I", "I2", "Z", "a", "foo1", "foo13", "foo14", "foo14b", "foo15", "foo2", "foo3"]
current  scope ScopeId(0): ["a", "foo1", "foo13", "foo14", "foo14b", "foo15", "foo2", "foo3"]

tasks/coverage/typescript/tests/cases/conformance/types/typeRelationships/typeAndMemberIdentity/objectTypesIdentityWithGenericCallSignaturesDifferingTypeParameterNames.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["A", "B", "C", "I", "I2", "a", "b", "foo1", "foo10", "foo11", "foo12", "foo12b", "foo13", "foo14", "foo15", "foo1b", "foo1c", "foo2", "foo3", "foo4", "foo5", "foo5b", "foo6", "foo7", "foo8", "foo9"]
current  scope ScopeId(0): ["A", "B", "C", "a", "b", "foo1", "foo10", "foo11", "foo12", "foo12b", "foo13", "foo14", "foo15", "foo1b", "foo1c", "foo2", "foo3", "foo4", "foo5", "foo5b", "foo6", "foo7", "foo8", "foo9"]
Bindings Mismatch:
previous scope ScopeId(2): ["T", "x"]
current  scope ScopeId(2): ["x"]
Bindings Mismatch:
previous scope ScopeId(3): ["U"]
current  scope ScopeId(3): []
Bindings Mismatch:
previous scope ScopeId(5): ["V"]
current  scope ScopeId(5): []
Bindings Mismatch:
previous scope ScopeId(12): ["A", "x"]
current  scope ScopeId(7): ["x"]

tasks/coverage/typescript/tests/cases/conformance/types/typeRelationships/typeAndMemberIdentity/objectTypesIdentityWithGenericCallSignaturesOptionalParams.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["A", "B", "C", "I", "I2", "a", "b", "foo1", "foo10", "foo11", "foo12", "foo12b", "foo13", "foo14", "foo15", "foo1b", "foo1c", "foo2", "foo3", "foo4", "foo5", "foo5b", "foo6", "foo7", "foo8", "foo9"]
current  scope ScopeId(0): ["A", "B", "C", "a", "b", "foo1", "foo10", "foo11", "foo12", "foo12b", "foo13", "foo14", "foo15", "foo1b", "foo1c", "foo2", "foo3", "foo4", "foo5", "foo5b", "foo6", "foo7", "foo8", "foo9"]
Bindings Mismatch:
previous scope ScopeId(2): ["T", "x", "y"]
current  scope ScopeId(2): ["x", "y"]
Bindings Mismatch:
previous scope ScopeId(3): ["T"]
current  scope ScopeId(3): []
Bindings Mismatch:
previous scope ScopeId(5): ["T"]
current  scope ScopeId(5): []
Bindings Mismatch:
previous scope ScopeId(12): ["T", "x", "y"]
current  scope ScopeId(7): ["x", "y"]

tasks/coverage/typescript/tests/cases/conformance/types/typeRelationships/typeAndMemberIdentity/objectTypesIdentityWithGenericCallSignaturesOptionalParams2.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["A", "B", "C", "I", "I2", "a", "b", "foo1", "foo10", "foo11", "foo12", "foo12b", "foo13", "foo14", "foo15", "foo1b", "foo1c", "foo2", "foo3", "foo4", "foo5", "foo5b", "foo6", "foo7", "foo8", "foo9"]
current  scope ScopeId(0): ["A", "B", "C", "a", "b", "foo1", "foo10", "foo11", "foo12", "foo12b", "foo13", "foo14", "foo15", "foo1b", "foo1c", "foo2", "foo3", "foo4", "foo5", "foo5b", "foo6", "foo7", "foo8", "foo9"]
Bindings Mismatch:
previous scope ScopeId(2): ["T", "U", "x", "y"]
current  scope ScopeId(2): ["x", "y"]
Bindings Mismatch:
previous scope ScopeId(3): ["T", "U"]
current  scope ScopeId(3): []
Bindings Mismatch:
previous scope ScopeId(5): ["T", "U"]
current  scope ScopeId(5): []
Bindings Mismatch:
previous scope ScopeId(12): ["T", "U", "x", "y"]
current  scope ScopeId(7): ["x", "y"]

tasks/coverage/typescript/tests/cases/conformance/types/typeRelationships/typeAndMemberIdentity/objectTypesIdentityWithGenericCallSignaturesOptionalParams3.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["A", "B", "C", "I", "I2", "a", "b", "foo1", "foo10", "foo11", "foo12", "foo12b", "foo13", "foo14", "foo15", "foo1b", "foo1c", "foo2", "foo3", "foo4", "foo5", "foo5b", "foo6", "foo7", "foo8", "foo9"]
current  scope ScopeId(0): ["A", "B", "C", "a", "b", "foo1", "foo10", "foo11", "foo12", "foo12b", "foo13", "foo14", "foo15", "foo1b", "foo1c", "foo2", "foo3", "foo4", "foo5", "foo5b", "foo6", "foo7", "foo8", "foo9"]
Bindings Mismatch:
previous scope ScopeId(2): ["T", "U", "x", "y"]
current  scope ScopeId(2): ["x", "y"]
Bindings Mismatch:
previous scope ScopeId(3): ["T", "U"]
current  scope ScopeId(3): []
Bindings Mismatch:
previous scope ScopeId(5): ["T", "U"]
current  scope ScopeId(5): []
Bindings Mismatch:
previous scope ScopeId(12): ["T", "U", "x", "y"]
current  scope ScopeId(7): ["x", "y"]

tasks/coverage/typescript/tests/cases/conformance/types/typeRelationships/typeAndMemberIdentity/objectTypesIdentityWithGenericConstructSignaturesDifferingByConstraints.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["B", "C", "I", "I2", "a", "b", "foo10", "foo11", "foo12", "foo12b", "foo13", "foo14", "foo1b", "foo1c", "foo2", "foo3", "foo4", "foo8", "foo9"]
current  scope ScopeId(0): ["B", "C", "a", "b", "foo10", "foo11", "foo12", "foo12b", "foo13", "foo14", "foo1b", "foo1c", "foo2", "foo3", "foo4", "foo8", "foo9"]
Bindings Mismatch:
previous scope ScopeId(1): ["T"]
current  scope ScopeId(1): []
Bindings Mismatch:
previous scope ScopeId(3): ["T"]
current  scope ScopeId(3): []
Bindings Mismatch:
previous scope ScopeId(10): ["T", "x"]
current  scope ScopeId(5): ["x"]

tasks/coverage/typescript/tests/cases/conformance/types/typeRelationships/typeAndMemberIdentity/objectTypesIdentityWithGenericConstructSignaturesDifferingByConstraints2.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["B", "C", "D", "I", "I2", "a", "b", "foo10", "foo11", "foo12", "foo12b", "foo13", "foo14", "foo1b", "foo1c", "foo2", "foo3", "foo4", "foo5c", "foo6c", "foo8", "foo9"]
current  scope ScopeId(0): ["B", "C", "D", "a", "b", "foo10", "foo11", "foo12", "foo12b", "foo13", "foo14", "foo1b", "foo1c", "foo2", "foo3", "foo4", "foo5c", "foo6c", "foo8", "foo9"]
Bindings Mismatch:
previous scope ScopeId(1): ["T", "U"]
current  scope ScopeId(1): []
Bindings Mismatch:
previous scope ScopeId(3): ["T", "U"]
current  scope ScopeId(3): []
Bindings Mismatch:
previous scope ScopeId(5): ["T", "U"]
current  scope ScopeId(5): []
Bindings Mismatch:
previous scope ScopeId(12): ["T", "U", "x", "y"]
current  scope ScopeId(7): ["x", "y"]

tasks/coverage/typescript/tests/cases/conformance/types/typeRelationships/typeAndMemberIdentity/objectTypesIdentityWithGenericConstructSignaturesDifferingByConstraints3.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["B", "C", "D", "Five", "Four", "I", "I2", "One", "Six", "Three", "Two", "a", "b", "foo10", "foo11", "foo12", "foo12b", "foo13", "foo14", "foo1b", "foo1c", "foo2", "foo3", "foo4", "foo5c", "foo6c", "foo8", "foo9"]
current  scope ScopeId(0): ["B", "C", "D", "One", "Two", "a", "b", "foo10", "foo11", "foo12", "foo12b", "foo13", "foo14", "foo1b", "foo1c", "foo2", "foo3", "foo4", "foo5c", "foo6c", "foo8", "foo9"]
Bindings Mismatch:
previous scope ScopeId(7): ["T", "U"]
current  scope ScopeId(3): []
Bindings Mismatch:
previous scope ScopeId(9): ["T", "U"]
current  scope ScopeId(5): []
Bindings Mismatch:
previous scope ScopeId(11): ["T", "U"]
current  scope ScopeId(7): []
Bindings Mismatch:
previous scope ScopeId(18): ["T", "U", "x", "y"]
current  scope ScopeId(9): ["x", "y"]

tasks/coverage/typescript/tests/cases/conformance/types/typeRelationships/typeAndMemberIdentity/objectTypesIdentityWithGenericConstructSignaturesDifferingByReturnType.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["B", "C", "I", "I2", "a", "b", "foo10", "foo11", "foo12", "foo12b", "foo13", "foo14", "foo15", "foo1b", "foo1c", "foo2", "foo3", "foo4", "foo5", "foo8", "foo9"]
current  scope ScopeId(0): ["B", "C", "a", "b", "foo10", "foo11", "foo12", "foo12b", "foo13", "foo14", "foo15", "foo1b", "foo1c", "foo2", "foo3", "foo4", "foo5", "foo8", "foo9"]
Bindings Mismatch:
previous scope ScopeId(1): ["T"]
current  scope ScopeId(1): []
Bindings Mismatch:
previous scope ScopeId(3): ["T"]
current  scope ScopeId(3): []
Bindings Mismatch:
previous scope ScopeId(10): ["T", "x"]
current  scope ScopeId(5): ["x"]

tasks/coverage/typescript/tests/cases/conformance/types/typeRelationships/typeAndMemberIdentity/objectTypesIdentityWithGenericConstructSignaturesDifferingByReturnType2.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["B", "C", "I", "I2", "a", "b", "foo10", "foo11", "foo12", "foo12b", "foo13", "foo14", "foo15", "foo1b", "foo1c", "foo2", "foo3", "foo4", "foo8", "foo9"]
current  scope ScopeId(0): ["B", "C", "a", "b", "foo10", "foo11", "foo12", "foo12b", "foo13", "foo14", "foo15", "foo1b", "foo1c", "foo2", "foo3", "foo4", "foo8", "foo9"]
Bindings Mismatch:
previous scope ScopeId(1): ["T"]
current  scope ScopeId(1): []
Bindings Mismatch:
previous scope ScopeId(3): ["T"]
current  scope ScopeId(3): []
Bindings Mismatch:
previous scope ScopeId(10): ["T", "x"]
current  scope ScopeId(5): ["x"]

tasks/coverage/typescript/tests/cases/conformance/types/typeRelationships/typeAndMemberIdentity/objectTypesIdentityWithGenericConstructSignaturesDifferingTypeParameterCounts.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["B", "C", "I", "I2", "a", "b", "foo10", "foo11", "foo12", "foo12b", "foo13", "foo14", "foo1b", "foo1c", "foo2", "foo3", "foo4", "foo8", "foo9"]
current  scope ScopeId(0): ["B", "C", "a", "b", "foo10", "foo11", "foo12", "foo12b", "foo13", "foo14", "foo1b", "foo1c", "foo2", "foo3", "foo4", "foo8", "foo9"]
Bindings Mismatch:
previous scope ScopeId(1): ["U", "V"]
current  scope ScopeId(1): []
Bindings Mismatch:
previous scope ScopeId(3): ["V", "W", "X"]
current  scope ScopeId(3): []
Bindings Mismatch:
previous scope ScopeId(10): ["A", "B", "C", "D", "E", "F", "x"]
current  scope ScopeId(5): ["x"]

tasks/coverage/typescript/tests/cases/conformance/types/typeRelationships/typeAndMemberIdentity/objectTypesIdentityWithGenericConstructSignaturesDifferingTypeParameterNames.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["B", "C", "I", "I2", "a", "b", "foo10", "foo11", "foo12", "foo12b", "foo13", "foo14", "foo1b", "foo1c", "foo2", "foo3", "foo4", "foo8", "foo9"]
current  scope ScopeId(0): ["B", "C", "a", "b", "foo10", "foo11", "foo12", "foo12b", "foo13", "foo14", "foo1b", "foo1c", "foo2", "foo3", "foo4", "foo8", "foo9"]
Bindings Mismatch:
previous scope ScopeId(1): ["U"]
current  scope ScopeId(1): []
Bindings Mismatch:
previous scope ScopeId(3): ["V"]
current  scope ScopeId(3): []
Bindings Mismatch:
previous scope ScopeId(10): ["A", "x"]
current  scope ScopeId(5): ["x"]

tasks/coverage/typescript/tests/cases/conformance/types/typeRelationships/typeAndMemberIdentity/objectTypesIdentityWithGenericConstructSignaturesOptionalParams.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["B", "C", "I", "I2", "a", "b", "foo10", "foo11", "foo12", "foo12b", "foo13", "foo14", "foo1b", "foo1c", "foo2", "foo3", "foo4", "foo8", "foo9"]
current  scope ScopeId(0): ["B", "C", "a", "b", "foo10", "foo11", "foo12", "foo12b", "foo13", "foo14", "foo1b", "foo1c", "foo2", "foo3", "foo4", "foo8", "foo9"]
Bindings Mismatch:
previous scope ScopeId(1): ["T"]
current  scope ScopeId(1): []
Bindings Mismatch:
previous scope ScopeId(3): ["T"]
current  scope ScopeId(3): []
Bindings Mismatch:
previous scope ScopeId(10): ["T", "x", "y"]
current  scope ScopeId(5): ["x", "y"]

tasks/coverage/typescript/tests/cases/conformance/types/typeRelationships/typeAndMemberIdentity/objectTypesIdentityWithGenericConstructSignaturesOptionalParams2.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["B", "C", "I", "I2", "a", "b", "foo10", "foo11", "foo12", "foo12b", "foo13", "foo14", "foo1b", "foo1c", "foo2", "foo3", "foo4", "foo8", "foo9"]
current  scope ScopeId(0): ["B", "C", "a", "b", "foo10", "foo11", "foo12", "foo12b", "foo13", "foo14", "foo1b", "foo1c", "foo2", "foo3", "foo4", "foo8", "foo9"]
Bindings Mismatch:
previous scope ScopeId(1): ["T", "U"]
current  scope ScopeId(1): []
Bindings Mismatch:
previous scope ScopeId(3): ["T", "U"]
current  scope ScopeId(3): []
Bindings Mismatch:
previous scope ScopeId(10): ["T", "U", "x", "y"]
current  scope ScopeId(5): ["x", "y"]

tasks/coverage/typescript/tests/cases/conformance/types/typeRelationships/typeAndMemberIdentity/objectTypesIdentityWithGenericConstructSignaturesOptionalParams3.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["B", "C", "I", "I2", "a", "b", "foo10", "foo11", "foo12", "foo12b", "foo13", "foo14", "foo1b", "foo1c", "foo2", "foo3", "foo4", "foo8", "foo9"]
current  scope ScopeId(0): ["B", "C", "a", "b", "foo10", "foo11", "foo12", "foo12b", "foo13", "foo14", "foo1b", "foo1c", "foo2", "foo3", "foo4", "foo8", "foo9"]
Bindings Mismatch:
previous scope ScopeId(1): ["T", "U"]
current  scope ScopeId(1): []
Bindings Mismatch:
previous scope ScopeId(3): ["T", "U"]
current  scope ScopeId(3): []
Bindings Mismatch:
previous scope ScopeId(10): ["T", "U", "x", "y"]
current  scope ScopeId(5): ["x", "y"]

tasks/coverage/typescript/tests/cases/conformance/types/typeRelationships/typeAndMemberIdentity/objectTypesIdentityWithNumericIndexers1.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["A", "B", "C", "I", "PA", "PB", "a", "b", "foo1", "foo10", "foo11", "foo11b", "foo11c", "foo12", "foo13", "foo14", "foo15", "foo16", "foo1b", "foo1c", "foo2", "foo3", "foo4", "foo5", "foo5b", "foo5c", "foo5d", "foo6", "foo7", "foo8", "foo9"]
current  scope ScopeId(0): ["A", "B", "C", "PA", "PB", "a", "b", "foo1", "foo10", "foo11", "foo11b", "foo11c", "foo12", "foo13", "foo14", "foo15", "foo16", "foo1b", "foo1c", "foo2", "foo3", "foo4", "foo5", "foo5b", "foo5c", "foo5d", "foo6", "foo7", "foo8", "foo9"]
Bindings Mismatch:
previous scope ScopeId(3): ["T"]
current  scope ScopeId(3): []

tasks/coverage/typescript/tests/cases/conformance/types/typeRelationships/typeAndMemberIdentity/objectTypesIdentityWithNumericIndexers2.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["A", "B", "Base", "C", "Derived", "I", "PA", "PB", "a", "b", "foo1", "foo10", "foo11", "foo11b", "foo11c", "foo12", "foo13", "foo14", "foo15", "foo16", "foo1b", "foo1c", "foo2", "foo3", "foo4", "foo5", "foo5b", "foo5c", "foo5d", "foo6", "foo7", "foo8", "foo9"]
current  scope ScopeId(0): ["A", "B", "Base", "C", "Derived", "PA", "PB", "a", "b", "foo1", "foo10", "foo11", "foo11b", "foo11c", "foo12", "foo13", "foo14", "foo15", "foo16", "foo1b", "foo1c", "foo2", "foo3", "foo4", "foo5", "foo5b", "foo5c", "foo5d", "foo6", "foo7", "foo8", "foo9"]
Bindings Mismatch:
previous scope ScopeId(5): ["T"]
current  scope ScopeId(5): []

tasks/coverage/typescript/tests/cases/conformance/types/typeRelationships/typeAndMemberIdentity/objectTypesIdentityWithNumericIndexers3.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["A", "B", "C", "I", "PA", "PB", "a", "b", "foo1", "foo10", "foo11", "foo11b", "foo11c", "foo12", "foo13", "foo14", "foo15", "foo16", "foo1b", "foo1c", "foo2", "foo3", "foo4", "foo5", "foo5b", "foo5c", "foo5d", "foo6", "foo7", "foo8", "foo9"]
current  scope ScopeId(0): ["A", "B", "C", "PA", "PB", "a", "b", "foo1", "foo10", "foo11", "foo11b", "foo11c", "foo12", "foo13", "foo14", "foo15", "foo16", "foo1b", "foo1c", "foo2", "foo3", "foo4", "foo5", "foo5b", "foo5c", "foo5d", "foo6", "foo7", "foo8", "foo9"]
Bindings Mismatch:
previous scope ScopeId(3): ["T"]
current  scope ScopeId(3): []

tasks/coverage/typescript/tests/cases/conformance/types/typeRelationships/typeAndMemberIdentity/objectTypesIdentityWithOptionality.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["A", "B", "C", "I", "a", "b", "foo10", "foo12", "foo13", "foo14", "foo2", "foo3", "foo6", "foo7", "foo8"]
current  scope ScopeId(0): ["A", "B", "C", "a", "b", "foo10", "foo12", "foo13", "foo14", "foo2", "foo3", "foo6", "foo7", "foo8"]
Bindings Mismatch:
previous scope ScopeId(3): ["T"]
current  scope ScopeId(3): []

tasks/coverage/typescript/tests/cases/conformance/types/typeRelationships/typeAndMemberIdentity/objectTypesIdentityWithPrivates.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["A", "B", "C", "I", "PA", "PB", "a", "b", "foo1", "foo10", "foo11", "foo11b", "foo11c", "foo12", "foo13", "foo14", "foo15", "foo16", "foo1b", "foo1c", "foo2", "foo3", "foo4", "foo5", "foo5b", "foo5c", "foo5d", "foo6", "foo7", "foo8", "foo9"]
current  scope ScopeId(0): ["A", "B", "C", "PA", "PB", "a", "b", "foo1", "foo10", "foo11", "foo11b", "foo11c", "foo12", "foo13", "foo14", "foo15", "foo16", "foo1b", "foo1c", "foo2", "foo3", "foo4", "foo5", "foo5b", "foo5c", "foo5d", "foo6", "foo7", "foo8", "foo9"]
Bindings Mismatch:
previous scope ScopeId(3): ["T"]
current  scope ScopeId(3): []

tasks/coverage/typescript/tests/cases/conformance/types/typeRelationships/typeAndMemberIdentity/objectTypesIdentityWithPrivates2.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(1): ["T"]
current  scope ScopeId(1): []
Bindings Mismatch:
previous scope ScopeId(2): ["T"]
current  scope ScopeId(2): []

tasks/coverage/typescript/tests/cases/conformance/types/typeRelationships/typeAndMemberIdentity/objectTypesIdentityWithPublics.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["A", "B", "C", "I", "a", "b", "foo1", "foo10", "foo11", "foo12", "foo13", "foo14", "foo1b", "foo1c", "foo2", "foo3", "foo4", "foo5", "foo5b", "foo6", "foo7", "foo8", "foo9"]
current  scope ScopeId(0): ["A", "B", "C", "a", "b", "foo1", "foo10", "foo11", "foo12", "foo13", "foo14", "foo1b", "foo1c", "foo2", "foo3", "foo4", "foo5", "foo5b", "foo6", "foo7", "foo8", "foo9"]
Bindings Mismatch:
previous scope ScopeId(3): ["T"]
current  scope ScopeId(3): []

tasks/coverage/typescript/tests/cases/conformance/types/typeRelationships/typeAndMemberIdentity/objectTypesIdentityWithStringIndexers.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["A", "B", "C", "I", "PA", "PB", "a", "b", "foo1", "foo10", "foo11", "foo11b", "foo11c", "foo12", "foo13", "foo14", "foo15", "foo16", "foo1b", "foo1c", "foo2", "foo3", "foo4", "foo5", "foo5b", "foo5c", "foo5d", "foo6", "foo7", "foo8", "foo9"]
current  scope ScopeId(0): ["A", "B", "C", "PA", "PB", "a", "b", "foo1", "foo10", "foo11", "foo11b", "foo11c", "foo12", "foo13", "foo14", "foo15", "foo16", "foo1b", "foo1c", "foo2", "foo3", "foo4", "foo5", "foo5b", "foo5c", "foo5d", "foo6", "foo7", "foo8", "foo9"]
Bindings Mismatch:
previous scope ScopeId(3): ["T"]
current  scope ScopeId(3): []

tasks/coverage/typescript/tests/cases/conformance/types/typeRelationships/typeAndMemberIdentity/objectTypesIdentityWithStringIndexers2.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["A", "B", "Base", "C", "Derived", "I", "PA", "PB", "a", "b", "foo1", "foo10", "foo11", "foo11b", "foo11c", "foo12", "foo13", "foo14", "foo15", "foo16", "foo1b", "foo1c", "foo2", "foo3", "foo4", "foo5", "foo5b", "foo5c", "foo5d", "foo6", "foo7", "foo8", "foo9"]
current  scope ScopeId(0): ["A", "B", "Base", "C", "Derived", "PA", "PB", "a", "b", "foo1", "foo10", "foo11", "foo11b", "foo11c", "foo12", "foo13", "foo14", "foo15", "foo16", "foo1b", "foo1c", "foo2", "foo3", "foo4", "foo5", "foo5b", "foo5c", "foo5d", "foo6", "foo7", "foo8", "foo9"]
Bindings Mismatch:
previous scope ScopeId(5): ["T"]
current  scope ScopeId(5): []

tasks/coverage/typescript/tests/cases/conformance/types/typeRelationships/typeAndMemberIdentity/primtiveTypesAreIdentical.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(17): ["A", "E"]
current  scope ScopeId(6): ["E"]

tasks/coverage/typescript/tests/cases/conformance/types/typeRelationships/typeAndMemberIdentity/typeParametersAreIdenticalToThemselves.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["C", "C2", "I", "I2", "foo1", "foo2", "foo3"]
current  scope ScopeId(0): ["C", "C2", "foo1", "foo2", "foo3"]
Bindings Mismatch:
previous scope ScopeId(3): ["T", "x"]
current  scope ScopeId(1): ["x"]
Bindings Mismatch:
previous scope ScopeId(6): ["T", "U", "x"]
current  scope ScopeId(2): ["x"]
Bindings Mismatch:
previous scope ScopeId(7): ["T", "U", "inner", "inner2", "x", "y"]
current  scope ScopeId(3): ["inner", "inner2", "x", "y"]
Bindings Mismatch:
previous scope ScopeId(14): ["T"]
current  scope ScopeId(6): []
Bindings Mismatch:
previous scope ScopeId(20): ["U", "a", "x"]
current  scope ScopeId(8): ["a", "x"]
Bindings Mismatch:
previous scope ScopeId(23): ["T", "x"]
current  scope ScopeId(9): ["x"]
Bindings Mismatch:
previous scope ScopeId(26): ["T", "x"]
current  scope ScopeId(10): ["x"]
Bindings Mismatch:
previous scope ScopeId(27): ["T"]
current  scope ScopeId(11): []
Bindings Mismatch:
previous scope ScopeId(33): ["U", "a", "x"]
current  scope ScopeId(13): ["a", "x"]
Bindings Mismatch:
previous scope ScopeId(36): ["T", "x"]
current  scope ScopeId(14): ["x"]

tasks/coverage/typescript/tests/cases/conformance/types/typeRelationships/typeInference/bivariantInferences.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Array", "a", "b", "x"]
current  scope ScopeId(0): ["x"]
reference Mismatch:
previous reference ReferenceId(4): Some("a")
current  reference ReferenceId(0): None
reference Mismatch:
previous reference ReferenceId(5): Some("b")
current  reference ReferenceId(1): None

tasks/coverage/typescript/tests/cases/conformance/types/typeRelationships/typeInference/discriminatedUnionInference.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Bar", "Foo", "FooA", "FooBar", "InferA", "Item", "x1", "x2"]
current  scope ScopeId(0): ["x1", "x2"]

tasks/coverage/typescript/tests/cases/conformance/types/typeRelationships/typeInference/genericCallTypeArgumentInference.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["C", "I", "c", "foo", "foo2", "foo2b", "i", "r", "r10", "r11", "r2", "r3", "r4", "r5", "r6", "r7", "r8", "r9"]
current  scope ScopeId(0): ["C", "c", "foo", "foo2", "foo2b", "i", "r", "r10", "r11", "r2", "r3", "r4", "r5", "r6", "r7", "r8", "r9"]
Bindings Mismatch:
previous scope ScopeId(1): ["T", "t"]
current  scope ScopeId(1): ["t"]
Bindings Mismatch:
previous scope ScopeId(2): ["T", "U", "t", "u"]
current  scope ScopeId(2): ["t", "u"]
Bindings Mismatch:
previous scope ScopeId(3): ["T", "U", "u", "x"]
current  scope ScopeId(3): ["u", "x"]
Bindings Mismatch:
previous scope ScopeId(4): ["T", "U"]
current  scope ScopeId(4): []
Bindings Mismatch:
previous scope ScopeId(8): ["T", "t", "u"]
current  scope ScopeId(8): ["t", "u"]
Bindings Mismatch:
previous scope ScopeId(9): ["U", "t", "u"]
current  scope ScopeId(9): ["t", "u"]
Bindings Mismatch:
previous scope ScopeId(10): ["T", "U", "t", "u"]
current  scope ScopeId(10): ["t", "u"]
Bindings Mismatch:
previous scope ScopeId(11): ["T", "U", "x"]
current  scope ScopeId(11): ["x"]
Bindings Mismatch:
previous scope ScopeId(12): ["T", "U", "u", "x"]
current  scope ScopeId(12): ["u", "x"]
Bindings Mismatch:
previous scope ScopeId(13): ["T", "U", "x"]
current  scope ScopeId(13): ["x"]

tasks/coverage/typescript/tests/cases/conformance/types/typeRelationships/typeInference/genericCallWithArrayLiteralArgs.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(1): ["T", "t"]
current  scope ScopeId(1): ["t"]

tasks/coverage/typescript/tests/cases/conformance/types/typeRelationships/typeInference/genericCallWithConstraintsTypeArgumentInference.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Base", "C", "Derived", "Derived2", "I", "b", "c", "d1", "d2", "foo", "foo2", "foo2b", "foo2c", "i", "r", "r10", "r11", "r2", "r3", "r3b", "r4", "r5", "r6", "r7", "r8", "r8b", "r9"]
current  scope ScopeId(0): ["Base", "C", "Derived", "Derived2", "b", "c", "d1", "d2", "foo", "foo2", "foo2b", "foo2c", "i", "r", "r10", "r11", "r2", "r3", "r3b", "r4", "r5", "r6", "r7", "r8", "r8b", "r9"]
Bindings Mismatch:
previous scope ScopeId(4): ["T", "t"]
current  scope ScopeId(4): ["t"]
Bindings Mismatch:
previous scope ScopeId(5): ["T", "U", "t", "u"]
current  scope ScopeId(5): ["t", "u"]
Bindings Mismatch:
previous scope ScopeId(6): ["T", "U", "u", "x"]
current  scope ScopeId(6): ["u", "x"]
Bindings Mismatch:
previous scope ScopeId(7): ["T", "U", "x"]
current  scope ScopeId(7): ["x"]
Bindings Mismatch:
previous scope ScopeId(8): ["T", "U"]
current  scope ScopeId(8): []
Bindings Mismatch:
previous scope ScopeId(12): ["T", "t", "u"]
current  scope ScopeId(12): ["t", "u"]
Bindings Mismatch:
previous scope ScopeId(13): ["U", "t", "u"]
current  scope ScopeId(13): ["t", "u"]
Bindings Mismatch:
previous scope ScopeId(14): ["T", "U", "t", "u"]
current  scope ScopeId(14): ["t", "u"]
Bindings Mismatch:
previous scope ScopeId(15): ["T", "U", "x"]
current  scope ScopeId(15): ["x"]
Bindings Mismatch:
previous scope ScopeId(16): ["T", "U", "u", "x"]
current  scope ScopeId(16): ["u", "x"]
Bindings Mismatch:
previous scope ScopeId(17): ["T", "U", "x"]
current  scope ScopeId(17): ["x"]

tasks/coverage/typescript/tests/cases/conformance/types/typeRelationships/typeInference/genericCallWithFunctionTypedArguments3.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["T", "a", "b", "foo4", "r", "r2"]
current  scope ScopeId(0): ["a", "b", "foo4", "r", "r2"]
Bindings Mismatch:
previous scope ScopeId(1): ["T", "U", "cb", "u"]
current  scope ScopeId(1): ["cb", "u"]

tasks/coverage/typescript/tests/cases/conformance/types/typeRelationships/typeInference/genericCallWithFunctionTypedArguments4.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(5): ["T", "U", "cb", "u"]
current  scope ScopeId(3): ["cb", "u"]

tasks/coverage/typescript/tests/cases/conformance/types/typeRelationships/typeInference/genericCallWithGenericSignatureArguments.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(1): ["T", "a", "b", "r"]
current  scope ScopeId(1): ["a", "b", "r"]
Bindings Mismatch:
previous scope ScopeId(14): ["T", "r6", "r6b", "x"]
current  scope ScopeId(14): ["r6", "r6b", "x"]
Bindings Mismatch:
previous scope ScopeId(19): ["T", "r7", "r7b", "r8", "x"]
current  scope ScopeId(19): ["r7", "r7b", "r8", "x"]
Bindings Mismatch:
previous scope ScopeId(24): ["T", "a", "b", "r"]
current  scope ScopeId(24): ["a", "b", "r"]
Bindings Mismatch:
previous scope ScopeId(25): ["T", "r8", "x"]
current  scope ScopeId(25): ["r8", "x"]

tasks/coverage/typescript/tests/cases/conformance/types/typeRelationships/typeInference/genericCallWithNonSymmetricSubtypes.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(1): ["T", "r", "x", "y"]
current  scope ScopeId(1): ["r", "x", "y"]

tasks/coverage/typescript/tests/cases/conformance/types/typeRelationships/typeInference/genericCallWithObjectTypeArgs2.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Base", "Derived", "Derived2", "I", "f", "f2", "i", "r", "r2", "r3", "r4"]
current  scope ScopeId(0): ["Base", "Derived", "Derived2", "f", "f2", "i", "r", "r2", "r3", "r4"]
Bindings Mismatch:
previous scope ScopeId(4): ["T", "U", "a"]
current  scope ScopeId(4): ["a"]
Bindings Mismatch:
previous scope ScopeId(5): ["T", "U", "a"]
current  scope ScopeId(5): ["a"]

tasks/coverage/typescript/tests/cases/conformance/types/typeRelationships/typeInference/genericCallWithObjectTypeArgsAndConstraints.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(3): ["T"]
current  scope ScopeId(3): []
Bindings Mismatch:
previous scope ScopeId(4): ["T", "t", "t2", "x"]
current  scope ScopeId(4): ["t", "t2", "x"]
Bindings Mismatch:
previous scope ScopeId(5): ["T", "t", "t2", "x"]
current  scope ScopeId(5): ["t", "t2", "x"]

tasks/coverage/typescript/tests/cases/conformance/types/typeRelationships/typeInference/genericCallWithObjectTypeArgsAndConstraints2.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Base", "Derived", "I", "f", "f2", "f3", "i", "r", "r2", "r3", "r4", "r5", "r6", "r7"]
current  scope ScopeId(0): ["Base", "Derived", "f", "f2", "f3", "i", "r", "r2", "r3", "r4", "r5", "r6", "r7"]
Bindings Mismatch:
previous scope ScopeId(3): ["T", "r", "x"]
current  scope ScopeId(3): ["r", "x"]
Bindings Mismatch:
previous scope ScopeId(5): ["T", "r", "x"]
current  scope ScopeId(4): ["r", "x"]
Bindings Mismatch:
previous scope ScopeId(6): ["T", "x", "y"]
current  scope ScopeId(5): ["x", "y"]

tasks/coverage/typescript/tests/cases/conformance/types/typeRelationships/typeInference/genericCallWithObjectTypeArgsAndIndexers.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(1): ["T", "x"]
current  scope ScopeId(1): ["x"]
Bindings Mismatch:
previous scope ScopeId(2): ["T", "arg", "b", "d", "e", "r2"]
current  scope ScopeId(2): ["arg", "b", "d", "e", "r2"]

tasks/coverage/typescript/tests/cases/conformance/types/typeRelationships/typeInference/genericCallWithObjectTypeArgsAndIndexersErrors.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(1): ["T", "x"]
current  scope ScopeId(1): ["x"]
Bindings Mismatch:
previous scope ScopeId(2): ["T", "arg", "b", "r2"]
current  scope ScopeId(2): ["arg", "b", "r2"]
Bindings Mismatch:
previous scope ScopeId(3): ["T", "U", "arg", "b", "d", "e", "r2", "u"]
current  scope ScopeId(3): ["arg", "b", "d", "e", "r2", "u"]

tasks/coverage/typescript/tests/cases/conformance/types/typeRelationships/typeInference/genericCallWithObjectTypeArgsAndNumericIndexer.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(1): ["T", "x"]
current  scope ScopeId(1): ["x"]
Bindings Mismatch:
previous scope ScopeId(2): ["T", "arg", "b", "r2"]
current  scope ScopeId(2): ["arg", "b", "r2"]
Bindings Mismatch:
previous scope ScopeId(3): ["T", "arg", "b", "d", "r2"]
current  scope ScopeId(3): ["arg", "b", "d", "r2"]
Bindings Mismatch:
previous scope ScopeId(4): ["T", "U", "arg", "b", "d", "r2"]
current  scope ScopeId(4): ["arg", "b", "d", "r2"]

tasks/coverage/typescript/tests/cases/conformance/types/typeRelationships/typeInference/genericCallWithObjectTypeArgsAndStringIndexer.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(1): ["T", "x"]
current  scope ScopeId(1): ["x"]
Bindings Mismatch:
previous scope ScopeId(2): ["T", "arg", "b", "r2"]
current  scope ScopeId(2): ["arg", "b", "r2"]
Bindings Mismatch:
previous scope ScopeId(3): ["T", "arg", "b", "d", "r2"]
current  scope ScopeId(3): ["arg", "b", "d", "r2"]
Bindings Mismatch:
previous scope ScopeId(4): ["T", "U", "arg", "b", "d", "r2"]
current  scope ScopeId(4): ["arg", "b", "d", "r2"]

tasks/coverage/typescript/tests/cases/conformance/types/typeRelationships/typeInference/genericCallWithOverloadedConstructorTypedArguments.ts
semantic error: Semantic Collector failed after transform
Missing SymbolId: NonGenericParameter
Missing SymbolId: _NonGenericParameter
Missing ReferenceId: NonGenericParameter
Missing ReferenceId: NonGenericParameter
Missing SymbolId: GenericParameter
Missing SymbolId: _GenericParameter
Missing ReferenceId: GenericParameter
Missing ReferenceId: GenericParameter

tasks/coverage/typescript/tests/cases/conformance/types/typeRelationships/typeInference/genericCallWithOverloadedFunctionTypedArguments.ts
semantic error: Semantic Collector failed after transform
Missing SymbolId: NonGenericParameter
Missing SymbolId: _NonGenericParameter
Missing ReferenceId: NonGenericParameter
Missing ReferenceId: NonGenericParameter
Missing SymbolId: GenericParameter
Missing SymbolId: _GenericParameter
Missing ReferenceId: GenericParameter
Missing ReferenceId: GenericParameter

tasks/coverage/typescript/tests/cases/conformance/types/typeRelationships/typeInference/genericClassWithObjectTypeArgsAndConstraints.ts
semantic error: Semantic Collector failed after transform
Missing SymbolId: Class
Missing SymbolId: _Class
Missing ReferenceId: Class
Missing ReferenceId: Class
Missing SymbolId: Interface
Missing SymbolId: _Interface
Missing ReferenceId: Interface
Missing ReferenceId: Interface

tasks/coverage/typescript/tests/cases/conformance/types/typeRelationships/typeInference/genericContextualTypes2.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["AssignAction", "Config", "LowInfer", "Meta", "PartialAssigner", "PropertyAssigner"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/conformance/types/typeRelationships/typeInference/genericContextualTypes3.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["AssignAction", "Config", "LowInfer", "Meta", "PartialAssigner", "PropertyAssigner"]
current  scope ScopeId(0): []

tasks/coverage/typescript/tests/cases/conformance/types/typeRelationships/typeInference/intraExpressionInferencesJsx.tsx
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["A", "AnimatedViewProps", "Animations", "B", "C", "Component", "Foo", "Props", "StyleParam", "_jsxFileName", "_reactJsxRuntime"]
current  scope ScopeId(0): ["Component", "Foo", "_jsxFileName", "_reactJsxRuntime"]
Bindings Mismatch:
previous scope ScopeId(10): ["T", "animations", "style"]
current  scope ScopeId(1): ["animations", "style"]
Bindings Mismatch:
previous scope ScopeId(17): ["T", "props"]
current  scope ScopeId(7): ["props"]

tasks/coverage/typescript/tests/cases/conformance/types/typeRelationships/typeInference/keyofInferenceIntersectsResults.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["X", "a", "b", "c"]
current  scope ScopeId(0): ["a", "b", "c"]

tasks/coverage/typescript/tests/cases/conformance/types/typeRelationships/typeInference/keyofInferenceLowerPriorityThanReturn.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["BookDef", "BookReq", "MakeTable", "bookTable", "f", "insertOnConflictDoNothing"]
current  scope ScopeId(0): ["bookTable", "f", "insertOnConflictDoNothing"]
Bindings Mismatch:
previous scope ScopeId(11): ["Def", "Req", "_conflictTarget", "_table"]
current  scope ScopeId(1): ["_conflictTarget", "_table"]

tasks/coverage/typescript/tests/cases/conformance/types/typeRelationships/typeInference/unionAndIntersectionInference1.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Bear", "ITest", "Man", "Maybe", "Pig", "Y", "assign", "baz1", "createTest", "createTestAsync", "destructure", "foo", "foo1", "func", "get", "isNonVoid", "isVoid", "mbp", "res", "result", "value", "x1", "x2", "y"]
current  scope ScopeId(0): ["assign", "baz1", "createTest", "createTestAsync", "destructure", "foo", "foo1", "func", "get", "isNonVoid", "isVoid", "res", "result", "value", "x1", "x2", "y"]
Bindings Mismatch:
previous scope ScopeId(2): ["a", "haveValue", "haveY", "r", "something"]
current  scope ScopeId(1): ["haveValue", "haveY", "something"]
Bindings Mismatch:
previous scope ScopeId(5): ["a", "value"]
current  scope ScopeId(4): ["value"]
Bindings Mismatch:
previous scope ScopeId(6): ["a", "value"]
current  scope ScopeId(5): ["value"]
Bindings Mismatch:
previous scope ScopeId(7): ["a", "value"]
current  scope ScopeId(6): ["value"]
Bindings Mismatch:
previous scope ScopeId(10): ["a", "value"]
current  scope ScopeId(9): ["value"]
Bindings Mismatch:
previous scope ScopeId(14): ["U", "x"]
current  scope ScopeId(12): ["x"]
Bindings Mismatch:
previous scope ScopeId(25): ["T"]
current  scope ScopeId(16): []
Bindings Mismatch:
previous scope ScopeId(26): ["T", "U", "a", "b"]
current  scope ScopeId(17): ["a", "b"]
reference Mismatch:
previous reference ReferenceId(51): Some("mbp")
current  reference ReferenceId(24): None
reference Mismatch:
previous reference ReferenceId(53): Some("mbp")
current  reference ReferenceId(26): None

tasks/coverage/typescript/tests/cases/conformance/types/typeRelationships/typeInference/unionAndIntersectionInference3.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["AB", "Bar1", "Bar2", "ComponentClass", "ComponentType", "Foo1", "Foo2", "FunctionComponent", "Maybe", "MyComponent", "Props", "R", "RouteComponentProps", "S", "T", "U", "a", "ab", "b", "f1", "f2", "g", "g1", "g2", "sa", "sx", "x1", "x2", "y1", "y2", "z"]
current  scope ScopeId(0): ["g", "x1", "x2", "y1", "y2", "z"]
Bindings Mismatch:
previous scope ScopeId(3): ["R", "S", "U", "com"]
current  scope ScopeId(1): ["com"]
reference Mismatch:
previous reference ReferenceId(44): Some("f1")
current  reference ReferenceId(2): None
reference Mismatch:
previous reference ReferenceId(45): Some("f2")
current  reference ReferenceId(3): None
reference Mismatch:
previous reference ReferenceId(46): Some("f2")
current  reference ReferenceId(4): None
reference Mismatch:
previous reference ReferenceId(47): Some("f1")
current  reference ReferenceId(5): None
reference Mismatch:
previous reference ReferenceId(64): Some("g1")
current  reference ReferenceId(6): None
reference Mismatch:
previous reference ReferenceId(65): Some("g2")
current  reference ReferenceId(7): None
reference Mismatch:
previous reference ReferenceId(66): Some("g2")
current  reference ReferenceId(8): None
reference Mismatch:
previous reference ReferenceId(67): Some("g1")
current  reference ReferenceId(9): None
reference Mismatch:
previous reference ReferenceId(74): Some("sa")
current  reference ReferenceId(11): None
reference Mismatch:
previous reference ReferenceId(76): Some("sx")
current  reference ReferenceId(13): None
reference Mismatch:
previous reference ReferenceId(78): Some("sa")
current  reference ReferenceId(15): None
reference Mismatch:
previous reference ReferenceId(80): Some("sx")
current  reference ReferenceId(17): None
reference Mismatch:
previous reference ReferenceId(104): Some("MyComponent")
current  reference ReferenceId(19): None
reference Mismatch:
previous reference ReferenceId(114): Some("ab")
current  reference ReferenceId(21): None
reference Mismatch:
previous reference ReferenceId(121): Some("a")
current  reference ReferenceId(22): None
reference Mismatch:
previous reference ReferenceId(122): Some("b")
current  reference ReferenceId(23): None

tasks/coverage/typescript/tests/cases/conformance/types/union/contextualTypeWithUnionTypeCallSignatures.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["IWithCallSignatures", "IWithCallSignatures2", "IWithCallSignatures3", "IWithCallSignatures4", "IWithNoCallSignatures", "x", "x2", "x3", "x4"]
current  scope ScopeId(0): ["x", "x2", "x3", "x4"]

tasks/coverage/typescript/tests/cases/conformance/types/union/contextualTypeWithUnionTypeIndexSignatures.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["IWithNoNumberIndexSignature", "IWithNoStringIndexSignature", "IWithNumberIndexSignature1", "IWithNumberIndexSignature2", "IWithStringIndexSignature1", "IWithStringIndexSignature2", "SomeType", "SomeType2", "x", "x2", "x3", "x4"]
current  scope ScopeId(0): ["x", "x2", "x3", "x4"]

tasks/coverage/typescript/tests/cases/conformance/types/union/contextualTypeWithUnionTypeMembers.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["I1", "I11", "I2", "I21", "arrayI1OrI2", "arrayOrI11OrI21", "i1", "i11", "i11Ori21", "i1Ori2", "i2", "i21"]
current  scope ScopeId(0): ["arrayI1OrI2", "arrayOrI11OrI21", "i1", "i11", "i11Ori21", "i1Ori2", "i2", "i21"]

tasks/coverage/typescript/tests/cases/conformance/types/union/discriminatedUnionTypes3.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Correct", "Err", "SomeReturnType", "example"]
current  scope ScopeId(0): ["example"]

tasks/coverage/typescript/tests/cases/conformance/types/union/unionTypeCallSignatures2.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["A", "B", "C", "a1", "a2", "a3", "f1", "f2", "f3", "n1", "n2", "n3", "s1", "s2", "s3"]
current  scope ScopeId(0): ["a1", "a2", "a3", "f1", "f2", "f3", "n1", "n2", "n3", "s1", "s2", "s3"]

tasks/coverage/typescript/tests/cases/conformance/types/union/unionTypeCallSignatures7.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["Callable", "f", "result"]
current  scope ScopeId(0): ["result"]
reference Mismatch:
previous reference ReferenceId(4): Some("f")
current  reference ReferenceId(0): None

tasks/coverage/typescript/tests/cases/conformance/types/union/unionTypeReduction.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["I2", "I3", "e1", "e2", "i2", "i3", "r1", "r2"]
current  scope ScopeId(0): ["e1", "e2", "i2", "i3", "r1", "r2"]

tasks/coverage/typescript/tests/cases/conformance/types/uniqueSymbol/uniqueSymbols.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["C", "C0", "C1", "Context", "I", "L", "N", "arrayOfConstCall", "asyncFuncReturnConstCall", "asyncFuncReturnLetCall", "asyncFuncReturnVarCall", "asyncGenFuncYieldConstCall", "asyncGenFuncYieldLetCall", "asyncGenFuncYieldVarCall", "c", "ce0", "constCall", "constInitToCReadonlyCall", "constInitToCReadonlyCallWithIndexedAccess", "constInitToCReadonlyCallWithTypeQuery", "constInitToCReadonlyStaticCall", "constInitToCReadonlyStaticCallWithTypeQuery", "constInitToCReadonlyStaticType", "constInitToCReadonlyStaticTypeAndCall", "constInitToCReadonlyStaticTypeAndCallWithTypeQuery", "constInitToCReadonlyStaticTypeWithTypeQuery", "constInitToCReadwriteCall", "constInitToCReadwriteCallWithIndexedAccess", "constInitToCReadwriteCallWithTypeQuery", "constInitToCReadwriteStaticCall", "constInitToCReadwriteStaticCallWithTypeQuery", "constInitToConstCall", "constInitToConstCallWithTypeQuery", "constInitToConstDeclAmbient", "constInitToConstDeclAmbientWithTypeQuery", "constInitToIReadonlyType", "constInitToIReadonlyTypeWithIndexedAccess", "constInitToIReadonlyTypeWithTypeQuery", "constInitToLReadonlyNestedType", "constInitToLReadonlyNestedTypeWithIndexedAccess", "constInitToLReadonlyNestedTypeWithTypeQuery", "constInitToLReadonlyType", "constInitToLReadonlyTypeWithIndexedAccess", "constInitToLReadonlyTypeWithTypeQuery", "constInitToLetCall", "constInitToVarCall", "constType", "constTypeAndCall", "fromAny", "funcInferredReturnType", "funcReturnConstCall", "funcReturnConstCallWithTypeQuery", "funcReturnLetCall", "funcReturnVarCall", "genFuncYieldConstCall", "genFuncYieldConstCallWithTypeQuery", "genFuncYieldLetCall", "genFuncYieldVarCall", "i", "l", "letCall", "letInitToConstCall", "letInitToConstDeclAmbient", "letInitToLetCall", "letInitToVarCall", "o", "o2", "o3", "o4", "promiseForConstCall", "s", "varCall", "varInitToConstCall", "varInitToConstDeclAmbient", "varInitToLetCall", "varInitToVarCall"]
current  scope ScopeId(0): ["C", "C0", "C1", "arrayOfConstCall", "asyncFuncReturnConstCall", "asyncFuncReturnLetCall", "asyncFuncReturnVarCall", "asyncGenFuncYieldConstCall", "asyncGenFuncYieldLetCall", "asyncGenFuncYieldVarCall", "ce0", "constCall", "constInitToCReadonlyCall", "constInitToCReadonlyCallWithIndexedAccess", "constInitToCReadonlyCallWithTypeQuery", "constInitToCReadonlyStaticCall", "constInitToCReadonlyStaticCallWithTypeQuery", "constInitToCReadonlyStaticType", "constInitToCReadonlyStaticTypeAndCall", "constInitToCReadonlyStaticTypeAndCallWithTypeQuery", "constInitToCReadonlyStaticTypeWithTypeQuery", "constInitToCReadwriteCall", "constInitToCReadwriteCallWithIndexedAccess", "constInitToCReadwriteCallWithTypeQuery", "constInitToCReadwriteStaticCall", "constInitToCReadwriteStaticCallWithTypeQuery", "constInitToConstCall", "constInitToConstCallWithTypeQuery", "constInitToConstDeclAmbient", "constInitToConstDeclAmbientWithTypeQuery", "constInitToIReadonlyType", "constInitToIReadonlyTypeWithIndexedAccess", "constInitToIReadonlyTypeWithTypeQuery", "constInitToLReadonlyNestedType", "constInitToLReadonlyNestedTypeWithIndexedAccess", "constInitToLReadonlyNestedTypeWithTypeQuery", "constInitToLReadonlyType", "constInitToLReadonlyTypeWithIndexedAccess", "constInitToLReadonlyTypeWithTypeQuery", "constInitToLetCall", "constInitToVarCall", "constTypeAndCall", "fromAny", "funcInferredReturnType", "funcReturnConstCall", "funcReturnConstCallWithTypeQuery", "funcReturnLetCall", "funcReturnVarCall", "genFuncYieldConstCall", "genFuncYieldConstCallWithTypeQuery", "genFuncYieldLetCall", "genFuncYieldVarCall", "letCall", "letInitToConstCall", "letInitToConstDeclAmbient", "letInitToLetCall", "letInitToVarCall", "o2", "o3", "o4", "promiseForConstCall", "varCall", "varInitToConstCall", "varInitToConstDeclAmbient", "varInitToLetCall", "varInitToVarCall"]
reference Mismatch:
previous reference ReferenceId(7): Some("constType")
current  reference ReferenceId(7): None
reference Mismatch:
previous reference ReferenceId(11): Some("constType")
current  reference ReferenceId(11): None
reference Mismatch:
previous reference ReferenceId(15): Some("constType")
current  reference ReferenceId(15): None
reference Mismatch:
previous reference ReferenceId(19): Some("constType")
current  reference ReferenceId(17): None
reference Mismatch:
previous reference ReferenceId(55): Some("c")
current  reference ReferenceId(45): None
reference Mismatch:
previous reference ReferenceId(56): Some("c")
current  reference ReferenceId(46): None
reference Mismatch:
previous reference ReferenceId(58): Some("c")
current  reference ReferenceId(47): None
reference Mismatch:
previous reference ReferenceId(60): Some("c")
current  reference ReferenceId(48): None
reference Mismatch:
previous reference ReferenceId(62): Some("c")
current  reference ReferenceId(49): None
reference Mismatch:
previous reference ReferenceId(64): Some("c")
current  reference ReferenceId(50): None
reference Mismatch:
previous reference ReferenceId(66): Some("i")
current  reference ReferenceId(51): None
reference Mismatch:
previous reference ReferenceId(68): Some("i")
current  reference ReferenceId(52): None
reference Mismatch:
previous reference ReferenceId(70): Some("i")
current  reference ReferenceId(53): None
reference Mismatch:
previous reference ReferenceId(72): Some("l")
current  reference ReferenceId(54): None
reference Mismatch:
previous reference ReferenceId(73): Some("l")
current  reference ReferenceId(55): None
reference Mismatch:
previous reference ReferenceId(75): Some("l")
current  reference ReferenceId(56): None
reference Mismatch:
previous reference ReferenceId(77): Some("l")
current  reference ReferenceId(57): None
reference Mismatch:
previous reference ReferenceId(79): Some("l")
current  reference ReferenceId(58): None
reference Mismatch:
previous reference ReferenceId(81): Some("l")
current  reference ReferenceId(59): None
reference Mismatch:
previous reference ReferenceId(92): Some("s")
current  reference ReferenceId(64): None
reference Mismatch:
previous reference ReferenceId(97): Some("s")
current  reference ReferenceId(69): None
reference Mismatch:
previous reference ReferenceId(100): Some("s")
current  reference ReferenceId(72): None
reference Mismatch:
previous reference ReferenceId(103): Some("s")
current  reference ReferenceId(75): None
reference Mismatch:
previous reference ReferenceId(104): Some("s")
current  reference ReferenceId(76): None
reference Mismatch:
previous reference ReferenceId(105): Some("s")
current  reference ReferenceId(77): None
reference Mismatch:
previous reference ReferenceId(106): Some("s")
current  reference ReferenceId(78): None
reference Mismatch:
previous reference ReferenceId(107): Some("s")
current  reference ReferenceId(79): None
reference Mismatch:
previous reference ReferenceId(109): Some("s")
current  reference ReferenceId(81): None
reference Mismatch:
previous reference ReferenceId(112): Some("s")
current  reference ReferenceId(84): None
reference Mismatch:
previous reference ReferenceId(115): Some("s")
current  reference ReferenceId(87): None
reference Mismatch:
previous reference ReferenceId(118): Some("s")
current  reference ReferenceId(90): None
reference Mismatch:
previous reference ReferenceId(121): Some("s")
current  reference ReferenceId(93): None
reference Mismatch:
previous reference ReferenceId(122): Some("s")
current  reference ReferenceId(94): None
reference Mismatch:
previous reference ReferenceId(123): Some("s")
current  reference ReferenceId(95): None
reference Mismatch:
previous reference ReferenceId(124): Some("s")
current  reference ReferenceId(96): None
reference Mismatch:
previous reference ReferenceId(125): Some("s")
current  reference ReferenceId(97): None
reference Mismatch:
previous reference ReferenceId(127): Some("o")
current  reference ReferenceId(99): None
reference Mismatch:
previous reference ReferenceId(128): Some("s")
current  reference ReferenceId(100): None
reference Mismatch:
previous reference ReferenceId(129): Some("o")
current  reference ReferenceId(101): None
reference Mismatch:
previous reference ReferenceId(131): Some("o")
current  reference ReferenceId(103): None
reference Mismatch:
previous reference ReferenceId(135): Some("s")
current  reference ReferenceId(106): None
reference Mismatch:
previous reference ReferenceId(143): Some("s")
current  reference ReferenceId(112): None
reference Mismatch:
previous reference ReferenceId(148): Some("s")
current  reference ReferenceId(117): None
reference Mismatch:
previous reference ReferenceId(152): Some("s")
current  reference ReferenceId(121): None
reference Mismatch:
previous reference ReferenceId(157): Some("s")
current  reference ReferenceId(126): None
reference Mismatch:
previous reference ReferenceId(159): Some("s")
current  reference ReferenceId(128): None
reference Mismatch:
previous reference ReferenceId(161): Some("s")
current  reference ReferenceId(130): None
reference Mismatch:
previous reference ReferenceId(173): Some("s")
current  reference ReferenceId(132): None
reference Mismatch:
previous reference ReferenceId(174): Some("s")
current  reference ReferenceId(133): None
reference Mismatch:
previous reference ReferenceId(175): Some("s")
current  reference ReferenceId(134): None
reference Mismatch:
previous reference ReferenceId(176): Some("s")
current  reference ReferenceId(135): None
reference Mismatch:
previous reference ReferenceId(177): Some("s")
current  reference ReferenceId(136): None

tasks/coverage/typescript/tests/cases/conformance/typings/typingsLookupAmd.ts
semantic error: Bindings Mismatch:
previous scope ScopeId(0): ["B"]
current  scope ScopeId(0): []

